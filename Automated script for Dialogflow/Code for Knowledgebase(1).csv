Give me some sample code of X XSS Protection Header in asp ?,"XXSSProtection header\n\n\n Example:\n\n\n /*\n In order to set the XXSSProtection header, you'll have to add the following \n code to the head of your application, the following code could be used in your controller:\n */\n \n Response.AppendHeader(""XXSSProtection:1"", ""mode=block""); \n\n /*\n In your classes you can use the following code:\n */\n \n HttpContext.Current.Response.AppendHeader(""XXSSProtection:1"", ""mode=block"");\n \n\n"
Give me some sample code of Session Cookies (Domain) in asp ?,"Session cookies (domain)\n\n\n Example:\n\n\n /*\n Setting the ""Domain"" attribute to a too permissive value, such as ""example.com"" \n allows an attacker to launch attacks on the session IDs between different hosts and \n web applications belonging to the same domain, known as crosssubdomain cookies.\n For example, vulnerabilities in www.example.com might allow an attacker to get access \n to the session IDs from secure.example.com.\n */\n \n <system.web>\n <httpCookies domain=""demo.mySite.com"" />\n </system.web>\n \n"
Give me some sample code of X Content Type Options header in asp ?,"XContentTypeOptions header\n\n\n Example:\n\n\n /*\n In order to set the ""XContentTypeOptions"" header you'll have to add the \n following code to the head of your application, the following code could be used in your controller:\n */\n \n Response.AppendHeader(""XContentTypeOptions"", ""nosniff""); \n \n /*\n In your classes you can use the following code:\n */\n \n HttpContext.Current.Response.AppendHeader(""XContentTypeOptions"", ""nosniff""); \n \n\n"
Give me some sample code of Enforce secure password in asp ?,"Enforce secure password\n\n\n Example:\n\n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n using System.IO;\n\n\n namespace MvcApplication1.Controllers\n {\n public class passwordcheck\n {\n public bool checkPassword(string password)\n {\n string error = """";\n bool complete = true;\n\n /*\n Here we define the minimal expected value's for your password.\n The password must at least contain a Capital letter, a normal letter, a special character\n a number and must be at least 8 characters long\n */\n string[] pattern = new string[3] { ""[09]"", ""[AZ]"", ""[az]"" };\n\n foreach (string validation in pattern)\n {\n //Now if the regex detects any missing character than we will set complete to false\n Regex regex = new Regex(validation);\n Match match = regex.Match(password);\n\n if (!match.Success)\n {\n error = ""You did not enter a valid password"";\n complete = false;\n }\n }\n\n try\n {\n /*\n Also very important is the fact that you have to take into consideration that\n Password1! is a valid password according to password standards. This however is not the case since\n this password is included in almost every dictionary attack system. So we have to prevent \n the user from using these weak passwords, this we do by defining these bad passwords in a text \n file and compare the user's password with the bad passwords defined in the text file.\n */\n\n StreamReader sr = new StreamReader(@""C:\Users\Public\xml\test.txt"", true);\n String FileText = sr.ReadToEnd().ToString();\n\n string[] strTemp = FileText.Split(',');\n\n foreach (string value in strTemp)\n {\n if (value == password)\n {\n error = ""Your password was a bad password!"";\n complete = false;\n }\n }\n\n sr.Close();\n }\n catch{\n HttpContext.Current.Response.Write(""catching file failed"");\n throw;\n }\n\n //The last step is checking the password length to see if it is 8 characters or bigger\n if (password.Length < 8)\n {\n error = ""The password was to short"";\n complete = false;\n }\n\n if (complete == true)\n {\n //Do further operation\n HttpContext.Current.Response.Write(""Good job password was ok!"");\n return true;\n }else{\n HttpContext.Current.Response.Write(error);\n return false;\n }\n }\n }\n }\n\n"
Give me some sample code of RFD File Download Injection Prevention in asp ?,"RFD and file download injections\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Net;\n using System.Data.SqlClient;\n\n namespace MvcApplication1.Controllers\n {\n public class downloadFiles\n {\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new\n SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""download""].ConnectionString);\n\n private string fileName;\n private bool proceed = true;\n private string mimeType;\n\n validation validate = new validation();\n whitelist whitelist = new whitelist();\n\n public void downloadUserFiles(int fileID)\n {\n /*\n For the sake of example we only allow the users to download their own files\n by identifier based sql query's. As you can see we select the filename\n by its id. in this case we prevent direct userinput into the disposition header.\n */\n\n //Since we only expect an integer back from the user we validate the userinput for integers\n if (validate.validateInput(Convert.ToString(fileID), ""numeric"", ""invalid input"", ""HIGH"") == false) { proceed = false; }\n\n if (proceed == true)\n {\n conn.Open();\n string query = string.Format(""SELECT * FROM downloads WHERE userID=@userID and fileID=@fileID"");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", Session[""userID""]);\n cmd.Parameters.AddWithValue(""@fileID"", fileID);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n fileName = Convert.ToString(oReader[""fileName""]);\n mimeType = Convert.ToString(oReader[""mimeType""]);\n }\n }\n if (fileName != null)\n {\n try\n {\n /*\n We also define the mimetype per download file.\n This is because whenever a user can only download images it is not necessary to set\n an uncommon contenttype header for it.\n NOTE: These mimetypes should not be stored based upon the mimetype which was send \n the response header when the user uploaded the file. This value can be easily \n manipulated with an intercepting proxy. You should get the mimetype from the file\n itself after it was stored on the server.\n */\n System.Web.HttpResponse response = System.Web.HttpContext.Current.Response;\n response.ClearContent();\n response.Clear();\n response.ContentType = mimeType;\n response.AppendHeader(""CacheControl"", ""nocache"");\n response.AddHeader(""ContentDisposition"", ""attachment; filename="" + fileName + "";"");\n response.WriteFile(@""\\servername\folder1\folder2\folder3\"" + fileName + """");\n response.Flush();\n response.End();\n }\n catch (NullReferenceException e){\n if (e.Source != null)\n {\n HttpContext.Current.Response.Write(""error!"");\n }\n }\n }\n }\n }\n\n public void fixedDownloads(string download)\n {\n /*\n The second example is for whenever you are providing users with fixed downloads\n such as manuals etc. We do not only check if the file just exists, because that would\n allow an attacker to also download important other files from your server, so instead\n we whitelist them.\n */\n if (whitelist.whitelisting(""file1.txt,file2.txt"", download) != false)\n {\n System.Web.HttpResponse response = System.Web.HttpContext.Current.Response;\n response.ClearContent();\n response.Clear();\n response.ContentType = ""text/plain"";\n response.AppendHeader(""CacheControl"", ""nocache"");\n response.AddHeader(""ContentDisposition"", ""attachment; filename="" + download + "";"");\n response.WriteFile(@""\\servername\folder1\folder2\folder3\"" + download + """");\n response.Flush();\n response.End();\n }\n }\n }\n }\n"
Give me some sample code of Audit Logs in asp ?,"Audit logs\n\n\n Example:\n\n\n  using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.IO;\n using System.Data.SqlClient;\n using System.ComponentModel.DataAnnotations.Schema;\n using System.ComponentModel.DataAnnotations;\n\n namespace MvcApplication1.Controllers\n {\n [Table(""counter"")]\n public class auditLogs\n {\n\n //Getters and setters for our user method\n [Key]\n public int countID { get; set; }\n public int userID { get; set; }\n public int count { get; set; }\n public int blocker { get; set; }\n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new \n SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n public void SetLog(string session, string message, string state, string threat)\n {\n using (StreamWriter writer = new StreamWriter(@""C:\Users\Public\xml\logs.txt"", true))\n {\n writer.WriteLine(session + "" "" + message + "" "" + HttpContext.Current.Request.ServerVariables[""REMOTE_ADDR""] +\n "" "" + state + "" "" + DateTime.Now + "" "" + threat);\n }\n }\n\n public void counter(int counting)\n {\n /*\n First we select the counts from the count table in order to verify if the user session should be terminated\n or that the user should be locked out.\n */\n conn.Open();\n\n string query = string.Format(""SELECT * from counter WHERE userID = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n count = Convert.ToInt32(oReader[""count""]);\n blocker = Convert.ToInt32(oReader[""blocker""]);\n }\n }\n\n //We add the counting to the database results for the final value\n int finalCount = counting += count;\n int finalBlock = counting += blocker;\n\n /*\n then we update the count table in order to keep track of the number of counts\n */\n try\n {\n using (SqlCommand command = conn.CreateCommand())\n {\n command.CommandText = ""UPDATE counter set count = @count, blocker = @blocker WHERE userID = @userID"";\n\n //Again we bind the parameters in order to prevent SQL injections\n command.Parameters.AddWithValue(""@count"", finalCount);\n command.Parameters.AddWithValue(""@blocker"", finalCount);\n command.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n command.ExecuteNonQuery();\n }\n }\n catch (SqlException e){\n if (e.Source != null)\n {\n System.Web.HttpContext.Current.Response.Write(""SQL insert query error in update counter"");\n throw;\n }\n }\n conn.Close();\n\n\n /*\n After these steps we check whether the user should be blocked, whenever the count is equal to 12 we take\n further actions by means of blocking the users account and terminating his session\n */\n\n if (finalBlock >= 12)\n {\n try\n {\n using (SqlCommand command = conn.CreateCommand())\n {\n conn.Open();\n string access = ""FALSE"";\n command.CommandText = ""UPDATE users set access = @access WHERE userID = @userID"";\n\n //Again we bind the parameters in order to prevent SQL injections\n command.Parameters.AddWithValue(""@access"", access);\n command.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n command.ExecuteNonQuery();\n\n HttpContext.Current.Session[""authenticateUser""] = """";\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n }\n catch (SqlException e){\n if (e.Source != null)\n {\n System.Web.HttpContext.Current.Response.Write(""SQL insert query error"");\n System.Web.HttpContext.Current.Response.Write(e);\n }\n }\n }\n \n /*\n If the count hit three, the user gets a warning by means of a session termination.\n Whenever this termination occurs three times he will lock out his account.\n */\n if (finalCount >= 3)\n {\n HttpContext.Current.Session[""authenticateUser""] = """";\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n }\n }\n }\n"
Give me some sample code of CSRF Token in asp ?,"CSRF Token\n\n\n Example:\n \n \n /*\n For CSRF Token we used a separate class outside of the normal controller, since\n it must be reused on several locations throughout the application\n \n First after a successful validation of a user login, the application must also start a session\n which contains the ""cross site request forgery"" token.\n */\n \n /*\n For generating the token we want to use a secure cryptographic function\n in order to use RNGCryptoServiceProvider we must first add :\n using System.Security.Cryptography;\n */\n RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();\n\n //Then we generate a long value token containing a high entropy\n byte[] buffer = new byte[128];\n\n rng.GetBytes(buffer);\n\n //Then we base64 encode the string\n string csrftoken = System.Convert.ToBase64String(buffer);\n\n System.Web.HttpContext.Current.Session[""CSRF""] = csrftoken; \n\n /*\n The next step is implementing this random token in each form field as a hidden input parameter\n and send it to a function which checks if the submitted token is equal to the one set after successful validation.\n */\n\n <form method=""post"" action=""/Home/csrf"">\n <input type=""text"" name=""testValue"" />\n <input type=""hidden"" name=""csrftoken"" value=""@Session[""CSRF""];"" />\n <input type=""submit"" value=""submit the form"" />\n </form>\n \n //here we are sending the token towards the function which does the token validation \n public void checkCSRF(string token)\n {\n string Sessiontoken = Convert.ToString(System.Web.HttpContext.Current.Session[""CSRF""]);\n \n //We compare the incoming token with the current session Token which was assigned on login\n if(Sessiontoken != token)\n { \n /*\n If there was no match the authentication session will be emptied and sessions\n Will be abandoned, we redirect the user towards the login page.\n */\n \n HttpContext.Current.Session[""authenticateUser""] = """";\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Response.Redirect(""/login"", true); \n } \n \n } \n \n\n\n"
Give me some sample code of Logout in asp ?,"Logout functionality\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n\n namespace MvcApplication1.Controllers\n {\n public class logout\n {\n public void logOut()\n { \n //We clear abandon and remove all sessions before we start\n HttpContext.Current.Session.Clear();\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Session.RemoveAll();\n  \n //Double check this and empty your session manually\n HttpContext.Current.Session[""Authenticated""] = """";\n\n //Clear the aspsessionID\n if (HttpContext.Current.Request.Cookies[""ASP.NET_SessionId""] != null)\n {\n HttpContext.Current.Response.Cookies[""ASP.NET_SessionId""].Value = string.Empty;\n HttpContext.Current.Response.Cookies[""ASP.NET_SessionId""].Expires = DateTime.Now.AddMonths(20);\n }\n\n //Clear our custom set cookie.\n if (HttpContext.Current.Request.Cookies[""AuthToken""] != null)\n {\n HttpContext.Current.Response.Cookies[""AuthToken""].Value = string.Empty;\n HttpContext.Current.Response.Cookies[""AuthToken""].Expires = DateTime.Now.AddMonths(20);\n }\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n }\n }"
Give me some sample code of Timeout a Session in asp ?,"Timeout a session\n\n\n Example:\n\n\n /*\n Within your web.config you can configure your session idle timeout.\n The default time is set to 20 minutes.\n */\n \n <configuration>\n  <system.web>\n  <sessionState mode=""InProc""\n cookieless=""true""\n timeout=""20""/> < Here is where we set the timeout by minutes\n  </sessionState>\n  </system.web>\n </configuration>"
Give me some sample code of White listing in asp ?,"Whitelisting\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n\n namespace MvcApplication1.Controllers\n {\n public class whitelist\n {\n //Include auditlog class\n auditLogs Log = new auditLogs();\n\n public bool whitelisting(string allowed, string input)\n {\n /*\n Here we define a whitelist of pages we want the user allow to be redirected to, all \n patterns are terminated whenever they not comply with the predefined withelist\n */\n\n string[] pattern = allowed.Split(',');\n\n //For validation if the file returned true\n bool validated = false;\n\n //To catch the user submitting evil requests we count the number of times the foreach hits false\n int count = 0;\n int countArray = 0;\n\n int counter = allowed.Length;\n\n foreach (string item in pattern)\n {\n //If filename is equal to the predefined items\n if (input == item)\n {\n validated = true;\n count = 1;\n }\n\n //Here we add up the counts, if they are equal we know the function did not hit a valid filename\n count++;\n countArray++;\n }\n \n if (countArray == count)\n {\n //this breach has to be reported into the log files\n Log.setLog(HttpContext.Current.Session[""userID""], ""Audit log message!"", ""FAIL"", ""HIGH"");\n Log.setCounter.count(3);\n }\n return validated;\n }\n }\n }"
Give me some sample code of Random Password Token Generation in asp ?,Random password/token generation\n\n\n Example:\n\n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Security.Cryptography;\n\n namespace MvcApplication1.Controllers\n {\n public class randomizer\n {\n public string generate(int numberOfBytes)\n {\n /*\n For generating the password we want to use a secure cryptographic function\n */\n RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();\n\n //Then set the size of the password\n byte[] buffer = new byte[numberOfBytes];\n rng.GetBytes(buffer);\n\n //Then we base64 encode the string in order to prevent null bytes\n string randomString = System.Convert.ToBase64String(buffer);\n\n return randomString;\n }\n }\n }\n\n \n
Give me some sample code of Directory Path Traversal in asp ?,"Path traversal\n\n\n Example:\n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n using System.IO;\n\n namespace MvcApplication1.Controllers\n {\n public class rewrite\n {\n auditLogs Log = new auditLogs();\n inputvalidation validate = new inputvalidation();\n whitelist listme = new whitelist();\n\n public void getFiles(string getFile)\n {\n /*\n First, we want to filter the filenames for expected values. For this example we use only use 09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input. \n */\n bool validated = true;\n\n //see the ""input validation"" code example for more detailed information about this function\n if (validate.validateInput(getFile, ""numeric"", ""Failed to get file"", ""HIGH"") == false) { validated = false;}\n\n /*\n see the ""whitelisting"" code example for more detailed information about this function\n Let's assume there are three files named 1,2,3\n */\n \n if (listme.whitelisting(""1,2,3"", getFile) == false) { validated = false; }\n\n //Only if the pattern was true we allow the variable into the streamreader function\n if (validated == true)\n {\n try\n {\n StreamReader sr = new StreamReader(@""C:\Users\Public\xml\"" + getFile + "".txt"", true);\n String FileText = sr.ReadToEnd().ToString();\n\n sr.Close();\n }\n catch(DirectoryNotFoundException e){\n if (e.Source != null)\n {\n HttpContext.Current.Response.Write(""catching file failed"");\n }\n }\n }else{\n HttpContext.Current.Response.Write(""invalid userinput was detected!"");\n }\n }\n }\n }\n \n\n"
Give me some sample code of Session Cookies HttpOnly in asp ?,"Session cookies HttpOnly\n\n\n Example:\n\n /*\n Whenever a session is started, the ""httpOnly"" option should always be set\n in order to prevent session data to be stolen by attackers.\n \n By default, .NET 2.0 sets the HttpOnly attribute for:\n Session ID,\n Forms Authentication cookie\n\n In .NET 2.0, HttpOnly can also be set via the HttpCookie object for all custom application \n cookies via web.config in the system.web/httpCookies element\n */\n \n <httpCookies httpOnlyCookies=""true""> \n\n //Or programmatically\n //C Code:\n\n HttpCookie myCookie = new HttpCookie(""AuthToken"", guid);\n HttpContext.Current.Response.Cookies.Add(myCookie);\n myCookie.HttpOnly = true;\n\n \n\n \n"
Give me some sample code of SQL Query in asp ?,"SQL query\n\n\n Example:\n\n\n /*\n In c MVC there are a lot of different methods in order to process your SQL query's to \n the database. Most of them are already secure by design and leave little to no room for\n error such as SQL to LinQ or doing your database handling by the entity framework.\n\n However if you want to use the sql command method you must use this functionality by\n means of prepared statements in order to prevent sql injections.\n */\n\n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.ComponentModel.DataAnnotations.Schema;\n using System.ComponentModel.DataAnnotations;\n using System.Data.SqlClient;\n using System.Web.SessionState;\n\n\n namespace MvcApplication1.Models\n {\n [Table(""users"")]\n public class users\n {\n //Getters and setters for our user method\n [Key]\n \n public int userID { get; set; }\n public string username { get; set; }\n public string email { get; set; }\n\n //First we include the audit log class.\n //AuditLog Log = new AuditLog();\n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new \n SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n public void selectStatement()\n { \n //Open the database connection\n conn.Open();\n\n try\n { \n string query = string.Format(""SELECT * from users WHERE userId = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n username = oReader[""username""].ToString();\n email = oReader[""email""].ToString();\n\n }\n }\n //close the connection again\n conn.Close();\n }\n catch(SqlException e){\n if (e.Source != null)\n {\n System.Web.HttpContext.Current.Response.Write(""Invalid select query"");\n throw;\n }\n }\n }\n\n public void insertStatement()\n { \n //We open the connection towards the database\n conn.Open();\n\n try\n {\n using (SqlCommand command = conn.CreateCommand())\n { \n \n command.CommandText = ""INSERT INTO users(username,email) VALUES(@param1,@param2)""; \n \n //Again we bind the parameters in order to prevent SQL injections\n command.Parameters.AddWithValue(""@param1"", username); \n command.Parameters.AddWithValue(""@param2"", email); \n\n command.ExecuteNonQuery(); \n }\n }\n catch(SqlException e){\n if(e.Source != null)\n {\n System.Web.HttpContext.Current.Response.Write(""SQL insert query error"");\n throw;\n }\n }\n\n //we close the connection again\n conn.Close();\n }\n }\n }\n \n \n\n\n\n \n"
Give me some sample code of Re Authentication in asp ?,"Reauthentication\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Data.SqlClient;\n using System.ComponentModel.DataAnnotations;\n using System.Web.SessionState;\n\n namespace MvcApplication1.Controllers\n {\n public class reauth\n {\n //Getters and setters for our user method\n [Key]\n public int userID { get; set; }\n public string username { get; set; }\n public string password { get; set; }\n public string access { get; set; }\n public string salt { get; set; }\n public int privilege { get; set; }\n\n //First we include the audit log class.\n auditLogs Log = new auditLogs();\n\n //Second we include the password hash.\n hashing hash = new hashing();\n\n //Third we include the random password/token class.\n randomizer CSRF = new randomizer();\n\n //Add the logout class\n logout logoff = new logout();\n\n public bool reAuthentication()\n {\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new SqlConnection\n (System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n bool loggedin = false;\n string passwordHash = """";\n conn.Open();\n\n //Here we select the user from the users table by the sessionID\n string query = string.Format(""SELECT * from users WHERE userID = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", 1);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n passwordHash = Convert.ToString(oReader[""password""]);\n salt = Convert.ToString(oReader[""salt""]);\n }\n }\n\n /*\n We validate the password see ""Password Storage(salting stretching hashing)"" in the code examples\n for more detailed information:\n */\n if (hash.Validate(passwordHash, salt, password) == true)\n {\n //the connection has to be reported into the log files\n Log.SetLog(""Null"", ""login was OK!"", ""SUCCESS"", ""NULL"");\n\n /*\n This is is to prevent session fixation, after login we create a new cookie which\n we than use to authenticate. This value can not be fixated since it is set after \n login.\n \n create a new GUID and save into the session:\n */\n\n //Al the random tokens will now be changed\n string guid = Guid.NewGuid().ToString();\n HttpContext.Current.Session[""AuthToken""] = guid;\n\n // now create a new cookie with this guid value\n HttpContext.Current.Response.Cookies.Add(new HttpCookie(""AuthToken"", guid));\n\n /*\n Now we create a random value for our CSRF Token. See ""Random password/token generation"" in\n the code examples for more detailed information:\n */\n string CSRftoken = CSRF.generate(25);\n System.Web.HttpContext.Current.Session[""CSRF""] = CSRftoken;\n\n HttpContext.Current.Session[""Authenticated""] = ""access"";\n loggedin = true;\n }else{\n //If things went wrong we destroy the entire session. see ""logout"" code example for more info:\n logoff.logOut();\n }\n return loggedin;\n }\n }\n }\n\n"
Give me some sample code of Open Forwards & Redirects in asp ?,"Open forwards & redirects\n\n\n Example:\n\n \n /*\n When using forwards & redirects you should make sure the URL is being explicitly \n declared in the code and cannot be manipulated by an attacker like:\n */\n \n HttpContext.Current.Response.Redirect(""/login"", true);\n \n /*\n Generally you should avoid getting input into the redirect which could contain\n userinput by any means. if for any reason this may not be feasible than you \n should make a whitelist input validation for the redirect like so:\n */\n \n  \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n\n\n namespace MvcApplication1.Controllers\n {\n\n public class OpenForwards\n {\n public void openForwards(string redirect)\n {\n whitelist listMe = new whitelist();\n\n bool validated = true;\n \n //For more information about whitelisting see the ""Whitelisting"" code example:\n if (listMe.whitelisting(""page1,page2,page3"", redirect) == false) { validated = false; }\n \n //Only if the pattern was true we allow the variable into the streamreader function\n if (validated == true)\n {\n try\n {\n HttpContext.Current.Response.Redirect(redirect, true);\n }\n catch\n {\n HttpContext.Current.Response.Write(""redirect failed"");\n }\n }\n }\n }\n }\n \n\n"
Give me some sample code of Anti clickjacking header in asp ?,"Anti clickjacking headers\n\n\n Example:\n\n /*\n One way to defend against clickjacking is to include a ""framebreaker"" script in each \n page that should not be framed. The following methodology will prevent a webpage from \n being framed even in legacy browsers, that do not support the XFrameOptionsHeader.\n\n In the document HEAD element, add the following:\n \n First apply an ID to the style element itself:\n */\n \n <style id=""antiClickjack"">body{display:none !important;}</style>\n\n //And then delete that style by its ID immediately after in the script:\n\n <script type=""text/javascript"">\n  if (self === top) {\n  var antiClickjack = document.getElementById(""antiClickjack"");\n  antiClickjack.parentNode.removeChild(antiClickjack);\n  } else {\n  top.location = self.location;\n  }\n </script>\n\n \n /*\n The second option is to use ""security headers"".\n There are two options for setting the ""anticlickjacking"" headers in your application:\n */\n\n //this will completely prevent your page from being displayed in an iframe.\n Response.AddHeader(""XFrameOptions"", ""deny"")\n\n\n //this will completely prevent your page from being displayed in an iframe on other sites.\n Response.AddHeader(""XFrameOptions"", ""SAMEORIGIN"")\n \n\n\n\n\n \n"
Give me some sample code of X Path query in asp ?,"Xpath query\n\n\n Example:\n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Diagnostics;\n using System.Xml;\n using System.Xml.XPath;\n namespace MvcApplication1.Controllers\n {\n public class Class1\n {\n public string selectPath(string employeeID)\n {\n  /*\n In order to prevent xpath injections we have to treat these query's similar as \n to the sql query's. An option would be to use a precompiled XPath query.\n But since this is a third party library I consider it untrustworthy and would\n rather use our own crafted escaping function.\n \n NOTE: if you want to look into the precompiled xpath library you can find more\n detailed information about it on: http://www.tkachenko.com/blog/archives/000385.html\n */\n\n /*\n As with every injection prevention we first focus on the expected user values\n in this case we expect an integer we use our single input validation method for integers\n See the ""input validation"" code example for more detailed information.\n  */\n\n bool continueFunction = true;\n string foo = """";\n\n inputvalidation validate = new inputvalidation();\n\n //Here we put the variable in our inputvalidation method in order to prevent untrustworthy userinput from parsing\n //NOTE: logging and countering is also done in your validation method\n if (validate.validateInput(Convert.ToString(employeeID), ""numeric"", ""xpath input validation"", ""HIGH"") == false) \n { continueFunction = false; }\n\n //Only if our validation function returned true we put the userinput in the function\n if (continueFunction == true)\n {\n XmlDocument xmldoc = new XmlDocument();\n try\n {\n xmldoc.Load(@""C:\Users\Public\xml\register.xml"");\n foo = xmldoc.SelectSingleNode(""/Employees/Employee[ID="" + employeeID + ""]"").InnerText;\n }\n catch (Exception e){\n if (e.Source != null)\n {\n System.Web.HttpContext.Current.Response.Write(""Oops something went wrong"");\n throw;\n }\n }\n }else{\n System.Web.HttpContext.Current.Response.Write(""unexpected userinput detected!"");\n }\n return foo;\n }\n }\n }\n\n /* \n The same principle as seen in the example applies for whenever you expect alphanumeric values or even names. \n The only difference is that you take another validation type from the input validation function \n i.e whenever you must accept names like O'Reilly you must encode the quotes.See the ""input validation"" code example\n for more detailed information about these escape methods.\n */"
Give me some sample code of Encoding in asp ?,"Encoding\n\n\n Example:\n \n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n\n namespace MvcApplication1.Controllers\n {\n public class encoding\n {\n public string encoder(string input, string allowed)\n {\n /*\n We can specify also special characters which where allowed in order to keep\n track of any unwanted special characters, even though they will be encoded\n violations of your system must have consequences!\n */\n Regex regex = new Regex(""^[azAZ09"" + allowed + ""]+$"");\n Match match = regex.Match(input);\n if (!match.Success)\n {\n Log.SetLog(Session['userID'], logMessage, date, ""FAIL"", threatLevel);\n Log.count(1);\n input = ""Error"";\n }\n //We return the userinput encoded\n return HttpUtility.HtmlEncode(input);\n }\n }\n }"
Give me some sample code of Secure Session Cookies in asp ?,"Secure Session Cookies\n\n\n Example:\n\n \n /*\n Whenever a cookie is sent over a secured connection, the cookie should be set\n with the secure flag, in order to guarantee the integrity of the data it contains.\n\n in the <system.web> element, add the following element:\n\n <httpCookies requireSSL=""true"" />\n\n whenever you have a <forms> element in your system.web block, this setting will \n override the setting in httpCookies, changing it's value back to false.\n\n In that case, you need to add the requireSSL=""true"" attribute to the forms element as well.\n */\n \n <system.web>\n <authentication mode=""Forms"">\n <forms requireSSL=""true""> < secure flag\n /* forms content */\n </forms>\n </authentication>\n </system.web>\n \n \n //Or programmatically\n //C Code:\n \n HttpCookie myCookie = new HttpCookie(""AuthToken"", guid);\n HttpContext.Current.Response.Cookies.Add(myCookie);\n myCookie.Secure = true;\n\n\n\n \n"
Give me some sample code of Crossdomain XML  in asp ?,"Crossdomain XML \n\n\n Example:\n\n \n A bad example of a Crossdomain XML would be:\n\n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n Because it allows access from all other domains.\n\n Instead of this approach you might want to use the following restrictions. \n Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" \n xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>\n\n\n \n"
Give me some sample code of XML External Entities in asp ?,"XML External entities\n\n\n Example:\n\n\n /*\n The overall prevention method for loading external entities is adding the following line of code:\n This line of code function tells the underlying libxml parsing to not try to interpret the values \n of the entities in the incoming XML and leave the entity references intact.\n */\n\n /*\n In .NET Framework versions 3.5 and earlier, DTD parsing behavior is controlled by the \n Boolean ProhibitDtd property found in the System.Xml.XmlTextReader and System.Xml.XmlReaderSettings\n classes. Set this value to true to disable inline DTDs completely:\n */\n \n XmlTextReader reader = new XmlTextReader(stream);\n reader.ProhibitDtd = true;\n\n //or\n\n XmlReaderSettings settings = new XmlReaderSettings();\n settings.ProhibitDtd = true;\n XmlReader reader = XmlReader.Create(stream, settings);\n\n /*\n The default value of ProhibitDtd in XmlReaderSettings is true, but the default value \n of ProhibitDtd in XmlTextReader is false, which means that you have to explicitly set \n it to true to disable inline DTDs (NOT RECOMMENDED).\n */\n \n /*\n In .NET Framework version 4.0, DTD parsing \n behavior has been changed. The ProhibitDtd property has been deprecated in favor of \n the new DtdProcessing property. You can set this property to Prohibit (the default value) \n to cause the runtime to throw an exception if a <!DOCTYPE> element is present in the XML:\n \n At this point, we have hardened this code so that it is much less vulnerable to XML bombs, \n but we haven't yet addressed the dangers posed by malicious external entities. \n You can improve your resilience against these attacks if you customize the behavior \n of XmlReader by changing its XmlResolver. XmlResolver objects are used to resolve external \n references, including external entities. XmlTextReader instances, as well as XmlReader \n instances returned from calls to XmlReader.Create, are prepopulated with default \n XmlResolvers (actually XmlUrlResolvers). You can prevent XmlReader from resolving \n external entities while still allowing it to resolve inline entities by setting the \n XmlResolver property of XmlReaderSettings to null. This is attack surface reduction \n at work again; if you don't need the capability, turn it off:\n */\n \n XmlReaderSettings settings = new XmlReaderSettings();\n settings.ProhibitDtd = false;\n settings.MaxCharactersFromEntities = 1024;\n settings.XmlResolver = null;\n XmlReader reader = XmlReader.Create(stream, settings);\n\n /*\n Alternatively, you can set the DtdProcessing property to Ignore, which will not throw \n an exception on encountering a <!DOCTYPE> element but will simply skip over it and not \n process it. Finally, you can set DtdProcessing to Parse if you do want to allow and process inline DTDs.\n \n For extra detailed information please visit:\n https://msdn.microsoft.com/enus/magazine/ee335713.aspx \n\n */\n \n\n\n\n"
Give me some sample code of Anti caching header in asp ?,"Anticaching header\n\n\n Example:\n\n  \n /*\n Add the following headers to your application head in order to prevent the browser from caching\n the following code could be used in your controller:\n */\n\n Response.AppendHeader(""CacheControl"", ""nocache, nostore, mustrevalidate""); // HTTP 1.1.\n Response.AppendHeader(""Pragma"", ""nocache""); // HTTP 1.0.\n Response.AppendHeader(""Expires"", ""0""); // Proxies.\n\n \n /*\n In your classes you can use the following code:\n */\n\n HttpContext.Current.Response.AppendHeader(""Expires"", ""0"");\n HttpContext.Current.Response.AppendHeader(""CacheControl"", ""nocache, nostore, mustrevalidate"");\n HttpContext.Current.Response.AppendHeader(""Pragma"", ""nocache"");\n"
Give me some sample code of Aggregate User Controls in asp ?,"Aggregate user controls\n\n\n Example:\n\n  \n /*\n In order to enforce Aggregate access control protection the best method would be to \n define your rules by means of a database structure rather than sessions or logs.\n This is due to the fact that if the user drops his session the rating would start\n al over again. \n\n TABLE users\n  \n | userID | userName | password | privilegeID | access | AggregateControl |\n  \n | 1 | Admin | Csdar323 | 1 | TRUE | 2322 |\n  \n | 2 | User | Adf4fsv | 2 | FALSE |  0 |\n  \n | 3 | Guest | dff4fKr | 3 | TRUE |  125 | \n \n\n TABLE privileges\n  \n | privilegeID | privilege | \n \n | 1 | edit:read:delete |\n \n | 2 | edit:read |\n \n | 3 | read |\n \n */\n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.ComponentModel.DataAnnotations.Schema;\n using System.ComponentModel.DataAnnotations;\n using System.Data.SqlClient;\n\n\n namespace MvcApplication1.Models\n {\n [Table(""users"")]\n public class Aggregate\n {\n //Getters and setters for our user method\n [Key]\n public int userID { get; set; }\n public string userName { get; set; }\n public string password { get; set; }\n public string access { get; set; }\n public int aggregate { get; set; }\n public int privilege { get; set; } \n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new SqlConnection\n (System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n //The count integer is set every time the user connects to the database to process data\n public void aggregateControl(int count)\n {\n //First we include the audit log class.\n AuditLog Log = new AuditLog();\n \n conn.Open();\n\n int control = 0;\n\n //the connection has to be reported into the log files\n Log.SetLog(Session['userID'], ""Connection to the database was made successfully"", ""SUCCESS"", ""NULL"" "");\n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n string query = string.Format(""SELECT aggregate from users WHERE userID = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n control = Convert.ToInt32(oReader[""aggregate""]);\n }\n }\n\n using (SqlCommand command = conn.CreateCommand())\n {\n //We update the aggregate table in the database in order to \n //keep track of the number of connections the user made\n count += control;\n \n command.CommandText = ""UPDATE users SET aggregate = @count WHERE userID = @userID"";\n //Again we bind the parameters in order to prevent sql injections\n command.Parameters.AddWithValue(""@count"", count);\n command.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n command.ExecuteNonQuery();\n }\n\n /*\n Each time the user accesses the database we keep track of the number of times he\n connected. Whenever the user passes a reasonable number he should be rejected \n since he could be an attacker scraping your table contents and stealing company information\n You could a CRON job or stored procedure in your system in order to \n clean the Aggregate column within certain time frames\n */\n HttpContext.Current.Response.Write(control);\n if (control > 5000)\n {\n using (SqlCommand command = conn.CreateCommand())\n {\n\n //this breach has to be reported into the log files\n Log.SetLog(Session['userID'], \n ""User account was locked out due to aggregate user control system"", date, FAIL, HIGH"");\n\n /*\n Whenever te reasonable number of connections the user made was surpassed we destroy all the \n sessions to deny the user any further access to the system\n *\n HttpContext.Current.Session[""authenticateUser""] = """";\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Response.Redirect(""/login"", true);\n\n /*\n Than we set his access level on his account to FALSE in order to prevent \n him from logging in again til you did your forensics on the log files\n */\n string access = ""FALSE"";\n command.CommandText = ""UPDATE users SET access = @access WHERE userID = @userID"";\n command.Parameters.AddWithValue(""@access"", access);\n command.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n command.ExecuteNonQuery();\n }\n }\n conn.Close();\n }\n }\n }\n \n"
Give me some sample code of Password Storage(salting stretching hashing) in asp ?,"Password storage(salting/stretching/hashing)\n\n\n Example:\n\n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Security.Cryptography;\n\n namespace MvcApplication1.Controllers\n {\n public class hashing\n {\n public string createSalt(string password)\n {\n /*\n For generating the random salt we want to use a secure cryptographic function\n */\n RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();\n\n //Then we generate a random salt\n byte[] buffer = new byte[128];\n rng.GetBytes(buffer);\n\n Rfc2898DeriveBytes hasher = new Rfc2898DeriveBytes(password + ""ALongPepperValue"", buffer, 10000);\n return Convert.ToBase64String(hasher.GetBytes(25));\n }\n \n //The salt in this function is the return value of the createSalt function\n public string hashPassword(string Salt, string Password)\n {\n Rfc2898DeriveBytes Hasher = new Rfc2898DeriveBytes(Password + ""ALongPepperValue"",\n System.Text.Encoding.Default.GetBytes(Salt), 10000);\n return Convert.ToBase64String(Hasher.GetBytes(25));\n }\n \n //With this function we validate the password hash\n public bool Validate(string passwordHash, string saltHash, string enteredPassword)\n {\n Rfc2898DeriveBytes Hasher = new Rfc2898DeriveBytes(enteredPassword + ""ALongPepperValue"",\n System.Text.Encoding.Default.GetBytes(saltHash), 10000);\n return Convert.ToBase64String(Hasher.GetBytes(25)) == passwordHash;\n }\n }\n }"
Give me some sample code of Sandboxing in asp ?,"Sandboxing\n\n\n Example:\n \n\n <iframe sandbox=""value""> \n \n /*\n sandbox="""" Applies all restrictions\n allowforms Reenables form submission\n allowpointerlock Reenables APIs\n allowpopups Reenables popups\n allowsameorigin Allows the iframe content to be treated as being from the same origin\n allowscripts Reenables scripts\n allowtopnavigation Allows the iframe content to navigate its toplevel browsing context\n */\n\n"
Give me some sample code of Privilege Based Authentication in asp ?,"Privilege based authentication\n\n\n Example:\n\n\n  /*\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n TABLE users\n \n | userID | userName | password | privilegeID | access | AggregateControl |\n \n | 1 | Admin | Csdar323 |  1 |  TRUE | 2336 |\n  \n | 2 | User | Adf4fsv |  2 |  FALSE | 0 |\n \n | 3 | Guest | dff4fKr |  3 |  TRUE | 135 |\n \n\n TABLE privileges\n \n | privilegeID | privilege | \n \n | 1  | edit:read:delete |\n \n |  2  | edit:read |\n \n |  3  | read |\n \n\n Now instead of using roles in sessions we rather want to assign privileges to users \n by means of a DatabaseBased Authentication system. \n Now we can easily assign a user certain privileges for him to access.\n */\n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Data.SqlClient;\n using System.ComponentModel.DataAnnotations;\n using System.Web.SessionState;\n using System.Text.RegularExpressions;\n\n namespace MvcApplication1.Controllers\n {\n public class privilegeBasedAuthentication\n {\n //Getters and setters for our user method\n [Key]\n public int userID { get; set; }\n public string username { get; set; }\n public string password { get; set; }\n public string access { get; set; }\n public string salt { get; set; }\n public int privilege { get; set; }\n\n //First we include the audit log class.\n auditLogs Log = new auditLogs();\n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = \n new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n public string privileges()\n {\n string privileges = """";\n\n conn.Open();\n\n //the connection has to be reported into the log files\n Log.SetLog(""Null"", ""Connection to the database was made successfully"", ""SUCCESS"", ""NULL"");\n\n /*\n Here we select the users privilege level from the users table\n NOTE: query has to be in one line but could not fit screen otherwise\n */\n string query = string.Format(""\n SELECT a.username, a.password, a.privilegeID, b.privilegeID, \n b.privilege FROM users as a JOIN privileges as b ON a.privilegeID = b.privilegeID \n WHERE a.userID =@userID and a.access='TRUE'"");\n \n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n privileges = Convert.ToString(oReader[""privilege""]);\n }\n }\n return privileges;\n }\n\n //Here we check the privileges string against the permissions needed to perform the actions\n public bool validator(string privileges, string ispermitted)\n {\n\n bool privileged = false;\n string[] privDB = privileges.Split(':');\n string[] permission = ispermitted.Split(':');\n\n int count = permission.Length;\n int countsuccess = 0;\n\n foreach (string priv in privDB)\n {\n //We count the number of times the regex hits your privilege\n Regex regex = new Regex(priv);\n if (priv != """")\n {\n Match match = regex.Match(ispermitted);\n if (match.Success)\n {\n countsuccess += 1;\n }\n }\n }\n\n //Whenever the count is bigger or equal to the results we know the user was permitted\n if (countsuccess >= count)\n {\n privileged = true;\n //the connection has to be reported into the log files\n Log.SetLog(Convert.ToString(System.Web.HttpContext.Current.Session[""userID""]), \n ""User did have the right privileges!"", ""SUCCESS"", ""NULL"");\n }else{\n //the connection has to be reported into the log files\n Log.SetLog(""Null"", ""User did not have the right privileges!"", ""FAIL"", ""NULL"");\n\n //Terminate session since the user tries to tamper his privileges\n Log.setCounter(3);\n privileged = false;\n }\n return privileged;\n }\n }\n }\n\n /*\n if ever there are new 'roles' added to the system you can easily assign them the needed privileges without \n having to add new roles throughout your entire system. This system takes a little more planning up ahead but \n it enforces higher level of security.\n */\n \n \n"
Give me some sample code of Identifier Based Authorization in asp ?,"Identifierbased authorization\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.ComponentModel.DataAnnotations.Schema;\n using System.ComponentModel.DataAnnotations;\n using System.Data.SqlClient;\n\n\n namespace MvcApplication1.Models\n {\n [Table(""profile"")]\n public class users\n {\n //Getters and setters for our user method\n [Key]\n public int userID { get; set; }\n public string name { get; set; }\n public string email { get; set; }\n public string phone { get; set; }\n\n /*\n First we include the audit log class.\n For more detailed information see the Auditlog code example\n */\n AuditLog Log = new AuditLog();\n\n /*\n We then do the same for aggregate user controls.\n For more detailed information see the Aggregate user control code example\n */\n Aggregate aggregate = new Aggregate();\n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new \n SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n //The count integer is set every time the user connects to the database to process data\n public void IdentifierBasedAuthentication(int pageID)\n {\n conn.Open();\n bool doFunction = true;\n\n /*\n First we validate if the incoming value is in fact an integer since we expect a page id number.\n If the incoming value is not a number we lockout the users since he tries to manipulate application operation.\n */\n \n //see the ""input validation"" code example for more detailed information about this function\n if (validate.validateInput(pageID, ""numeric"", ""Failed to get file"", ""HIGH"") == false) { doFunction = false; }\n\n if (doFunction == false)\n {\n //First we log the fact we detected a tampering in the application operation\n Log.SetLog(Session['userID'], ""User tried to manipulate application operation"", date, FAIL, HIGH"");\n\n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user's account must be blocked. \n Given the high threat level, there will be immediate session termination.\n */\n Log.Counter(3);\n }\n\n if (doFunction == true)\n {\n //the page retrieval has to be reported into the log files\n Log.SetLog(Session['userID'], ""Connection to the database was made successfully"", date, SUCCESS, NULL"");\n\n //We also count the connection to the database.\n aggregate.aggregateControl(1);\n\n /* \n Whenever you are checking whether a user is restricted to review certain data,\n the access restrictions should be processed server side.\n The userID could be stored inside a session variable on login, and should\n be used to retrieve user data from the database when requested\n in order to verify if the user is allowed to look into that data:\n */\n string query = string.Format(""SELECT * from profile WHERE userID = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n name = oReader[""name""].ToString();\n email = oReader[""email""].ToString();\n phone = oReader[""phone""].ToString();\n }\n }\n }\n }\n }\n }\n \n \n"
Give me some sample code of Enforce sequential step order wizzard in asp ?,"Enforce sequential step order (Wizzard)\n\n\n Example:\n \n\n //Example as used in your controller:\n bool next = true;\n\n //We check for form submit\n if (Request.Form[""submit""] != null)\n { \n //If values are empty we return false and destroy session in else\n if (Request.Form[""value1""] == """") { next = false; }\n if (Request.Form[""value2""] == """") { next = false; }\n\n if (next == true)\n { \n //If all went good the session can be set for step2\n Session[""stepOrder""] = ""step2"";\n }else{\n  Session[""stepOrder""] = """";\n  Session.Abandon();\n  Response.Redirect(""/Home/Index"", true);\n }\n }\n\n //If the second form was submitted and the session was successfully set to step 2 we proceed\n if ((Request.Form[""submit2""] != null) && (Session[""stepOrder""] == ""step2""))\n {\n if (Request.Form[""value3""] == """") { next = false; }\n\n if (next == true)\n {\n Session[""stepOrder""] = ""final"";\n }else{\n Session[""stepOrder""] = """";\n Session.Abandon();\n Response.Redirect(""/Home/Index"", true);\n }\n }\n\n //Again we check for the new valid session for doing the final operation\n if ((Request.Form[""final""] != null) && (Session[""stepOrder""] == ""final"")) { /* Do final operation! */ }\n return View();\n\n /*\n If the user drops his session, he has to start over again, and since we assign different values to the same session\n we force the user to follow the sequential order because else he does not get the sessions needed to proceed. \n */\n\n"
Give me some sample code of Preventing Session Hijacking in asp ?,"Session hijacking\n\n\n Example:\n\n\n /*\n As soon as a user logs into your application you must store his session id as wel as his\n IP address along with his userID. This information will be used later on in your application in order to\n identify possible session hijacking.\n\n TABLE track_sessions\n \n | TrackID | userID |    SESSION  | Ip address  | \n \n | 1 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.89 | \n \n | 2 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.81 |\n \n | 3 | 2 | c80959d3ea4c166413774e45375ac2a1 | 987.65.43.21 |\n \n\n In order to prevent session hijacking there are a couple of defense strategies\n which combined are a hardened defense. \n */\n\n /*\n First we implement the strict transport security header, this is in order to prevent\n users from accessing your application over an unprotected connection.\n */\n\n //Example of the strict transport security header:\n Response.AppendHeader(""StrictTransportSecurity"", ""maxage=31536000"");\n\n\n //If all present and future subdomains will be HTTPS:\n Response.AppendHeader(""StrictTransportSecurity"" maxage=31536000, ""includeSubDomains"");\n\n /*\n Recommended: If the site owner would like their domain to be included in the HSTS preload \n list maintained by Chrome (and used by Firefox and Safari), then use:\n */\n\n Response.AppendHeader(""StrictTransportSecurity"", ""maxage=31536000"", ""includeSubDomains"" ,""preload"");\n\n /*\n The `preload` flag indicates the site owner's consent to have their domain preloaded. \n The site owner still needs to then go and submit the domain to the list. the preload list\n enforces the browser to always present your application on HTTPS even on the first time\n the user hits your application\n */\n\n /*\n Then we set the httpOnly flag\n (see ""HttpOnly"" in the code examples for more details about implementation)\n */\n \n /*\n Then we set the flag for session timeout\n (see ""Timeout"" in the code examples for more details about implementation)\n */\n \n /*\n Then we set the session secure flag \n (see ""Secure flag"" in the code examples for more details about implementation)\n */\n \n /*\n On login we also add another cookie with a random value to the application in order to\n prevent an attacker to fixate an ASPSESSION id on your users and hijack their sessions\n (This code example can be found in the ""Login functionality"" for more detailed information)\n */\n \n \n /*\n NOTE: On applications that require high level security, there should never be an\n remember me functionality implemented.\n */\n\n\n /*\n Now imagine the scenario after the login of the user (see the ""login functionality"" in\n the code examples for more details). Whenever the user is logged in, the users ip address \n and session id are also stored in the database these values are used in order to verify \n if there are multiple users active on the same session. \n If so, we can let the user decide to terminate the session and terminate the\n other assigned sessions.\n */\n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.ComponentModel.DataAnnotations.Schema;\n using System.ComponentModel.DataAnnotations;\n using System.Data.SqlClient;\n using System.Web.SessionState;\n\n\n namespace MvcApplication1.Models\n {\n [Table(""users"")]\n public class users\n {\n //Getters and setters for our user method\n [Key]\n public int trackingID { get; set; }\n public int userID { get; set; }\n public string token { get; set; }\n public string ipaddress { get; set; }\n\n //First we include the audit log class.\n AuditLog Log = new AuditLog();\n\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new \n SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n //The count integer is set every time the user connects to the database to process data\n public void checkSession()\n {\n if ((System.Web.HttpContext.Current.Session[""authenticateUser""] != ""isLoggedin"") || \n (System.Web.HttpContext.Current.Session[""authenticateUser""] == """"))\n {\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n\n conn.Open();\n\n string query = string.Format(""SELECT * from tracking WHERE userId = @userID "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@userID"", System.Web.HttpContext.Current.Session[""userID""]);\n \n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n session = oReader[""session""].ToString();\n ipaddress = oReader[""ipaddress""].ToString();\n\n if ((System.Web.HttpContext.Current.Session[""ASPsessionID""].ToString() != session) && \n (ipaddress != HttpContext.Current.Request.ServerVariables[""REMOTE_ADDR""]))\n { \n //We log the multiple users on the system \n Log.SetLog(Session['userID'], ""Multiple users with same session id detected"", date, FAIL, MOD"");\n\n /*\n We redirect the user to a page which alerts him as well as gives him the option to destroy the \n multiple sessions if he does not trust them\n */\n HttpContext.Current.Response.Redirect(""/Home/multipleUsers"", true);\n }\n }\n }\n }\n }\n } \n\n /*\n the only thing left to do now is to update your track_sessions table by inserting\n the ipaddress, sessionID and userID if you want to accept the other sessions as valid.\n Otherwise the user just has to terminate his current session in order to lock out the\n other sessions.\n */\n\n\n\n"
Give me some sample code of Charsets in asp ?,"Charsets\n\n\n Example:\n\n\n /*\n In order to set the ""Charsets"" header you'll have to add the \n following code to the head of your application, the following code could be used in your controller \n for by example, text/html:\n */\n \n Response.AppendHeader(""ContentType: text/html"", ""charset=utf8""); \n \n /*\n In your classes you can use the following code:\n */\n \n HttpContext.Current.Response.AppendHeader(""ContentType: text/html"", ""charset=utf8""); \n \n\n /*\n Or directly into your html markup:\n */\n \n <meta httpequiv=""ContentType"" content=""text/html; charset=utf8"">\n \n\n\n"
Give me some sample code of Content Type Headers in asp ?,"Content type headers\n\n\n Example:\n\n\n /*\n In order to set the Contenttype header, you'll have to add the following \n code to the head of your application, the following code could be used in your controller:\n */\n \n Response.AppendHeader(""ContentType:text/html"", ""charset=UTF8""); \n\n /*\n In your classes you can use the following code:\n */\n \n HttpContext.Current.Response.AppendHeader(""ContentType:text/html"", ""charset=UTF8"");\n \n\n \n\n\n"
Give me some sample code of XML Injection Prevention in asp ?,"XML Injection Prevention \n\n\n Example:\n\n  \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n using System.IO;\n using System.Xml;\n\n namespace MvcApplication1.Controllers\n {\n public class storeXML\n {\n public void storeFunction(string name, string lastName, string gender)\n {\n /*\n First we import our inputvalidation control class. for more detailed information about \n input validation check the code examples for ""Input validation"" & ""Single input validation"".\n */\n inputValidationControl validate = new inputValidationControl();\n\n bool doFunction = true;\n //If the function returns false, we do not execute the function\n //see the ""input validation"" code example for more detailed information about this function\n if (validate.validateInput(name, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n if (validate.validateInput(lastName, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n if (validate.validateInput(gender, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n\n if (doFunction == true)\n {\n //Only after validation we proceed to the XMLwriter class where we insert the parameters\n using (XmlWriter writer = XmlWriter.Create(@""C:\Users\Public\xml\register.xml""))\n {\n writer.WriteStartElement(""person"");\n writer.WriteElementString(""name"", name);\n writer.WriteElementString(""lastname"", lastName);\n writer.WriteElementString(""gender"", gender);\n writer.WriteEndElement();\n writer.Flush();\n }\n }\n }\n }\n }\n\n /*\n Now we prevented malicious userinput from coming into your XML file.\n NOTE: Do not forget to also properly encode your input as a last line of defense, \n  also In this example the XmlReader disables external entities by default.\n  If you should choose another parser make sure your parser disables these entities \n  in order to prevent XXE injections.\n */\n \n\n \n\n\n"
Give me some sample code of Single input validation control in asp ?,"Single input validation control\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n\n namespace MvcApplication1.Controllers\n {\n public class inputvalidation\n {\n\n public bool validateInput(string input, string type, string logMessage, string threatLevel)\n {\n /*\n Than we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input. \n */\n\n string validator = """";\n  \n switch (type)\n {\n case ""alphanumeric"":\n validator = ""^[azAZ09]+$""; \n break;\n case ""numeric"":\n validator = ""^[09]*$"";\n break;\n }\n \n Regex regex = new Regex(validator);\n bool validate = false;\n\n Match match = regex.Match(input);\n if (match.Success)\n {\n //If there was a match this function returns false\n validate = true;\n\n //this breach has to be reported into the log files\n Log.SetLog(Session['userID'], logMessage, date, ""FAIL"", threatLevel);\n\n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user's account must be blocked.\n For detailed information see the ""Audit logs"" in code examples.\n */\n\n Log.count(1);\n }else{\n Log.SetLog(Session['userID'], logMessage, date(), ""SUCCESS"", ""NULL"");\n }\n return validate;\n }\n }\n }\n\n //Usage:\n if(validate.validateInput(Convert.ToString(employeeID), ""numeric"", ""input validation"", ""HIGH"") == false) \n { \n continueFunction = false; \n }\n"
Give me some sample code of File Upload in asp ?,"File upload\n\n\n Example:\n \n \n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Text.RegularExpressions;\n using System.IO;\n using System.Xml;\n\n namespace MvcApplication1.Controllers\n { \n public class auditLogs\n {\n private bool continueFunction = true;\n validation validate = new validation();\n\n //We check for form submit\n public void upload(HttpPostedFileBase file)\n {\n //We get the filename for doing different types of tests on it\n string test = file.FileName;\n\n /*\n First we check if the value is alphanumeric only to prevent uploading out of intended directory, \n as wel as other injections\n */\n if (validate.validateInput(test, ""alphanumeric"", ""validation failed"", ""HIGH"") == false)\n {\n continueFunction = false;\n }\n\n /*\n The next step would be checking if the file contains the right extension in order to prevent\n a user from uploading files which could be used to harm your system. in this example \n we check if the last extension found in the file name is a jpg or a png. whenever\n an application just regexes for the extension an attacker could\n bypass the check by uploading an file like: ""filename.jpg.php"".\n */\n string[] StrSpli = test.Split('.');\n int count = StrSpli.Count() 1;\n\n if ((StrSpli[count] != ""png"") && (StrSpli[count] != ""jpg""))\n {\n continueFunction = false;\n HttpContext.Current.Response.Write(""end of function"");\n }\n\n /*\n If the file came through all the different checks, it is time to upload the file to your system. \n */\n if (continueFunction == true)\n {\n if (file != null && file.ContentLength > 0)\n {\n\n try\n {\n // extract only the filename\n var fileName = Path.GetFileName(file.FileName);\n\n // The location of stored files should always be outside of your root\n var path = Path.Combine(@""C:\Users\Public\xml"", fileName);\n file.SaveAs(path);\n }\n catch{\n HttpContext.Current.Response.Write(""File did not upload!"");\n }\n }\n }else{\n HttpContext.Current.Response.Write(""end of function we returned false"");\n }\n\n /*\n Now we check the uploaded file for the right mimetype\n We do this after the upload instead of checking the content type header since that header \n can easily manipulated by an attacker. \n */\n\n string mimeType = ""application/unknown"";\n string ext = System.IO.Path.GetExtension(@""C:\Users\Public\xml\""+test+"""").ToLower();\n\n Microsoft.Win32.RegistryKey regKey = Microsoft.Win32.Registry.ClassesRoot.OpenSubKey(ext);\n\n if (regKey != null && regKey.GetValue(""Content Type"") != null)\n {\n mimeType = regKey.GetValue(""Content Type"").ToString();\n }\n\n if (mimeType != ""image/jpeg"") \n { \n //If the mimetype is not valid we delete the file from the system.\n System.IO.File.Delete(@""C:\Users\Public\xml\""+test+"""");\n }\n }\n }\n }\n"
Give me some sample code of Login functionality in asp ?,"Login functionality\n\n\n Example:\n \n\n using System;\n using System.Collections.Generic;\n using System.Linq;\n using System.Web;\n using System.Data.SqlClient;\n using System.ComponentModel.DataAnnotations;\n using System.Web.SessionState;\n\n namespace MvcApplication1.Controllers\n {\n public class login\n {\n //Getters and setters for our user method\n  [Key]\n public int userID { get; set; }\n public string username { get; set; }\n public string password { get; set; }\n public string access { get; set; }\n public string salt { get; set; }\n public int privilege { get; set; }\n\n //First we include the audit log class.\n auditLogs Log = new auditLogs();\n\n //Second we include the password hash.\n hashing hash = new hashing();\n\n //Third we include the random password/token class.\n randomizer CSRF = new randomizer();\n\n //Last we include the random inputvalidation class.\n inputvalidation validate = new inputvalidation();\n\n public bool loginUser()\n {\n //Here we connect to the database by means of a connection string as configured in the web.config\n SqlConnection conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings[""users""].ConnectionString);\n\n bool loggedin = false;\n  string passwordHash = """";\n  string userId = """";\n conn.Open();\n\n //we also validate the username input, if it was bad we empty the string:\n if (validate.validateInput(username, ""alphanumeric"", ""Error in username"", ""LOW"", 0) != true) { username = """"; }\n\n //Here we select the user from the users table\n string query = string.Format(""SELECT * from users WHERE username = @name "");\n SqlCommand cmd = new SqlCommand(query, conn);\n\n //We bind the parameter in order to prevent sql injections\n cmd.Parameters.AddWithValue(""@name"", username);\n\n //Next we read the value from the database and put it into a variable\n using (SqlDataReader oReader = cmd.ExecuteReader())\n {\n while (oReader.Read())\n {\n username = Convert.ToString(oReader[""username""]);\n passwordHash = Convert.ToString(oReader[""password""]);\n salt = Convert.ToString(oReader[""salt""]);\n userId = Convert.ToString(oReader[""userID""]);\n }\n }\n\n /*\n We validate the password see ""Password Storage(salting stretching hashing)"" in the code examples\n for more detailed information:\n */\n if (hash.Validate(passwordHash, salt, password) == true)\n {\n /*\n This is is to prevent session fixation, after login we create a new cookie which\n we than use to authenticate. This value can not be fixated since it is set after \n login.\n \n create a a new GUID and save into the session:\n */\n\n string guid = Guid.NewGuid().ToString();\n HttpContext.Current.Session[""AuthToken""] = guid;\n\n // now create a new cookie with this guid value\n HttpContext.Current.Response.Cookies.Add(new HttpCookie(""AuthToken"", guid));\n\n //the connection has to be reported into the log files\n Log.SetLog(""Null"", ""login was OK!"", ""SUCCESS"", ""NULL"");\n\n /*\n Now we create a random value for our CSRF Token. See ""Random password/token generation"" in\n the code examples for more detailed information:\n */\n string CSRftoken = CSRF.generate(25);\n System.Web.HttpContext.Current.Session[""CSRF""] = CSRftoken;\n\n //Set an accessor session.\n System.Web.HttpContext.Current.Session[""Authenticated""] = ""access"";\n\n /*\n Put id in a session for query identifier based authentication\n See ""identifier based authentication"" code example for more information\n */\n System.Web.HttpContext.Current.Session[""userID""] = userId;\n\n loggedin = true;\n }else{\n //the connection has to be repported into the log files\n Log.SetLog(""null"", ""Login failed!"", ""FAIL"", ""NULL"");\n loggedin = false;\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n return loggedin;\n }\n\n //In this method we do a check if the sessions are ok\n public void checkSession()\n {\n //We use this try catch for whenever the cookie is dropped\n try\n { \n //Check sessions and cookies to see if they match\n if (!HttpContext.Current.Session[""AuthToken""].ToString().Equals(\n HttpContext.Current.Request.Cookies[""AuthToken""].Value)\n || (HttpContext.Current.Session[""Authenticated""] != ""access""))\n {\n HttpContext.Current.Response.Redirect(""/login"", true);\n }\n }\n catch (NullReferenceException e){\n if (e.Source != null)\n { \n HttpContext.Current.Response.Redirect(""/login"", true);\n HttpContext.Current.Session[""Authenticated""] = """";\n HttpContext.Current.Session.Clear();\n HttpContext.Current.Session.Abandon();\n HttpContext.Current.Session.RemoveAll();\n }\n }\n }\n }\n }\n\n"
Give me some sample code of Disable Directory Listing in asp ?,"Disable directory listing\n\n\n Example:\n\n\n <configuration>\n <location path=""Secured"">\n <system.webServer>\n <directoryBrowse enabled=""false"" />\n </system.webServer>\n </location>\n </configuration>\n\n this example applies to IIS 7+, for IIS 6 you'll have to do it from IIS Manager\n\n\n\n\n \n"
Give me some sample code of HTML Output in asp ?,"HTML Output\n\n\n Example:\n\n\n /*\n Whenever user input is displayed in the application all user input should be properly escaped \n to prevent XSS injections.\n\n The C razor engine encodes userinput by default whenever this is not disabled in the web.config\n when outputted on screen, BUT you should get used to putting your variables in encoding functions\n and make this a habit simply ""assuming"" your input will be encoded properly is a jack in the box waiting to\n pop out and bite you in the ....as you will find out when you read on\n */\n\n /*\n This escaping is used whenever you put the code straight into the html like:\n <span>YOUR USERINPUT</span>\n The attack bellow will now be outputted as,\n <script>alert(1337);</script>\n */\n ViewBag.html = HttpUtility.HtmlEncode(""<script>alert(1337);</script>"");\n\n /*\n This next encoding method is used for whenever you are allowing userinput into \n html attributes.\n The attack below will now be outputted as:\n onload=&39;alert(1337)&39;\n */\n ViewBag.htmlatr = HttpUtility.HtmlAttributeEncode(""onload='alert(1337);'"");\n\n /*\n Whenever parameters are rendered via JavaScript your application will detect normal injections\n in the first instant. But your application still remains vulnerable to JavaScript encoding which will not\n be detected by the ASP.NET encoder. You MUST use the JavaScriptStringEncode function, any other \n escaping function still leaves your code vulnerable\n */\n ViewBag.java = HttpUtility.JavaScriptStringEncode(@""""""\x3Cscript\x3Ealert(12);\x3C\x2Fscript\x3E"""""");\n \n /*\n Whenever a user can submit an link/AHREF in your application you must solely depend upon the\n ""HttpUtility.UrlEncode"" method since an attacker could otherwise inject the href with an XSS\n that looks like this ""javascript:alert(""XSS"");"" whenever a victim now clicks the link this XSS\n will be executed in his browser.\n */ \n ViewBag.url = HttpUtility.UrlEncode(""JavaScript:alert(234);"");\n\n /*\n Security consists of different layers of protection in order to guarantee the integrity\n of your application. This means that the value displayed from the database/user should\n already be sanitized before being processed in order to prevent XSS.\n \n As an example, what do you do when you expect a numeric value from your application?\n \n EXACTLY you first sanitize the userinput by means of an input validation method like:\n See the ""input validation"" class for the entire example!\n */\n\n inputvalidation validate = new inputvalidation();\n string userinput = ""when this string is evil the application will block operation!"";\n if(validate.validateInput(userinput, ""numeric"", ""Unexpected userinput"", ""HIGH"", 3)== false)\n { /* Cancel operation of your application */ }\n\n /*\n In this example the application cancelled the request by means of simple validation.\n */"
Give me some sample code of Disable Directory Listing in java ?,Disable Directory Listing \n\n\n Example:\n\n\n // Directory Listing configuration in web.xml \n\n <servlet>\n <servletname>default</servletname>\n <servletclass>\n org.apache.catalina.servlets.DefaultServlet\n </servletclass>\n <initparam>\n <paramname>debug</paramname>\n <paramvalue>0</paramvalue>\n </initparam>\n <initparam>\n <paramname>listings</paramname>\n <paramvalue>false</paramvalue> <! This setting enables/disables directory listings >\n </initparam>\n <loadonstartup>1</loadonstartup>\n </servlet>\n\n
Give me some sample code of Password forget and disallow old passwords in java ?,"Password forget and disallow old passwords\n\n\n Example:\n\n\n /*\n Whenever you are developing a password forget function, these are the steps to follow\n in order to create hardened defenses.\n\n TABLE users\n \n | userID | userName | password | EmailAddress | access |\n  \n | 1 | Admin | Csdar323 | info@admin.com | TRUE |\n  \n | 2 | User | Adf4fsv | info@user.com | FALSE |\n  \n | 3 | Guest | dff4fKr | info@guest.com | TRUE |\n \n\n\n TABLE passwordForget\n  \n | forgotPasswordID | Token | UserID | Active | olPasswords |\n \n | 1 | c3ab8ff13720e.... | 1 | YES | Csdar323 |\n \n | 2 | 7dd39466b3c89.... | 1 | NO | ef0c4f2 |\n \n | 3 | 83d4a3960714c.... | 3 | NO | dff4fKr |\n \n\n\n As you can see we also store the old passwords into the password forget table, this\n we do in order to prevent the user from using old passwords later on in the process.\n\n Also use a CRON job to make sure the generated tokens for the password reset are\n expire after a certain amount of time like 20 minutes.\n */\n\n\n package com.edw;\n\n import java.io.UnsupportedEncodingException;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class PasswordForget {\n\n final static Logger logger = Logger.getLogger(PasswordForget.class);\n private String password = """" ; \n public int userID; \n private Randomizer rand = new Randomizer();\n private String active = """";\n public String token = """"; \n \n \n public String checkValidity(String email)\n {\n boolean emptyrows = false;\n String message = """"; \n \n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT * FROM members WHERE email = ?"";\n \n //We bind the parameter in order to prevent sql injections\n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, email);\n \n // execute the query, and get a java result set\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n password = rs.getString(""password"");\n userID = rs.getInt(""userID"");\n email = rs.getString(""email"");\n }\n \n //If the select was not empty we will be sending an email to the user as well as\n //preparing the password forget function\n if (rs.next() == false)\n {\n emptyrows = true;    \n }\n rs.close();\n \n if (emptyrows == true)\n {  \n message = ""An email was sent to reset your password"";\n /*\n Before we do anything we first set all other possible active statuses to NO\n in order to prevent an attacker creating a whole lot of tokens than FUZZING \n the password reset token. \n */\n active = ""NO""; \n String query2 = ""UPDATE forgetPassword SET active= ? WHERE userID= ?"";\n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st2 = conn.prepareStatement(query2); \n st2.setString(1, active);\n st2.setInt(2, userID);\n \n // execute the query, and get a java result set\n st2.executeQuery();\n st2.close();\n \n String query3 = ""INSERT INTO forgetPassword""\n + "" (token, userID, active, oldPasswords)""\n + "" VALUES""\n + "" (?, ?, ?, ?)"";\n\n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st3 = conn.prepareStatement(query3); \n //Here we generate the password forget token\n String token = rand.generateToken(30);\n st3.setInt(1, userID);\n st3.setString(2, token);\n st3.setInt(3, 1);\n st3.setString(4, password);\n \n // execute the query, and get a java result set\n st3.executeQuery();\n st3.close();\n //Here we send an email to the user with the needed reset function\n String msg = ""follow this link to reset your password http://example.com/index.jsp?resetLink=$token"";\n SendEmail mail = new SendEmail();\n mail.sendmail(email, ""Password reset"", msg); \n }else{\n /*\n We show the user the same message in order to prevent the enumeration of\n valid email addresses.\n */\n message = ""An email was sent to reset your password""; \n }\n \n rs.close();\n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n return message; \n //this return value can be used from SERVLETs in order to manipulate HTTP responses to send messages back to JSP pages \n }\n\n public String resetPassword(String resetlink, String Password) throws InvalidKeyException, NoSuchAlgorithmException, UnsupportedEncodingException{\n Hashing hasher = new Hashing();\n String message = """"; \n /*\n Imagine the user clicked on his link with the token included and is redirected towards\n the page where he can enter his new password.\n \n Now we select the information from the forgot password function where the\n forgot tokens matches the token in the database.\n */\n active = ""YES""; \n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT a.userID, a.token, b.id""\n + "" FROM forgetPassword as a ""\n + ""JOIN members as b""\n + "" ON a.userID = b.id WHERE token=? and Active=? "";\n \n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, resetlink);\n st.setString(2, active);\n \n // execute the query, and get a java result set\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n token = rs.getString(""token"");\n userID = rs.getInt(""userID"");\n }\n \n if (resetlink.equals(token))\n {\n /*\n First we pull the password through createSalt function which enforces the input of\n secure passwords.\n */\n String oldpassword = """"; \n String salt = hasher.createSalt(Password);  \n /*\n Then we encrypt the password \n */   \n String newpassword = hasher.hashPassword(salt, Password);\n \n /*\n Finally we compare the password against other old passwords from the \n password reset database in order to prevent the user from using old passwords \n which could already be compromised by any means.\n */\n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query2 = ""SELECT oldPasswords FROM forgetPassword where userID = ?"";\n \n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st2 = conn.prepareStatement(query2);\n st2.setInt(1, userID);\n // execute the query, and get a java result set\n ResultSet rs2 = st2.executeQuery(); \n while (rs2.next())\n {\n oldpassword = rs2.getString(""oldPasswords"");\n }\n \n if (newpassword.equals(oldpassword))\n {\n message = ""This was an old password please do not use this password""; \n }else{\n active = ""NO"";\n \n //First we update the new password for the user\n String query3 =""UPDATE members SET password=? WHERE userID=?"";\n \n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st3 = conn.prepareStatement(query3); \n st3.setInt(1, userID);\n \n // execute the query, and get a java result set\n st3.executeQuery();\n \n //First we update the new password for the user\n String query4 =""UPDATE forgetPassword SET active=? WHERE userID=?"";\n \n //Then we destroy the reset token by setting it's value to NO\n PreparedStatement st4 = conn.prepareStatement(query4);\n st4.setString(1, active);\n st4.setInt(2, userID); \n \n // execute the query, and get a java result set\n st4.executeQuery(); \n \n rs2.close();\n st2.close();\n st3.close();\n st4.close();\n conn.close();\n }\n st2.close(); \n }\n st.close();\n conn.close(); \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n return message; //this return value can be used from SERVLETs in order to manipulate HTTP responses to send messages back to JSP pages \n } \n }\n\n"
Give me some sample code of Timeout Sessions in java ?,Timeout Sessions \n\n\n Example:\n\n\n /*\n Within your web.xml you can configure your session idle timeout.\n The default time is set to 20 minutes.\n */\n\n <webapp>\n ...\n <sessionconfig>\n <sessiontimeout>20</sessiontimeout> <! in minutes >\n </sessionconfig>\n </webapp>\n\n
Give me some sample code of Directory path traversal attack in java ?,"Directory Path traversal\n\n\n Example:\n\n\n package com.edw;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import com.edw.InputValidation;\n import com.edw.WhiteList;\n import org.apache.log4j.Logger;\n\n public class Rewrite extends HttpServlet\n {\n\n private static final long serialVersionUID = 1L;\n private File getFile;\n /**\n * @see HttpServletHttpServlet()\n */\n public Rewrite() {\n super();\n }\n \n final static Logger logger = Logger.getLogger(Rewrite.class);\n \n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException \n {\n InputValidation validate = new InputValidation();\n WhiteList listme = new WhiteList();\n\n /*\n First, we want to filter the filenames for expected values. For this example we use only use 09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input. \n */\n boolean validated = true;\n\n //see the ""input validation"" code example for more detailed information about this function\n \n final boolean validInput = validate.validateInput(getFile.toString(), ""numeric"", ""Failed to get file"", ""HIGH"");\n \n if (!validInput) { \n validated = false; \n }\n /*\n see the ""WhiteListing"" code example for more detailed information about this function\n Let's assume there are three files named 1,2,3\n */\n\n if (listme.WhiteListing(""1,2,3"", getFile.toString()) == false) { validated = false; }\n\n //Only if the pattern was true we allow the variable into the streamreader function\n if (validated)\n {\n String canonicalPath = getFile.getCanonicalPath();\n if (!canonicalPath.equals(""C:\\....\\WEBINF"" + getFile)) \n {\n // Invalid file; handle error\n }  \n FileInputStream fis = new FileInputStream(canonicalPath);  \n }else{\n logger.error(""invalid user input was detected!""); \n }\n doGet(request,response);\n }\n \n protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n response.getWriter().append(""Served at: "").append(request.getContextPath()).append("" OWASP Knowledge Base Code Examples"");\n }\n }\n"
Give me some sample code of Logout in java ?,"Logout \n\n\n Example:\n\n\n package com.edw;\n\n import java.io.IOException;\n import javax.servlet.ServletException;\n import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n\n /*\n Servlet implementation class Logout\n */\n @WebServlet(""/Logout"")\n public final class Logout extends HttpServlet {\n private static final long serialVersionUID = 1L;\n \n /**\n * @see HttpServletHttpServlet()\n */\n public Logout() {\n super();\n }\n\n /**\n * @see HttpServletdoGet(HttpServletRequest request, HttpServletResponse response)\n */\n protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n response.getWriter().append(""Served at: "").append(request.getContextPath());\n }\n\n /**\n * @see HttpServletdoPost(HttpServletRequest request, HttpServletResponse response)\n */\n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n \n request.getSession().invalidate();\n request.getSession().setAttribute(""Authenticated"", """");\n \n Cookie cookie = null;\n Cookie[] cookies = null;\n // Get an array of Cookies associated with this domain\n cookies = request.getCookies();\n \n for (Cookie cookie2 : cookies) {\n cookie = cookie2;\n \n if (cookie.getName().equals(""JSESSIONID""))\n {  \n cookie.setValue("""");\n }\n \n response.addCookie(null);\n request.setAttribute(""msg"",""Session terminated!"");\n request.getRequestDispatcher(""/login.jsp"").forward(request, response);\n return;\n }\n }\n }\n"
Give me some sample code of Enforce secure password in java ?,"Enforce Secure Password\n\n\n Example:\n\n\n package com.edw;\n\n import java.io.BufferedReader;\n import java.io.FileReader;\n import java.io.IOException;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n\n import org.apache.log4j.Logger;\n\n public final class PasswordCheck {\n \n final static Logger logger = Logger.getLogger(PasswordCheck.class);\n \n public boolean checkPassword(String password)\n {\n \n String error = """";\n boolean complete = true;\n \n /*\n for example here we define the expected value's for your password.\n \n ^ startofstring\n (?=.*[09]) a digit must occur at least once\n (?=.*[az]) a lower case letter must occur at least once\n (?=.*[AZ]) an upper case letter must occur at least once\n (?=.*[@$%^&+=]) a special character must occur at least once\n (?=\S+$) no whitespace allowed in the entire string\n .{8,} anything, at least eight places though\n $ endofstring\n */\n \n String validation = ""^(?=.*[09])(?=.*[az])(?=.*[AZ])(?=.*[@$%^&+=])(?=\S+$).{8,}$""; \n\n // Create a Pattern object\n Pattern reg = Pattern.compile(validation);\n // Now create matcher object.\n Matcher match = reg.matcher(password);\n if (!match.find()) { \n error = ""You did not enter a valid password"";\n complete = false; \n }\n\n /*\n Also we have to take into consideration that Password1! is a valid password according to password standards. This however is not the case since this password is included in almost every dictionary attack mechanisms. So we have to prevent the user from using these weak passwords. In such case we will define these bad passwords in a text \n file in order to compare the user's password with the list of bad passwords inside that file.\n */\n \n try {\n BufferedReader in = new BufferedReader(new FileReader(""C:\\Users\\Public\\xml\\test.txt""));\n String[] strTemp = null ;\n String line;\n \n while((line = in.readLine()) != null)\n { \n strTemp = line.split("","");\n }\n \n for (String value : strTemp)\n { \n if (value.equals(password))\n {\n error = ""Your password was a bad password!"";\n complete = false;\n } \n }\n in.close();\n }\n catch(IOException e) {\n logger.error(e.toString());\n }\n \n //The last step is checking the password length to see if it is 8 characters or bigger\n if (password.length() < 8)\n {\n error = ""The password was to short"";\n complete = false;\n }\n\n if (complete)\n {\n //Do further operation\n return true;\n }else{\n return false;\n }\n }\n }\n\n"
Give me some sample code of File uploading in java ?,"File Uploading \n\n\n Example:\n\n\n /*\n In this example we show the steps that must be taken in order to upload a file securely. The main steps are input validation ,file extension checks and mime type checks. \n the following code snipet shows the jsp page that performs the post action to upload a certain file to destination \n */\n\n <%@ page language=""java"" contentType=""text/html; charset=ISO88591"" pageEncoding=""ISO88591""%>\n <!DOCTYPE html PUBLIC ""//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">\n <html>\n <head>\n <title>File Upload</title>\n <meta httpequiv=""ContentType"" content=""text/html; charset=UTF8"">\n </head>\n <body>\n <form method=""post"" action=""FileUpload"" enctype=""multipart/formdata"" >\n File:\n <input type=""file"" name=""file"" id=""file"" /> <br/>\n Destination:\n <input type=""text"" value=""C:\Users\someuser\Desktop\test"" name=""destination""/>\n </br>\n <input type=""submit"" value=""Upload"" name=""upload"" id=""upload"" />\n </form>\n <%\n String message = "" ""; \n message = (String) request.getAttribute(""msg"");\n if (message == null)\n {\n message = "" "";\n }\n out.println("" "" + message);\n %> \n </body>\n </html>\n\n\n // The following code snippet performs the file uploading functionality from the post action performed at the jsp page showed above\n\n\n package com.edw;\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.PrintWriter;\n import java.lang.reflect.InvocationTargetException;\n import java.time.LocalDateTime;\n import java.util.List;\n import org.apache.log4j.Logger;\n\n import javax.servlet.RequestDispatcher;\n import javax.servlet.ServletException;\n import javax.servlet.annotation.MultipartConfig;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.Part;\n import com.Lib.AuditLog;\n import com.Lib.WinRegistry;\n import com.Lib.InputValidation;\n\n import org.apache.commons.io.FilenameUtils;\n\n @MultipartConfig\n public final class FileUpload extends HttpServlet {\n \n /**\n * \n */\n private static final long serialVersionUID = 1L;\n final static Logger logger = Logger.getLogger(FileUpload.class);\n private AuditLog Log = new AuditLog(); \n InputValidation validate = new InputValidation();\n\n //We check for form submit\n \n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\n {\n response.setContentType(""text/html;charset=UTF8"");\n String userID = request.getSession().getAttribute(""userID"");\n boolean continueFunction = true;\n boolean sessionTermination = false;\n boolean blockAccess = false ;\n \n // Create path components to save the file\n // The location of stored files should always be outside of your root\n \n // the destination path used to store the file gotten from the POST parameter\n \n final String path = request.getParameter(""destination"");\n final File f = new File(path);\n final Part filePart = request.getPart(""file"");\n //We get the filename for doing different types of tests on it\n final String fileName = getFileName(filePart);\n \n /*\n First we check if the value is alphanumeric only to prevent uploading out of intended directory, \n as wel as other injections\n */\n \n if (validate.validateInput(userID, fileName, ""alphanumeric"", ""validation failed"",request.getRemoteAddr(),""HIGH"").equals(""validation failed""))\n {\n continueFunction = false;\n }\n \n else if (validate.validateInput(userID, fileName, ""alphanumeric"", ""Session Termination"",request.getRemoteAddr(),""HIGH"").equals(""terminate""))\n {\n request.getSession().invalidate();\n continueFunction = false;\n sessionTermination=true;\n } \n \n else if (validate.validateInput(userID, fileName, ""alphanumeric"", ""Block access"",request.getRemoteAddr(),""HIGH"").equals(""block""))\n {\n continueFunction = false;\n blockAccess=true;\n }else{\n Log.SetLog(userID, ""Validated Successfully"" , ""SUCCESS"", LocalDateTime.now(),request.getRemoteAddr(), """"); \n }\n \n /*\n The next step would be checking if the file contains the right extension in order to prevent\n a user from uploading files which could be used to harm your system. in this example \n we check if the last extension found in the file name is a jpg or a png. whenever\n an application just regexes for the extension an attacker could\n bypass the check by uploading an file like: ""filename.jpg.php"".\n */ \n \n String fileExtension = FilenameUtils.getExtension(fileName);\n\n if (!fileExtension.equals(""jpg"") && !fileExtension.equals(""png"") )\n {\n continueFunction = false;\n }\n\n /*\n If the file came through all the different checks, it is time to upload the file to your system. \n */\n if (continueFunction == true)\n { \n OutputStream out = null;\n InputStream filecontent = null;\n\n //start uploading the file\n try {\n out = new FileOutputStream(new File(path + File.separator + fileName));\n filecontent = filePart.getInputStream();\n\n int read = 0;\n final byte[] bytes = new byte[1024];\n\n while ((read = filecontent.read(bytes)) != 1) {\n out.write(bytes, 0, read);\n }\n \n logger.info(""File"" + fileName + ""has been uploaded to"" + path); \n \n } catch (FileNotFoundException fne) {\n\n logger.error(""Problems during file upload. Error:"" + fne.toString());\n \n } finally {\n if (out != null) {\n out.close();\n }\n if (filecontent != null) {\n filecontent.close();\n }\n }\n }\n \n /*\n Now we check the uploaded file for the right mimetype\n We do this after the upload instead of checking the content type header since that header \n can easily manipulated by an attacker. \n */\n \n List<String> ls = null;\n String key = null;\n try {\n ls = WinRegistry.readStringSubKeys(WinRegistry.HKEY_LOCAL_MACHINE,""SOFTWARE\\Classes\\"");\n key = ls.stream().filter(st > st.matches("".""+StrSpli)).findAny().orElse(null);\n \n } catch (IllegalArgumentException | IllegalAccessException | InvocationTargetException e) {\n logger.error(""Problems during file upload. Error: "" + e.toString());\n }\n \n \n String mimeType = ""application/unknown"";\n try {\n mimeType = WinRegistry.readString(WinRegistry.HKEY_LOCAL_MACHINE, ""SOFTWARE\\Classes\\""+key, ""Content Type"");\n } catch (IllegalArgumentException | IllegalAccessException | InvocationTargetException e) {\n logger.error(""Problems reading the extension value on Windows registry. Error: "" + e.toString());\n }\n\n if (mimeType == null || !mimeType.equals(""image/jpeg""))\n {\n //If the mimetype is not valid we delete the file from the system.\n f.delete();\n continueFunction = false; \n } \n\n if (continueFunction == false && sessionTermination == false && blockAccess == false)\n { \n request.setAttribute(""msg"",""FAIL! file has not been uploaded""); \n RequestDispatcher dd = request.getRequestDispatcher(""/FileUpload.jsp"");\n dd.forward(request, response);  \n return;  \n }\n \n if (continueFunction == true && sessionTermination == false && blockAccess == false)\n {\n request.setAttribute(""msg"",""SUCCESS! file uploaded"");\n request.getRequestDispatcher(""/FileUpload.jsp"").forward(request, response);\n return;\n } \n \n if (continueFunction == false && sessionTermination == false && blockAccess == true)\n { \n request.setAttribute(""msg"",""Access Blocked!"");\n request.getRequestDispatcher(""/error.jsp"").forward(request, response);\n return;\n }\n \n if (continueFunction == false && sessionTermination == true && blockAccess == false)\n { \n request.getSession().invalidate();\n request.setAttribute(""msg"",""Session terminated!"");\n request.getRequestDispatcher(""/error.jsp"").forward(request, response);\n return;\n } \n }\n\n @Override\n protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n super.doGet(req, resp);\n }\n\n /*\n reading from headers \n ...\n POST /fileupload/upload HTTP/1.1\n Host: localhost:8080\n ContentType: multipart/formdata; \n boundary=263081694432439\n ContentLength: 441\n 263081694432439\n ContentDisposition: formdata; name=""file""; filename=""sample.txt""\n ContentType: text/plain\n [ ..... ]\n */\n\n private String getFileName(final Part part)\n {\n final String partHeader = part.getHeader(""contentdisposition"");\n logger.info(""Part Header = "" + partHeader)\n \n for (String content : part.getHeader(""contentdisposition"").split("";""))\n {\n if (content.trim().startsWith(""filename""))\n {\n return content.substring(content.indexOf('=') + 1).trim().replace(""\"""", """");\n }\n }\n return null;\n } \n }\n\n\n"
Give me some sample code of CSRF Token JSF in java ?,"CSRF Token JSF\n\n\n Example:\n\n\n /*\n\n For CSRF Token we used a separate class outside of the normal controller, since\n it must be reused on several locations throughout the application\n\n After a successful validation of a user login, the application must also start a session\n which contains the ""cross site request forgery"" token.\n\n From the Randomizer class we are generating the token we want by using a secure cryptographic function\n SecureRandom csprng = new SecureRandom();\n\n Then we generate a long value token containing a high entropy\n byte[] randomBytes = new byte[128];\n\n prng.nextBytes(randombytes);\n\n Then we base64 encode the string\n String csrfToken = Base64.getEncoder().encodeToString(randomBytes);\n\n Then we set the session attribute.\n\n origRequest.getSession(false);\n origRequest.getSession().setAttribute(""CSRF"", csrfToken);\n\n The next step is to implement this random token in each form field as a hidden input parameter\n and send it to a function which checks if the submitted token is equal to the one set after successful validation.\n\n The following .xhtml snippet shows the code used to place the antiCSRF token inside the page.\n When the page renders, the <cu:antiCSRF/> is created as a viewstate encoded html input tag\n which then carries the antiCSRF token.\n While in process of rendering the page, a new token is generated\n and added into the existing session.\n When the user press the commandButton\n then CSRF token parameter is compared with the CSRF session parameter. \n\n */\n\n\n /*\n <f:view contentType=""text/html""> \n <f:event listener=""{userLoginView.isAuthenticated}"" type=""preRenderView"" />\n [ .... ]\n\n <p:commandButton action=""password?facesredirect=true"" value=""Add User"" ajax=""false"">\n <cu:antiCSRF/>\n </p:commandButton>\n </h:form>\n\n [ .... ]\n\n /* \n\n the following function used to generate the new Session which then is added to the already existing session. \n\n */\n\n\n public void generateToken(){\n \n HttpServletRequest origRequest = (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();\n\n //we include the random password/token class.\n Randomizer CSRF = new Randomizer();\n /*\n Now we create a random value for our CSRF Token. See ""Random password token generation"" in\n the code examples for more detailed information:\n */\n String CSRftoken = CSRF.generate(25);\n \n //Set an accessor session.\n origRequest.getSession(false);\n origRequest.getSession().setAttribute(""CSRF"", CSRftoken);\n }\n\n /* \n the following function used to destroy the cookie and invalidate the session when the CSRF Token dont match \n */\n\n public void antiCSRF() throws IOException\n { \n\n ExternalContext externalContext = FacesContext.getCurrentInstance().getExternalContext();\n HttpServletRequest origRequest = (HttpServletRequest)externalContext.getRequest();\n HttpServletResponse origResponse = (HttpServletResponse)externalContext.getResponse();\n String AUTH_KEY = (String) externalContext.getSessionMap().get(""AUTH_KEY"");\n externalContext.getSessionMap().remove(AUTH_KEY);\n externalContext.invalidateSession();\n \n // Get an array of Cookies associated with this domain\n Cookie[] cookies = origRequest.getCookies();  \n for (Cookie cookie : cookies) \n {  \n if (""JSSESIONID"".equalsIgnoreCase(cookie.getName()))\n {  \n cookie.setValue(null);   \n origResponse.addCookie(cookie);\n \n Log.SetLog("""", """", ""Cookie has been destroyed!"", LocalDateTime.now(), """", """"); \n } \n }  \n }\n\n /* \n This function used to decode the viewstate and get the token value from the html input tag. Also it performs token comparison between the antiCSRF token values of the html component and the session attribute. If the comparison fails then the session must be invalid.\n\n */ \n public void decode(FacesContext context) {\n FacesContext fc = FacesContext.getCurrentInstance();\n\n // access the hidden input field value\n ExternalContext external = context.getExternalContext();\n Map<?, ?> requestMap = external.getRequestParameterMap();\n String value = String.valueOf(requestMap.get(""_CSRFToken""));\n\n // access the session and get the token\n HttpSession session = (HttpSession) external.getSession(false);\n String token = (String) session.getAttribute(""CSRF"");\n\n // check if the token exists\n if (value == null || """".equals(value)) {\n try {\n this.antiCSRF();\n } catch (IOException e) {\n logger.error(e.toString());\n }\n Log.SetLog("""", """", ""antiCSRF token doesn't match! Failed attempt"", """", ""NULL""); \n logger.info(""antiCSRF token doesn't match! Failed attempt"");\n ConfigurableNavigationHandler nav = (ConfigurableNavigationHandler) fc.getApplication().getNavigationHandler(); \n nav.performNavigation(""csrf"");\n }\n\n // check the values for equality\n if (!value.equalsIgnoreCase(token)) {\n try {\n this.antiCSRF();\n } catch (IOException e) {\n logger.error(e.toString());\n }\n Log.SetLog("""", """", ""antiCSRF token doesn't match! Failed attempt"", """", ""NULL""); \n logger.info(""antiCSRF token doesn't match! Failed attempt"");\n ConfigurableNavigationHandler nav = (ConfigurableNavigationHandler) fc.getApplication().getNavigationHandler(); \n nav.performNavigation(""UserLogin"");\n }\n }\n\n /*\n the following function used to encode the viewstate with the html tag into a jsf component \n */ \n\n @Override public void encodeEnd(FacesContext context) throws IOException \n {\n //generate new token in every request\n this.generateToken();\n // get the session (don't create a new one!)\n HttpSession session = (HttpSession) context.getExternalContext().getSession(false);\n // get the token from the session\n String token = (String) session.getAttribute(""CSRF"");\n // write the component HTML to the response\n ResponseWriter responseWriter = context.getResponseWriter();\n responseWriter.startElement(""input"", null);\n responseWriter.writeAttribute(""type"", ""hidden"", null);\n responseWriter.writeAttribute(""name"", ""_CSRFToken"", """");\n responseWriter.writeAttribute(""value"", token, ""CSRF"");\n responseWriter.endElement(""input"");\n }\n\n */\n \n"
Give me some sample code of Sandboxing in java ?,"Sandboxing\n\n\n Example:\n\n\n <iframe sandbox=""value"">\n\n /*\n sandbox="""" Applies all restrictions\n allowforms Reenables form submission\n allowpointerlock Reenables APIs\n allowpopups Reenables popups\n allowsameorigin Allows the iframe content to be treated as being from the same origin\n allowscripts Reenables scripts\n allowtopnavigation Allows the iframe content to navigate its toplevel browsing context\n */\n"
Give me some sample code of Hashing in java ?,"Hashing\n\n\n Example:\n\n\n package com.Lib;\n\n import java.io.UnsupportedEncodingException;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n import java.security.SecureRandom;\n import org.apache.commons.codec.binary.Base64;\n import org.apache.log4j.Logger;\n\n public class Hashing {\n\n final static Logger logger = Logger.getLogger(Hashing.class);\n \n public String createSalt(String password) throws NoSuchAlgorithmException, InvalidKeyException, UnsupportedEncodingException\n {\n /*\n For generating the random salt we want to use a secure cryptographic function\n */\n \n SecureRandom sr = SecureRandom.getInstance(""SHA1PRNG"");\n //Create array for salt\n byte[] salt = new byte[128];\n //Get a random salt\n sr.nextBytes(salt);\n //return salt \n \n /**\n * RFC 2898 password derivation compatible with .NET Rfc2898DeriveBytes class.\n */\n Rfc2898DeriveBytes hasher = new Rfc2898DeriveBytes(password, salt, 10000);\n String bencoded = new String(Base64.encodeBase64(hasher.GetBytes(25)));\n return bencoded; \n }\n \n //The salt in this function is the return value of the createSalt function\n public String hashPassword(String Salt, String Password)\n {\n Rfc2898DeriveBytes Hasher = null;\n try {\n Hasher = new Rfc2898DeriveBytes(Password + ""ALongPepperValue"",Salt.getBytes(), 10000);\n } catch (InvalidKeyException | NoSuchAlgorithmException | UnsupportedEncodingException e) {\n logger.error(""error in hashing password!"" + e.toString());\n }\n String bencoded = new String(Base64.encodeBase64(Hasher.GetBytes(25)));\n return bencoded;\n }\n\n //With this function we validate the password hash\n public boolean Validate(String passwordHash, String saltHash, String enteredPassword)\n {\n Rfc2898DeriveBytes Hasher = null;\n try {\n Hasher = new Rfc2898DeriveBytes(enteredPassword + ""ALongPepperValue"",saltHash.getBytes(), 10000);\n } catch (InvalidKeyException | NoSuchAlgorithmException | UnsupportedEncodingException e) \n logger.error(""Validation error in hashing password!"" + e.toString());\n }\n String bencoded = new String(Base64.encodeBase64(Hasher.GetBytes(25)));\n if (bencoded.equals(passwordHash))\n return true;\n return false;\n }\n }\n\n"
Give me some sample code of HTML encoding in java ?,"HTML encoding\n\n\n Example:\n\n \n /*\n Whenever user input is displayed in the application all user input should be properly escaped \n to prevent XSS injections.\n */\n\n /*\n This escaping is used whenever you put the code straight into the html like:\n <span>YOUR USER INPUT</span>\n The attack bellow will now be outputted as,\n <script>alert(1337);</script>\n */\n\n import org.owasp.esapi.ESAPI;\n import org.owasp.esapi.errors.EncodingException;\n\n String htmlbug = ESAPI.encoder().encodeForHTML(""<script>alert(1337);</script>"");\n\n /*\n This next encoding method is used whenever you are allowing user input into \n html attributes.\n The attack below will now be outputted as:\n onload=&39;alert(1337)&39;\n */\n \n String htmlatr = ESAPI.encoder().encodeForHTMLAttribute(""onload='alert(1337);'"");\n \n /*\n Whenever parameters are rendered via javascript your application will detect normal injections\n in the first instant. in order for the application not to be vulnerable to javascrpt encoding you MUST use the encodeForJavaScript function, any other escaping function still leaves your code vulnerable\n */  \n\n ESAPI.encoder().encodeForJavaScript(""\\x3Cscript\\x3Ealert(12);\\x3C\\x2Fscript\\x3E"");\n \n /*\n Whenever a user can submit an link/AHREF in your application you must solely depend upon the\n ""ESAPI.encoder().encodeForURL"" method since an attacker could otherwise inject the href with an XSS\n that looks like this ""javacript:alert(""XSS"");"" whenever a victim now clicks the link this XSS\n will be executed in his browser.\n */ \n\n try {\n ESAPI.encoder().encodeForURL(""javascript:alert(234);"");\n } catch (EncodingException e) {\n logger.error(""Error encoding characters : "" + e.toString() + "" Time : "" + LocalDateTime.now());\n }\n\n /*\n Security consists of different layers of protection in order to guarantee the integrity\n of your application. This means that the value displayed from the database/user should\n already be sanitized before being processed in order to prevent XSS.\n\n As an example, what do you do when you expect a numeric value from your application?\n\n you first sanitize the user input by means of an input validation method like:\n See the ""input validation"" class for the entire example!\n */\n InputValidation validate = new InputValidation();\n String userinput = ""when this string is evil the application will block operation!"";\n if(validate.validateInput(userinput, ""numeric"", ""Unexpected user input"", ""HIGH"", 3)== false)\n { /* Cancel operation of your application */ }\n \n /*\n In this example the application cancelled the request by means of simple validation.\n */\n \n"
Give me some sample code of Anti clickjacking in java ?,"Anticlickjacking\n\n\n Example:\n\n\n /*\n One way to defend against clickjacking is to include a ""framebreaker"" script in each \n page that should not be framed. The following methodology will prevent a webpage from \n being framed even in legacy browsers, that do not support the XFrameOptionsHeader.\n\n In the document HEAD element, add the following:\n\n First apply an ID to the style element itself:\n */\n\n <style id=""antiClickjack"">body{display:none !important;}</style>\n\n //And then delete that style by its ID immediately after in the script:\n\n <script type=""text/javascript"">\n if (self === top) {\n var antiClickjack = document.getElementById(""antiClickjack"");\n antiClickjack.parentNode.removeChild(antiClickjack);\n } else {\n top.location = self.location;\n }\n </script>\n\n\n\n /*\n The second option is to use ""security headers"".\n There are two options for setting the ""anticlickjacking"" headers in your application:\n */\n\n //this will completely prevent your page from being displayed in an iframe.\n response.addHeader(""XFrameOptions"", ""deny"")\n\n\n //this will completely prevent your page from being displayed in an iframe on other sites.\n response.addHeader(""XFrameOptions"", ""SAMEORIGIN"")\n\n"
Give me some sample code of XMLPrevention in java ?,"XML Injection Prevention \n\n\n Example:\n\n\n package com.edw;\n\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.util.ArrayList;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.OutputKeys;\n import javax.xml.transform.Transformer;\n import javax.xml.transform.TransformerException;\n import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.dom.DOMSource;\n import javax.xml.transform.stream.StreamResult;\n import com.edw.InputValidation; \n\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n\n public final class XMLPrevention {\n\n public void storeFunction(String name, String lastName, String gender)\n {\n /*\n First we import our InputValidation class. for more detailed information about \n input validation check the code examples for ""Input validation"" & ""Single input validation"".\n */\n InputValidation validate = new InputValidation();\n boolean doFunction = true;\n //If the function returns false, we do not execute the function\n //see the ""input validation"" code example for more detailed information about this function\n if (validate.validateInput(name, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n if (validate.validateInput(lastName, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n if (validate.validateInput(gender, ""alphanumeric"", ""Invalid userinput name"", ""HIGH"") == false) { doFunction = false; }\n\n if (doFunction == true)\n {\n Document dom;\n Element e = null;\n String xml = null;\n\n // instance of a DocumentBuilderFactory\n DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n try {\n // use factory to get an instance of document builder\n DocumentBuilder db = dbf.newDocumentBuilder();\n // create instance of DOM\n dom = db.newDocument();\n\n // create the root element\n Element rootEle = dom.createElement(""roles"");\n\n // create data elements and place them under root\n e = dom.createElement(""name"");\n e.appendChild(dom.createTextNode(name));\n rootEle.appendChild(e);\n\n e = dom.createElement(""lastName"");\n e.appendChild(dom.createTextNode(lastName));\n rootEle.appendChild(e);\n\n e = dom.createElement(""gender"");\n e.appendChild(dom.createTextNode(gender));\n rootEle.appendChild(e);\n\n dom.appendChild(rootEle);\n\n try {\n Transformer tr = TransformerFactory.newInstance().newTransformer();\n tr.setOutputProperty(OutputKeys.INDENT, ""yes"");\n tr.setOutputProperty(OutputKeys.METHOD, ""xml"");\n tr.setOutputProperty(OutputKeys.ENCODING, ""UTF8"");\n tr.setOutputProperty(OutputKeys.DOCTYPE_SYSTEM, ""roles.dtd"");\n tr.setOutputProperty(""{http://xml.apache.org/xslt}indentamount"", ""4"");\n\n // send DOM to file\n tr.transform(new DOMSource(dom),new StreamResult(new FileOutputStream(xml)));\n\n } catch (TransformerException te) {\n System.out.println(te.getMessage());\n } catch (IOException ioe) {\n System.out.println(ioe.getMessage());\n }\n } catch (ParserConfigurationException pce) {\n System.out.println(""UsersXML: Error trying to instantiate DocumentBuilder "" + pce);\n }\n }\n }\n }\n\n /*\n Now we prevented malicious user input from coming into your XML file.\n NOTE: Do not forget to also properly encode your input as a last line of defense, \n  also In this example the XmlReader disables external entities by default.\n  If you should choose another parser make sure your parser disables these entities \n  in order to prevent XXE injections.\n */\n\n"
Give me some sample code of X Path query in java ?,"XPathQuery\n\n\n Example:\n\n\n package prime.com.beans;\n\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.Serializable;\n import java.time.LocalDateTime;\n import java.util.UUID;\n\n import javax.faces.application.FacesMessage;\n import javax.faces.bean.ManagedBean;\n import javax.faces.bean.SessionScoped;\n import javax.faces.context.FacesContext;\n import javax.faces.event.ActionEvent;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.xpath.XPath;\n import javax.xml.xpath.XPathConstants;\n import javax.xml.xpath.XPathExpression;\n import javax.xml.xpath.XPathFactory;\n\n import org.apache.log4j.Logger;\n import org.primefaces.context.RequestContext;\n import org.w3c.dom.Document;\n import org.xml.sax.InputSource;\n\n import com.Lib.AuditLog;\n import com.Lib.Hashing;\n import com.Lib.InputValidation; \n\n @ManagedBean\n @SessionScoped\n public class Xpath implements Serializable {\n \n private static final long serialVersionUID = 1L;\n //First we include the audit log class.\n AuditLog Log = new AuditLog();\n \n //Second we include the password hash.\n Hashing hash = new Hashing();\n \n final static Logger logger = Logger.getLogger(Xpath.class);\n public static String AUTH_KEY = ""User: "";\n private String employeeID;\n private String employeeRole;\n private String username;\n private String password; \n private String userID_result;\n private String userID;\n\n public String getUserID_result() {\n return userID_result;\n }\n\n public void setUserID_result(String userID_result) {\n this.userID_result = userID_result;\n }\n\n public String getUserID() {\n return userID;\n }\n\n public void setUserID(String userID) {\n this.userID = userID;\n }\n\n public String getUsername() {\n return username;\n }\n\n public void setUsername(String username) {\n this.username = username;\n }\n\n public String getPassword() {\n return password;\n }\n\n public void setPassword(String password) {\n this.password = password;\n }\n\n public String getEmployeeRole() {\n return employeeRole;\n }\n\n public void setEmployeeRole(String employeeRole) {\n this.employeeRole = employeeRole;\n }\n\n public String getEmployeeID() {\n return employeeID;\n }\n \n public void setEmployeeID(String employeeID) {\n this.employeeID = employeeID;\n }\n \n public void loginAction(String userId){\n \n //we include the random input validation class.\n HttpServletRequest origRequest = (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();\n HttpServletResponse origResponse = (HttpServletResponse)FacesContext.getCurrentInstance().getExternalContext().getResponse();\n FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(AUTH_KEY, username);\n \n String uname = this.getUsername(); \n \n /*\n This is is to prevent session fixation, after login we create a new cookie which\n we then use to authenticate. This value can not be fixated since it is set after \n login.\n\n create a new UUID and save into the session:\n */\n UUID uuid = UUID.randomUUID();\n String randomUUIDString = uuid.toString();\n //initiate a session\n origRequest.getSession(true);\n origRequest.getSession().setAttribute(""AuthToken"", randomUUIDString);  \n // now create a new cookie with this UUID value\n Cookie newCookie = new Cookie(""AuthToken"", randomUUIDString); \n \n origResponse.addCookie(newCookie);\n \n //the connection has to be reported into the log files\n Log.SetLog("""", """", ""login was OK!"", null, ""SUCCESS"", ""NULL""); \n \n /*\n Put id in a session for query identifier based authentication\n See ""identifier based authentication"" code example for more information\n */\n\n origRequest.getSession().setAttribute(""userID"", userId);\n FacesContext.getCurrentInstance().getExternalContext().getSessionMap().put(AUTH_KEY, uname);\n }\n \n //the following function used to check if the user exists \n public String checkuser(File fXmlFile,String usrname){\n \n String type_result = null;\n \n try { \n //The evaluate methods in the XPath and XPathExpression interfaces \n //are used to parse an XML document with XPath expressions. \n DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n DocumentBuilder builder = factory.newDocumentBuilder();\n //Create an InputSource for the example XML document.\n //An InputSource is a input class for an XML entity.    \n Document document = builder.parse(new InputSource(new FileInputStream(fXmlFile)));\n //The XPathFactory class is used to create an XPath object.\n //Create an XPathFactory object with the static newInstance method of the XPathFactory class.\n XPathFactory xPathfactory = XPathFactory.newInstance();\n //Create an XPath object from the XPathFactory object with the newXPath method. \n XPath xpath = xPathfactory.newXPath();\n //Create and compile an XPath expression with the compile method of the XPath object. \n //As an example, select the user ID attribute.\n //An attribute in an XPath expression is specified with an @ symbol. \n //For further reference on XPath expressions, \n //see the XPath specification for examples on creating an XPath expression.\n \n //The evaluate method of the XPathExpression interface evaluates\n //either an InputSource or a node/node list of the types org.w3c.dom.\n //Node, org.w3c.dom.NodeList, or org.w3c.dom.Document.\n //Evaluate the XPath expression with the InputSource of the example XML document to evaluate over.\n \n String type= ""/Employees/Employee[UserName='"" + usrname + ""']/Type"";\n XPathExpression salt_expr = xpath.compile(type);    \n type_result = salt_expr.evaluate(document, XPathConstants.STRING).toString(); \n \n } catch (Exception e) {\n logger.error("" General error in executing xpath query :"" + e.toString()); \n }  \n return type_result; \n }\n \n public String xpathconnect(File fXmlFile,String usrname){\n \n String login_result = null;\n \n try { \n //The evaluate methods in the XPath and XPathExpression interfaces \n //are used to parse an XML document with XPath expressions. \n DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n DocumentBuilder builder = factory.newDocumentBuilder();\n //Create an InputSource for the example XML document.\n //An InputSource is a input class for an XML entity.    \n Document document = builder.parse(new InputSource(new FileInputStream(fXmlFile)));\n //The XPathFactory class is used to create an XPath object.\n //Create an XPathFactory object with the static newInstance method of the XPathFactory class.\n XPathFactory xPathfactory = XPathFactory.newInstance();\n //Create an XPath object from the XPathFactory object with the newXPath method. \n XPath xpath = xPathfactory.newXPath();\n //Create and compile an XPath expression with the compile method of the XPath object. \n //As an example, select the user ID attribute.\n //An attribute in an XPath expression is specified with an @ symbol. \n //For further reference on XPath expressions, \n //see the XPath specification for examples on creating an XPath expression.\n \n //The evaluate method of the XPathExpression interface evaluates\n //either an InputSource or a node/node list of the types org.w3c.dom.\n //Node, org.w3c.dom.NodeList, or org.w3c.dom.Document.\n //Evaluate the XPath expression with the InputSource of the example XML document to evaluate over. \n \n String salt= ""/Employees/Employee[UserName='"" + usrname + ""']/salt"";\n XPathExpression salt_expr = xpath.compile(salt);    \n String Salt_result = salt_expr.evaluate(document, XPathConstants.STRING).toString();  \n \n String Password = hash.hashPassword(Salt_result, password);\n \n userID= ""/Employees/Employee[UserName='"" + username + ""' and Password='"" + Password + ""']/id"";\n XPathExpression userID_expr = xpath.compile(userID);\n userID_result = userID_expr.evaluate(document, XPathConstants.STRING).toString();\n \n String login = ""/Employees/Employee[UserName='"" + username + ""' and Password='"" + Password + ""']/Type"";          \n XPathExpression login_expr = xpath.compile(login);\n login_result = login_expr.evaluate(document, XPathConstants.STRING).toString(); \n \n } catch (Exception e) {\n logger.error("" General error in executing xpath query :"" + e.toString());\n } \n return login_result; \n }\n\n public void xpathLogin(ActionEvent event) throws IOException \n {\n /*\n In order to prevent xpath injections we have to treat these query's similar as \n to the SQL query's. An option would be to use a precompiled XPath query.\n But since this is a third party library i consider it untrusted and would\n rather use our own crafted escaping function.\n\n NOTE: if you want to look into the precompiled xpath library you can find more\n detailed information about it on: http://www.onjava.com/pub/a/onjava/2005/01/12/xpath.html\n */\n\n /*\n As with every injection prevention we first focus on the expected user values\n in this case we expect an integer we use our single input validation method for integers\n See the ""input validation"" code example for more detailed information.\n\n For the purpose of this example we use the following XML snippet \n \n <?xml version=""1.0"" encoding=""utf8""?>\n <Employees>\n <Employee ID=""1"">\n <FirstName>Arnold</FirstName>\n <LastName>Baker</LastName>\n <UserName>ABaker</UserName>\n <id>1</id>\n <Password>Hv3KPG906xBBhE1z3k5QRD9SArIYLeiSFA==</Password> <! SoSecure >\n <salt>+yoY1sPd+V6SC+0aEiA9lHjV9EC8zOCw+A==</salt>\n <Type>Admin</Type>\n </Employee>\n <Employee ID=""2"">\n <FirstName>Peter</FirstName>\n <LastName>Pan</LastName>\n <UserName>PPan</UserName>\n <id>2</id>\n <Password>Cftv1ip25PJdmf8DdfU5NM/K/cjEqEAthw==</Password> <! NoTelling >\n <salt>/KAMdM09RVNZ8nOWHAsqKzrfyY6VEZgRQA==</salt>\n <Type>User</Type>\n </Employee>\n </Employees>\n \n \n How to exploit : \n \n With a normal username and password this XPath would work, but an attacker may send a bad username and password and get an XML node selected without knowing the username or password, like this:\n \n Username: blah' or 1=1 or 'a'='a\n Password: blah\n\n or if the following exploit used, it matches the first letter of the username which is A. In such case it just ignores the password and permits login. \n \n username : ' or substring((//Employee[position()=1]/child::node()[position()=2]),1,1)=""A"" or ''='\n password : blah\n \n another exploitation example is using the following query which will be true if the second string (password) of the first node (user 'Arnold') \n consists of 36 characters (hash).\n \n stringlength(//user[position()=1]/child::node()[position()=2])=36 or ''='\n \n in order to test any of the above exploit cases just comment out the input validation lines 207 and 210 below.\n \n */\n RequestContext context = RequestContext.getCurrentInstance();\n FacesMessage message = null;\n boolean loggedIn = false;\n boolean continueFunction = true; \n InputValidation validate = new InputValidation();\n \n //Here we put the variable in our input validation method in order to prevent untrusted user input from parsing\n //NOTE: logging and countering is also done in your validation method\n \n //Input used into an XPATH expression must not contains any of the characters below:\n\n // ( ) = ' [ ] : , * / WHITESPACE\n \n //Another method of avoiding XPath injections is by using variable into XPATH expression with a variable resolver enabled evaluator. \n //See XPath parameterization example\n \n if (validate.validateInput(username,username,""symbols"", ""xpath input validation for username"", ""HIGH"") == false) \n { continueFunction = false; }\n \n if (validate.validateInput(username,password,""symbols"", ""xpath input validation for password"", ""HIGH"") == false) \n { continueFunction = false; }\n \n //Only if our validation function returned true we put the user input in the function\n //fXmlFile is the java.io.File object of the example XML document.\n \n File fXmlFile = new File(""C:\\xmldb\\users.xml"");\n \n if (continueFunction == true)\n {    \n String login_result = this.xpathconnect(fXmlFile,username);\n if (login_result.equals(""""))\n {\n //the connection has to be reported into the log files\n Log.SetLog(username, """", ""Login failed!"", LocalDateTime.now(), ""FAIL"", ""NULL"");\n message = new FacesMessage(FacesMessage.SEVERITY_WARN, ""Logging Error"", ""Invalid credentials""); \n FacesContext.getCurrentInstance().getExternalContext().redirect(""xpath.xhtml"");\n }\n else if (login_result.equals(""Admin""))\n {\n this.loginAction(userID_result);\n //the connection has to be reported into the log files\n Log.SetLog(username, """", ""Login successfully!"", LocalDateTime.now(), ""SUCCESS"", """");\n loggedIn = true;\n message = new FacesMessage(FacesMessage.SEVERITY_INFO, ""Welcome"", username);\n FacesContext.getCurrentInstance().getExternalContext().redirect(""admin_page.xhtml"");\n }\n else if (login_result.equals(""User""))\n {\n this.loginAction(userID_result);\n Log.SetLog(username, """", ""Login successfully!"", LocalDateTime.now(), ""SUCCESS"", """");\n loggedIn = true;\n message = new FacesMessage(FacesMessage.SEVERITY_INFO, ""Welcome"", username);\n FacesContext.getCurrentInstance().getExternalContext().redirect(""user_page.xhtml"");\n } \n FacesContext.getCurrentInstance().addMessage(null, message);\n context.addCallbackParam(""loggedIn"", loggedIn);\n } \n }\n }\n\n"
Give me some sample code of Encoder SQL ESAPI in java ?,"Encoder (SQL ESAPI)\n\n\n Example:\n\n\n package com.edw;\n\n import java.time.LocalDateTime;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n import org.owasp.esapi.ESAPI;\n import org.owasp.esapi.codecs.MySQLCodec;\n\n public final class Encoding {\n \n AuditLog Log = new AuditLog(); \n \n public String encoder(String input , String allowed, String user_id)\n { \n  /*\n We can specify also special characters which allowed in order to keep\n track of any unwanted special characters\n \n Example :\n \n To keep malicious inputs contained, any inputs written to the database need to be encoded.\n SQL encoding: ' OR 1=1 ' is encoded to \' OR 1\=1 \\\'\n \n */\n String pattern = ""^[azAZ09"" + allowed + ""]+$"";\n // Create a Pattern object\n Pattern reg = Pattern.compile(pattern);\n // Now create matcher object.\n Matcher match = reg.matcher(input);\n if (!match.find()) { \n  Log.SetLog(user_id, ""Illegal characters"", ""FAIL"", LocalDateTime.now(), ""HIGH"");\n } \n //We return the user input encoded  \n return ESAPI.encoder().encodeForSQL(new MySQLCodec(MySQLCodec.MYSQL_MODE), input);\n }\n }\n"
Give me some sample code of Single input validation control in java ?,"Single input validation control \n\n\n Example:\n\n\n import java.time.LocalDateTime;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n\n public final class InputValidation {\n \n private AuditLog Log = new AuditLog(); \n private String validate = ""pass""; \n \n public String validateInput(String user_id,String input, String type, String logMessage, String remote_address, String threatLevel)\n {\n /*\n we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input. \n */\n String validator = """";\n if(type.equals(""symbols""))\n {\n //Characters that may be used to interfere with the XPath query should be blocked, including ( ) = ‘ [ ] : , * / and all whitespace. \n // Any input that does not match the white list should be rejected, not sanitized.\n \n validator = ""(.*)(\\W+)(\\D+)(\\s+)(.*)"";\n }\n else if (type.equals(""alphanumeric"")) \n validator = ""^[azAZ09]"";\n else if (type.equals(""numeric""))\n //""^[09]*$"";\n validator = ""(\\d+)"";\n else\n validator = """";\n\n // Create a Pattern object\n Pattern reg = Pattern.compile(validator);\n // Now create matcher object.\n Matcher match = reg.matcher(input);\n if (!match.find()) \n { \n //If there was a match this function returns ""pass""\n validate = ""validation failed""; \n \n //this breach has to be reported into the log files\n Log.SetLog(user_id, logMessage , ""FAIL"", LocalDateTime.now(), remote_address, rLevel);\n \n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 hits the user's account must be blocked.\n For detailed information see the ""Audit logs"" in code examples.\n */\n \n String result = Log.counter(1,Integer.parseInt(user_id));\n \n if (result.equals(""SQL insert query error in update access"" ))\n {\n Log.SetLog(user_id, logMessage , ""SQL insert query error in update access"", LocalDateTime.now(),remote_address, """");\n }\n if (result.equals(""block""))\n {\n Log.SetLog(user_id, logMessage , ""block"", LocalDateTime.now(), remote_address, ""HIGH"");\n validate = ""block"";\n }\n if (result.equals(""terminate""))\n {\n Log.SetLog(user_id, logMessage , ""terminate"", LocalDateTime.now(), remote_address, ""HIGH"");\n validate = ""terminate"";\n }\n else if (validate.equals(""validation failed""))\n {\n Log.SetLog(user_id, logMessage , ""validation failed"", LocalDateTime.now(), remote_address, ""HIGH"");\n }\n } \n return validate;\n } \n \n public boolean validateInput(String username, String input, String type, String logMessage, String threatLevel)\n {\n /*\n we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input. \n */\n String validator = """";\n \n if(type.equals(""symbols""))\n {\n //Characters that may be used to interfere with the XPath query should be blocked, including ( ) = ‘ [ ] : , * / and all whitespace. \n // Any input that does not match the white list should be rejected, not sanitized.\n //validator = ""^()='\\[\\]:,\\*/ $"";\n validator = ""(.*)(\\W+)(\\D+)(\\s+)(.*)"";\n \n }\n else if (type.equals(""alphanumeric""))  \n validator = ""^[azAZ09]"";\n else if (type.equals(""numeric""))\n //""^[09]*$"";\n validator = ""(\\d+)"";\n else\n validator = """";\n\n // Create a Pattern object\n Pattern reg = Pattern.compile(validator);\n boolean validate = false ; \n // Now create matcher object.\n Matcher match = reg.matcher(input);\n if (!match.find()) \n { \n //If there was a match this function returns false\n validate = true; \n \n //this breach has to be reported into the log files\n Log.SetLog(username, logMessage , ""SUCCESS"", LocalDateTime.now(), threatLevel); \n }else{\n Log.SetLog(username, logMessage , ""FAIL"", LocalDateTime.now(), ""NULL"");\n } \n return validate;\n } \n }\n\n"
Give me some sample code of Anti caching headers in java ?,"Anticashing headers \n\n\n Example:\n\n\n /*\n Add the following headers to your application head in order to prevent the browser from caching\n the following code could be used in your controller:\n */\n\n response.appendHeader(""CacheControl"", ""nocache, nostore, mustrevalidate""); // HTTP 1.1.\n response.appendHeader(""Pragma"", ""nocache""); // HTTP 1.0.\n response.appendHeader(""Expires"", ""0""); // Proxies.\n \n"
Give me some sample code of WinRegistry in java ?,"Reading from Windows Registry \n\n\n Example:\n\n\n package com.edw;\n\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.prefs.Preferences;\n\n public final class WinRegistry {\n\n public static final int HKEY_CURRENT_USER = 0x80000001;\n public static final int HKEY_LOCAL_MACHINE = 0x80000002;\n public static final int HKEY_CLASSES_ROOT = 0x80000003; \n public static final int REG_SUCCESS = 0;\n public static final int REG_NOTFOUND = 2;\n public static final int REG_ACCESSDENIED = 5;\n\n private static final int KEY_ALL_ACCESS = 0xf003f;\n private static final int KEY_READ = 0x20019;\n private static final Preferences userRoot = Preferences.userRoot();\n private static final Preferences systemRoot = Preferences.systemRoot();\n private static final Class<? extends Preferences> userClass = userRoot.getClass();\n private static final Method regOpenKey;\n private static final Method regCloseKey;\n private static final Method regQueryValueEx;\n private static final Method regEnumValue;\n private static final Method regQueryInfoKey;\n private static final Method regEnumKeyEx;\n private static final Method regCreateKeyEx;\n private static final Method regSetValueEx;\n private static final Method regDeleteKey;\n private static final Method regDeleteValue;\n\n static {\n try {\n regOpenKey = userClass.getDeclaredMethod(""WindowsRegOpenKey"",\n new Class[] { int.class, byte[].class, int.class });\n regOpenKey.setAccessible(true);\n regCloseKey = userClass.getDeclaredMethod(""WindowsRegCloseKey"",\n new Class[] { int.class });\n regCloseKey.setAccessible(true);\n regQueryValueEx = userClass.getDeclaredMethod(""WindowsRegQueryValueEx"",\n new Class[] { int.class, byte[].class });\n regQueryValueEx.setAccessible(true);\n regEnumValue = userClass.getDeclaredMethod(""WindowsRegEnumValue"",\n new Class[] { int.class, int.class, int.class });\n regEnumValue.setAccessible(true);\n regQueryInfoKey = userClass.getDeclaredMethod(""WindowsRegQueryInfoKey1"",\n new Class[] { int.class });\n regQueryInfoKey.setAccessible(true);\n regEnumKeyEx = userClass.getDeclaredMethod( \n ""WindowsRegEnumKeyEx"", new Class[] { int.class, int.class, int.class }); \n regEnumKeyEx.setAccessible(true);\n regCreateKeyEx = userClass.getDeclaredMethod( \n ""WindowsRegCreateKeyEx"", new Class[] { int.class, byte[].class }); \n regCreateKeyEx.setAccessible(true); \n regSetValueEx = userClass.getDeclaredMethod( \n ""WindowsRegSetValueEx"", new Class[] { int.class, byte[].class, byte[].class }); \n regSetValueEx.setAccessible(true); \n regDeleteValue = userClass.getDeclaredMethod( \n ""WindowsRegDeleteValue"", new Class[] { int.class, byte[].class }); \n regDeleteValue.setAccessible(true); \n regDeleteKey = userClass.getDeclaredMethod( \n ""WindowsRegDeleteKey"", new Class[] { int.class, byte[].class }); \n regDeleteKey.setAccessible(true); \n }\n catch (Exception e) {\n throw new RuntimeException(e);\n }\n }\n\n private WinRegistry() { }\n\n /**\n * Read a value from key and value name\n * @param hkey HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n * @param key\n * @param valueName\n * @return the value\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static String readString(int hkey, String key, String valueName) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n return readString(systemRoot, hkey, key, valueName);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n return readString(userRoot, hkey, key, valueName);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n return readString(userRoot, hkey, key, valueName);\n }else{\n throw new IllegalArgumentException(""hkey="" + hkey);\n }\n }\n\n /**\n * Read value(s) and value name(s) form given key \n * @param hkey HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n * @param key\n * @return the value name(s) plus the value(s)\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static Map<String, String> readStringValues(int hkey, String key) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n return readStringValues(systemRoot, hkey, key);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n return readStringValues(userRoot, hkey, key);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n return readStringValues(userRoot, hkey, key);\n }else{\n throw new IllegalArgumentException(""hkey="" + hkey);\n }\n }\n\n /**\n * Read the value name(s) from a given key\n * @param hkey HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE/HKEY_CLASSES_ROOT\n * @param key\n * @return the value name(s)\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static List<String> readStringSubKeys(int hkey, String key) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n return readStringSubKeys(systemRoot, hkey, key);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n return readStringSubKeys(userRoot, hkey, key);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n return readStringSubKeys(userRoot, hkey, key);\n }else{\n throw new IllegalArgumentException(""hkey="" + hkey);\n }\n }\n\n /**\n * Create a key\n * @param hkey HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n * @param key\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static void createKey(int hkey, String key) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int [] ret;\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n ret = createKey(systemRoot, hkey, key);\n regCloseKey.invoke(systemRoot, new Object[] { new Integer(ret[0]) });\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n ret = createKey(userRoot, hkey, key);\n regCloseKey.invoke(userRoot, new Object[] { new Integer(ret[0]) });\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n ret = createKey(userRoot, hkey, key);\n regCloseKey.invoke(userRoot, new Object[] { new Integer(ret[0]) });\n }else{\n throw new IllegalArgumentException(""hkey="" + hkey);\n }\n if (ret[1] != REG_SUCCESS) \n {\n throw new IllegalArgumentException(""rc="" + ret[1] + "" key="" + key);\n }\n }\n\n /**\n * Write a value in a given key/value name\n * @param hkey\n * @param key\n * @param valueName\n * @param value\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static void writeStringValue\n (int hkey, String key, String valueName, String value) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n writeStringValue(systemRoot, hkey, key, valueName, value);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n writeStringValue(userRoot, hkey, key, valueName, value);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n writeStringValue(userRoot, hkey, key, valueName, value);\n }else{\n throw new IllegalArgumentException(""hkey="" + hkey);\n }\n }\n\n /**\n * Delete a given key\n * @param hkey\n * @param key\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static void deleteKey(int hkey, String key) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int rc = 1;\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n rc = deleteKey(systemRoot, hkey, key);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n rc = deleteKey(userRoot, hkey, key);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n rc = deleteKey(userRoot, hkey, key);\n }\n if (rc != REG_SUCCESS) \n {\n throw new IllegalArgumentException(""rc="" + rc + "" key="" + key);\n }\n }\n\n /**\n * delete a value from a given key/value name\n * @param hkey\n * @param key\n * @param value\n * @throws IllegalArgumentException\n * @throws IllegalAccessException\n * @throws InvocationTargetException\n */\n public static void deleteValue(int hkey, String key, String value) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int rc = 1;\n if (hkey == HKEY_LOCAL_MACHINE) \n {\n rc = deleteValue(systemRoot, hkey, key, value);\n }\n else if (hkey == HKEY_CURRENT_USER) \n {\n rc = deleteValue(userRoot, hkey, key, value);\n }\n else if (hkey == HKEY_CLASSES_ROOT) \n {\n rc = deleteValue(userRoot, hkey, key, value);\n }\n if (rc != REG_SUCCESS) \n {\n throw new IllegalArgumentException(""rc="" + rc + "" key="" + key + "" value="" + value);\n }\n }\n\n private static int deleteValue\n (Preferences root, int hkey, String key, String value)\n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });\n if (handles[1] != REG_SUCCESS) \n {\n return handles[1]; // can be REG_NOTFOUND, REG_ACCESSDENIED\n }\n int rc =((Integer) regDeleteValue.invoke(root, \n new Object[] { \n new Integer(handles[0]), toCstr(value) \n })).intValue();\n regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n return rc;\n }\n\n private static int deleteKey(Preferences root, int hkey, String key) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int rc =((Integer) regDeleteKey.invoke(root, \n new Object[] { new Integer(hkey), toCstr(key) })).intValue();\n return rc; // can REG_NOTFOUND, REG_ACCESSDENIED, REG_SUCCESS\n }\n\n private static String readString(Preferences root, int hkey, String key, String value)\n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n new Integer(hkey), toCstr(key), new Integer(KEY_READ) });\n if (handles[1] != REG_SUCCESS) \n {\n return null; \n }\n byte[] valb = (byte[]) regQueryValueEx.invoke(root, new Object[] {\n new Integer(handles[0]), toCstr(value) });\n regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n return (valb != null ? new String(valb).trim() : null);\n }\n\n private static Map<String,String> readStringValues\n (Preferences root, int hkey, String key)\n throws IllegalArgumentException, IllegalAccessException,\n InvocationTargetException \n {\n HashMap<String, String> results = new HashMap<String,String>();\n int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n new Integer(hkey), toCstr(key), new Integer(KEY_READ) });\n if (handles[1] != REG_SUCCESS) \n {\n return null;\n }\n int[] info = (int[]) regQueryInfoKey.invoke(root,\n new Object[] { new Integer(handles[0]) });\n\n int count = info[0]; // count \n int maxlen = info[3]; // value length max\n for(int index=0; index<count; index++) {\n byte[] name = (byte[]) regEnumValue.invoke(root, new Object[] {\n new Integer\n (handles[0]), new Integer(index), new Integer(maxlen + 1)});\n String value = readString(hkey, key, new String(name));\n results.put(new String(name).trim(), value);\n }\n regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n return results;\n }\n\n private static List<String> readStringSubKeys\n (Preferences root, int hkey, String key)\n throws IllegalArgumentException, IllegalAccessException,\n InvocationTargetException \n {\n List<String> results = new ArrayList<String>();\n int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n new Integer(hkey), toCstr(key), new Integer(KEY_READ) \n });\n if (handles[1] != REG_SUCCESS) \n {\n return null;\n }\n int[] info = (int[]) regQueryInfoKey.invoke(root,\n new Object[] { new Integer(handles[0]) });\n\n int count = info[0]; // Fix: info[2] was being used here with wrong results. Suggested by davenpcj, confirmed by Petrucio\n int maxlen = info[3]; // value length max\n for(int index=0; index<count; index++) {\n byte[] name = (byte[]) regEnumKeyEx.invoke(root, new Object[] {\n new Integer\n (handles[0]), new Integer(index), new Integer(maxlen + 1)\n });\n results.add(new String(name).trim());\n }\n regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n return results;\n }\n\n private static int [] createKey(Preferences root, int hkey, String key)\n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n return (int[]) regCreateKeyEx.invoke(root,\n new Object[] { new Integer(hkey), toCstr(key) });\n }\n\n private static void writeStringValue \n (Preferences root, int hkey, String key, String valueName, String value) \n throws IllegalArgumentException, IllegalAccessException, InvocationTargetException \n {\n int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });\n\n regSetValueEx.invoke(root, \n new Object[] { \n new Integer(handles[0]), toCstr(valueName), toCstr(value) \n }); \n regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n }\n\n // utility\n private static byte[] toCstr(String str) {\n byte[] result = new byte[str.length() + 1];\n for (int i = 0; i < str.length(); i++) {\n result[i] = (byte) str.charAt(i);\n }\n result[str.length()] = 0;\n return result;\n }\n }\n \n"
Give me some sample code of Secure Database Configuration in java ?,"Secure Database Configuration\n\n\n Example:\n\n \n // in order for the connection to be secure, it is best practice the credentials and all the relevant sensitive information about the database to be kept at the server configuration files. For this reason the following changes have been made at tomcat's server.xml configuration file. \n\n <Resource auth=""Container"" driverClassName=""com.mysql.cj.jdbc.Driver"" maxActive=""100"" maxIdle=""30"" maxWait=""10000"" name=""jdbc/myJdbc"" password=""javadude"" type=""javax.sql.DataSource"" url=""jdbc:mysql://localhost:3306/aggregate_control"" username=""user""/>\n\n <Resource auth=""Container"" driverClassName=""com.mysql.cj.jdbc.Driver"" maxActive=""100"" maxIdle=""30"" maxWait=""10000"" name=""jdbc/auditlogs_Jdbc"" password=""javadude"" type=""javax.sql.DataSource"" url=""jdbc:mysql://localhost:3306/auditlogs"" username=""user""/>\n\n the above configuration example indicates that there are two different mysql connections to the database. One refers to the auditlog database and the other refers to the aggregate_control database using the jdbc mysql connector. As you can see the mysql username and password are residing in the web application server configuration file.\n\n As for the server side code, in order to be informed of the existence of the databases, the following code must be located in the file /METAINF/context.xml\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n\n <Context path=""/JServletSide"" docBase=""/JServletSide""\n crossContext=""true"" reloadable=""true"" debug=""1"">\n\n\n <Resource name=""jdbc/myJdbc"" auth=""Container"" type=""javax.sql.DataSource""\n maxActive=""100"" maxIdle=""30"" maxWait=""10000""\n username=""user"" password=""javadude"" \n driverClassName=""com.mysql.cj.jdbc.Driver""\n url=""jdbc:mysql://localhost:3306/aggregate_control""/>\n\n <Resource name=""jdbc/auditlogs_Jdbc"" auth=""Container"" type=""javax.sql.DataSource""\n maxActive=""100"" maxIdle=""30"" maxWait=""10000""\n username=""user"" password=""javadude"" \n driverClassName=""com.mysql.cj.jdbc.Driver""\n url=""jdbc:mysql://localhost:3306/auditlogs""/>\n </Context>\n\n The above snippet indicates the database resource that will be use in the servlet in order to perform a successful connection to the database\n\n Afterwards the following servlet snippet will be used for the database connection. \n\n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n Connection conn = ds.getConnection();\n\n the init context line refers to the database resource inside the context.xml file\n\n Also in order for the application to map the database reference we have to include the following lines inside the /WEBINF/web.xml \n \n <resourceref>\n <description>DB Connection</description>\n <resrefname>jdbc/myJdbc</resrefname>\n <restype>javax.sql.DataSource</restype>\n <resauth>Container</resauth>\n </resourceref>\n <resourceref>\n <description>DB Connection</description>\n <resrefname>jdbc/auditlogs_Jdbc</resrefname>\n <restype>javax.sql.DataSource</restype>\n <resauth>Container</resauth>\n </resourceref>\n\n"
Give me some sample code of Crossdomain XML in java ?,"Crossdomain XML\n\n\n Example:\n\n\n A bad example of a Crossdomain XML would be:\n\n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n Because it allows access from all other domains.\n\n Instead of this approach you might want to use the following restrictions. \n Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" \n xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>\n"
Give me some sample code of CSRF Token in java ?,"CSRF Token \n\n\n Example:\n\n\n /*\n For CSRF Token we used a separate class outside of the normal controller, since\n it must be reused on several locations throughout the application\n\n First after a successful validation of a user login, the application must also start a session\n which contains the ""cross site request forgery"" token.\n */\n\n //For generating the token we want to use a secure cryptographic function\n SecureRandom random = new SecureRandom();\n\n //Then we generate a long value token containing a high entropy\n byte[] randomBytes = new byte[128];\n\n random.nextBytes(randomBytes);\n\n //Then we base64 encode the string\n String csrftoken = Base64.getEncoder().encodeToString(randomBytes);\n\n HttpSession session \n session.setAttribute( ""CSRF"", csrftoken);\n\n /*\n The next step is implementing this random token in each form field as a hidden input parameter\n and send it to a function which checks if the submitted token is equal to the one set after successful validation.\n */\n\n <%\n Object token = request.getSession().getAttribute(""CSRF"");\n String tokenStr = """";\n if (token != null)\n {\n tokenStr = (String) token;\n } \n %>\n\n <html>\n <head>\n <meta httpequiv=""ContentType"" content=""text/html; charset=ISO88591"">\n <title>Insert title here</title>\n </head>\n <body>\n Welcome to the OWASP CSRFGuard Test Application! Where would you like to go?\n <br/>\n\n <form action=""/Home/csrf"" method=""post"">\n <input type=""text"" name=""testValue"" /> \n <br/> \n <input type=""hidden"" value=""<%=tokenStr%>"" name=""token""/>\n <input type=""submit"" value=""login"">\n </form>\n\n */\n\n package com.edw;\n import java.io.IOException;\n import javax.servlet.RequestDispatcher;\n import javax.servlet.ServletException;\n import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n\n @WebServlet(""/CheckCSRF"")\n\n public final class CheckCSRF extends HttpServlet\n {\n\n private static final long serialVersionUID = 1L;\n\n public CheckCSRF() {\n super();\n }\n\n //here we are sending the token towards the function which does the token validation \n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\n String token = request.getParameter(""token"");\n String sessionToken = (String) request.getSession().getAttribute(""CSRF"")\n\n if(!sessionToken.equals(token))\n { \n\n /*\n If there was no match, the authentication session will be emptied and sessions will be abandoned. Then, the user must be redirected towards the login page.\n */ \n if ("""".equalsIgnoreCase(request.getSession().getAttribute(""authenticateUser"")))\n {\n request.getSession().invalidate();\n request.setAttribute(""msg"", ""Served at: "" + request.getContextPath());\n RequestDispatcher rd = request.getRequestDispatcher(""/login"");\n rd.forward(request, response);\n return;\n }\n } \n }\n\n protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n super.doGet(request, response);\n }\n }\n\n"
Give me some sample code of Aggregate user contol in java ?,"Aggregate User Control \n\n\n Example:\n\n\n /*\n In order to enforce Aggregate access control protection the best method would be to \n define your rules by means of a database structure rather than sessions or logs.\n\n Verify the system can protect against aggregate or continuous access of secured functions, \n resources, or data. For example, consider the use of a resource governor to limit the number \n of edits per hour or to prevent the entire database from being scraped by an individual user.\n\n TABLE users\n  \n | userID | userName | password | privilegeID | access | aggregate  |\n  \n | 1 | Admin | Csdar323 | 1 | TRUE | 2322 |\n  \n | 2 | User | Adf4fsv | 2 | FALSE | 0 |\n  \n | 3 | Guest | dff4fKr | 3 | TRUE | 125 | \n \n\n TABLE privileges\n  \n | privilegeID | privilege | \n \n | 1 | edit:read:delete |\n \n | 2 | edit:read |\n \n | 3 | read |\n \n\n The following code snippets can be used in relation with this class in order to have a full implemented example \n */\n\n // HTML/JSP page index.jsp\n\n <%@page contentType=""text/html"" pageEncoding=""UTF8""%>\n\n <!DOCTYPE html>\n <html>\n <head>\n <meta httpequiv=""ContentType"" content=""text/html; charset=UTF8"">\n <title>Insert Value</title>\n </head>\n <body>\n <form method=""post"" action=""aggregateControl"">\n <table>\n <tr>\n <td>Name : </td>\n <td><input type=""text"" id=""name"" name=""name"" /></td>\n </tr> \n <tr>\n <td>Surname : </td>\n <td><input type=""text"" id=""surname"" name=""surname"" /></td>\n </tr>\n <tr>\n <td>Password : </td>\n <td><input type=""text"" id=""password"" name=""password"" /></td>\n </tr> \n <tr>\n <td><input type=""hidden"" id=""userID"" value=""2"" name=""userID"" /></td>\n </tr> \n <tr>\n <td colspan=""2""><input type=""submit"" /></td> \n </tr>\n </table>\n </form> \n </body>\n </html>\n\n\n // Servlet \n\n //The following code snippet can be used in relation with the following servlet snippet\n\n\n public final class AggregateControl extends HttpServlet{\n private static final long serialVersionUID = 1L;\n public aggregateControl() {\n super();\n }\n \n final static Logger logger = Logger.getLogger(AggregateControl.class);\n private String userName;\n private String password;\n private String userID;\n\n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException \n { \n userName = request.getParameter(""name"");\n userID = request.getParameter(""userID"");\n Aggregate ag = new Aggregate();\n ag.setUserName(userName);\n ag.setUserID(userID);\n boolean invalidate_sessions = ag.aggregateControl(0);\n \n if (invalidate_sessions == true)\n {\n request.getSession().invalidate(); \n }\n \n doGet(request, response);\n }\n\n /* \n Output logs indicating that user has been logged out after many database connections \n\n [ .... ] \n\n 20161124 11:17:55 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:19:20.803\n 20161124 11:18:07 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:36:09.763\n 20161124 11:18:15 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:36:52.443\n 20161124 11:18:23 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:37:28.358\n 20161124 11:18:32 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:38:03.250\n 20161124 11:18:39 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2 Time: 20170705T12:38:36.413\n 20161124 11:18:49 INFO Aggregate:240 User account was locked out due to aggregate user control system User: ddd Userid ID: 2\n 20161124 11:18:49 INFO Aggregate:277 Connection to the database was made successfully User: ddd User ID: 2\n\n [ ..... ]\n\n The following example gives another implementation of Aggregate class\n */\n\n package com.edw;\n\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n package prime.com.beans;\n\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class Aggregate {\n\n private String userName;\n private String password;\n private String userID;\n private int control = 0; \n \n final static Logger logger = Logger.getLogger(Aggregate.class);\n\n public boolean aggregateControl(int count, String userName, String userID)\n { \n boolean invalidate_sessions = false; \n \n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT aggregate from users WHERE userID = ?"";\n \n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, userID);\n \n // execute the query, and get a java result set\n //We bind the parameter in order to prevent SQL injections\n\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n control = rs.getInt(""aggregate"");\n userName = rs.getString(""userName"");\n }\n\n //We update the aggregate table in the database in order to \n //keep track of the number of connections the user made\n count = control + 1;\n \n // create the java mysql update prepared statement\n String query2 = ""UPDATE users SET aggregate = ? WHERE userID = ?"";\n PreparedStatement preparedStmt2 = conn.prepareStatement(query2);\n preparedStmt2.setInt(1, count);\n preparedStmt2.setString(2, userID);\n\n // execute the java prepared statement\n preparedStmt2.executeUpdate();\n \n /*\n Every time the user accesses the database we keep track of the number of times he\n connected. Whenever the user passes a reasonable number he should be rejected \n since he could be an attacker scraping your table contents and stealing company information\n You could a CRON job or stored procedure in your system in order to \n clean the Aggregate column within certain time frames\n */\n \n if ( control > 5000)\n { \n //this breach has to be reported into the log files\n logger.info( "" User account was locked out due to aggregate user control system"" + "" User: "" + userName + "" User ID: "" + userID + ""Time: "" + LocalDateTime.now());\n\n /*\n Whenever the reasonable number of connections the user made was surpassed we destroy all the \n sessions to deny the user any further access to the system. This session invalidation is controlled from the SERVLET \n \n */\n invalidate_sessions = true; \n \n /*\n Than we set his access level on his account to FALSE in order to prevent \n him from logging in again till you did your Forensics on the log files\n */\n \n // create the java MySql update prepared statement\n \n int access = 0; //0 is considered as FALSE in MySQL\n String query3 = ""UPDATE users SET access = ? WHERE userID = ?"";\n PreparedStatement preparedStmt3 = conn.prepareStatement(query3);\n preparedStmt3.setInt(1, access);\n preparedStmt3.setString(2, userID);\n\n // execute the java prepared statement\n preparedStmt3.executeUpdate();\n preparedStmt3.close();\n \n }\n st.close();\n preparedStmt2.close();\n conn.close();\n\n } catch (SQLException | NamingException e) {\n logger.error(""cannot update database. check query"" + e.toString() );\n }  \n \n //the connection has to be reported into the log files\n if(logger.isInfoEnabled()){\n logger.info(""Connection to the database was made successfully "" + "" User: "" + userName + "" User ID: "" + userID + ""Time: "" + LocalDateTime.now() );\n }else{\n logger.error(""Couldnt connect to database "" + "" User: "" + userName + "" User ID: "" + userID + ""Time: "" + LocalDateTime.now());\n }\n \n return invalidate_sessions;\n }\n\n public String getUserName() {\n return userName;\n }\n\n public void setUserName(String userName) {\n this.userName = userName;\n }\n\n public String getPassword() {\n return password;\n }\n\n public void setPassword(String password) {\n this.password = password;\n }\n\n public String getUserID() {\n return userID;\n }\n\n public void setUserID(String userID) {\n this.userID = userID;\n }\n }\n"
Give me some sample code of SQL query JDBC in java ?,"SQL Query JDBC\n\n\n Example:\n\n\n /*\n The JDBC library provides an API for building SQL commands that sanitize untrusted data. Use the java.sql.PreparedStatement class properly to escape input strings and prevent SQL injection.\n This example uses a parametric query with a ? character as a placeholder for the argument, and also validates the length of the username argument, preventing an attacker from submitting an arbitrarily long user name.\n */\n\n public void doPrivilegedAction(\n String username, char[] password\n ) throws SQLException {\n Connection connection = getConnection();\n if (connection == null) {\n // Handle error\n }\n try {\n String pwd = hashPassword(password);\n // Validate username length\n if (username.length() > 8) {\n // Handle error\n }\n \n String sqlString = ""select * from db_user where username=? and password=?"";\n PreparedStatement stmt = connection.prepareStatement(sqlString);\n stmt.setString(1, username);\n stmt.setString(2, pwd);\n ResultSet rs = stmt.executeQuery();\n if (!rs.next()) {\n throw new SecurityException(""User name or password incorrect"");\n }\n // Authenticated; proceed\n } finally {\n try {\n connection.close();\n } catch (SQLException x) {\n // Forward to handler\n }\n }\n }\n\n\n"
Give me some sample code of SQL Query in java ?,"SQL Query prepared statement and binding\n\n\n Example: \n\n\n /*\n This example uses a prepared statement in order to insert data into the database.\n Because this method enforces the user to prepare all user input passed into the query, it always escapes SQL injections so none could be accidentally forgotten.\n\n For detecting a possible attack on your application simply escaping the user input is obviously not enough.\n Therefore, you'll want to verify the input as submitted by the user does not contain malicious code.\n In this example the expected input is az/09:\n */\n\n :::java \n String employeeId = request.getParameter('userId');\n String salary = request.getParameter('salary');\n Pattern numeric = Pattern.compile("".*[^09].*"");\n if(!numeric.matcher(employeeId).find() && !numeric.matcher(salary).find()){\n\n /*\n Always log an action first and then perform the action:\n Set a log for whenever there is unexpected userinput with a threat level\n */\n log(userId, ""Invalid expected input"", ""FAIL"", Calendar.getInstance(), ""privilege"", ""HIGH"" );\n\n /*\n Set counter; if counter hits 3 the user's session must terminated.\n After 3 session terminations, the user's account must be blocked\n */\n counter++;\n if(counter > 2 ){\n blockUser(userId);\n }\n\n String updateQuery = ""UPDATE EMPLOYEES SET SALARY = ? WHERE ID = ?"";\n PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);\n preparedStatement.setInt(1, salary);\n preparedStatement.setInt(2, employeeId);\n }\n\n // Always use parameterized queries with prepared statements.\n // For example, with Hibernate (HQL) named parameters\n\n :::java\n Query query = session.createQuery(""UPDATE EMPLOYEES SET SALARY = :salary WHERE ID = :employeeId"");\n query.setParameter(""salary"", salary);\n query.setParameter(""employeeId"", employeeId);\n\n // Or with JPA:\n\n :::java\n Query query = entityManager.createQuery(""UPDATE EMPLOYEES SET SALARY = :salary WHERE ID = :employeeId"");\n query.setParameter(""salary"", salary);\n query.setParameter(""employeeId"", employeeId);\n\n"
Give me some sample code of session hijacking and fixation in java ?,"Session hijacking and fixation \n\n\n Example:\n\n\n /*\n As soon as a user logs into your application you must store his session id as wel as his\n IP address along with his userID. This information will be used later on in your application in order to\n identify possible session hijacking.\n\n TABLE track_sessions\n \n | TrackID | userID | session | ipaddress | \n \n | 1 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.89 | \n \n | 2 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.81 |\n \n | 3 | 2 | c80959d3ea4c166413774e45375ac2a1 | 987.65.43.21 |\n \n\n In order to prevent session hijacking there are a couple of defense strategies\n which combined are a hardened defense. \n */\n\n /*\n First we implement the strict transport security header, this is in order to prevent\n users from accessing your application over an unprotected connection.\n */\n\n //Example of the strict transport security header:\n // response.setHeader(""StrictTransportSecurity"", ""maxage=31536000"");\n\n\n //If all present and future subdomains will be HTTPS:\n //response.setHeader(""StrictTransportSecurity"", ""maxage=31536000; includeSubdomains;"");\n\n\n /*\n Recommended: If the site owner would like their domain to be included in the HSTS preload \n list maintained by Chrome (and used by Firefox and Safari), then use:\n */\n\n // response.setHeader(""StrictTransportSecurity"", ""maxage=31536000; includeSubdomains; preload"");\n\n\n /*\n The `preload` flag indicates the site owner's consent to have their domain preloaded. The preload list\n enforces the browser to always present your application on HTTPS even on the first time\n the user hits your application\n */\n\n /*\n Then we set the httpOnly flag\n (see ""HttpOnly"" in the code examples for more details about implementation)\n */\n\n /*\n Then we set the flag for session timeout\n (see ""Timeout"" in the code examples for more details about implementation)\n */\n\n /*\n Then we set the session secure flag \n (see ""Secure flag"" in the code examples for more details about implementation)\n */\n\n /*\n On login we also add another cookie with a random value to the application in order to\n prevent an attacker to fixate an JSSESSION id on your users and hijack their sessions\n (This code example can be found in the ""Login functionality"" for more detailed information)\n */\n\n /*\n NOTE: On applications that require high level security, there should never be a\n remember me functionality implemented.\n */\n\n /*\n Now imagine the scenario after the login of the user (see the ""login functionality"" in\n the code examples for more details). Whenever the user is logged in, the users ip address \n and session id are also stored in the database these values are used in order to verify \n if there are multiple users active on the same session. \n If so, we can let the user decide to terminate the session and terminate the\n other assigned sessions.\n */\n\n package com.edw;\n\n import java.io.IOException;\n import java.sql.*;\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.servlet.RequestDispatcher;\n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class SessionHijack extends HttpServlet{\n \n private static final long serialVersionUID = 1L;\n \n public SessionHijack() {\n super();\n }\n \n //First we include the audit log class.\n final static Logger logger = Logger.getLogger(SessionHijack.class);\n \n private int userID;\n private String ipaddress;\n private String sess ;\n private String user_ID ;\n private String trackID ;\n\n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException \n {\n user_ID = request.getSession().getId(); \n //Here we connect to the database\n Connection conn = null;\n \n if ((request.getSession().getAttribute(""authenticateUser"") != ""isLoggedin"") || \n (request.getSession().getAttribute(""authenticateUser"") == """"))\n { \n RequestDispatcher rd =\n request.getRequestDispatcher(""/login"");\n rd.forward(request, response); \n }\n\n try {\n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n \n String query = ""SELECT * from tracking WHERE userId = ?"";\n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, user_ID);\n \n // execute the query, and get a java resultset\n //We bind the parameter in order to prevent sql injections\n ResultSet rs = st.executeQuery();\n \n //Next we read the value from the database and put it into a variable\n while (rs.next())\n {\n sess = rs.getString(""session"");\n ipaddress = rs.getString(""ipaddress"");\n trackID = rs.getString(""TrackID"");\n \n if ((request.getSession().getAttribute(""JSSESSIONID"").toString() != sess) && \n (ipaddress != request.getRemoteAddr()))\n { \n \n //We log the multiple users on the system \n logger.info(""Multiple users with same session id detected"" + "" User ID: "" + userID);\n /*\n We redirect the user to a page which alerts him as well as gives him the option to destroy the \n multiple sessions if he does not trust them\n */\n\n RequestDispatcher rd =\n request.getRequestDispatcher(""/Home/multipleUsers"");\n rd.forward(request, response);\n }  \n }  \n st.close();\n conn.close(); \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n doGet(request, response);\n } \n \n protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n response.getWriter().append(""Served at: "").append(request.getContextPath()).append("" OWASP Knowledge Base Code Examples"");\n }\n\n }\n /*\n the only thing left to do now is to update your track_sessions table by inserting\n the ipaddress, sessionID and userID if you want to accept the other sessions as valid.\n Otherwise the user just has to terminate the current session in order to lock out the\n other sessions.\n */\n"
Give me some sample code of AuditLog in java ?,"AuditLogs\n\n\n Example:\n\n\n package com.edw;\n import java.io.BufferedWriter;\n import java.io.FileWriter;\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class AuditLog {\n \n private int countID;\n private int userID; \n private int count; \n private int blocker; \n public static String validation = ""pass""; \n \n final static Logger logger = Logger.getLogger(AuditLog.class);\n \n \n public void SetLog(String userid, String message, String state, LocalDateTime localDateTime, String ThreatLevel, String remote_address)\n {\n\n try(FileWriter fw = new FileWriter(""C:\\log.txt"", true);\n BufferedWriter bw = new BufferedWriter(fw);\n PrintWriter out = new PrintWriter(bw))\n {\n out.println(userid + "" "" + message + "" "" + remote_address /*REMOTE_ADDR from servlet*/ + "" "" + state + "" "" + LocalDateTime.now()\n + "" "" + localDateTime);\n\n } catch (IOException e) {\n logger.error(""cannot write to file : "" + e.toString());\n } \n }\n \n public void SetLog(String userid, String message, String state, LocalDateTime localDateTime, String ThreatLevel)\n {\n \n try(FileWriter fw = new FileWriter(""C:\\log.txt"", true);\n BufferedWriter bw = new BufferedWriter(fw);\n PrintWriter out = new PrintWriter(bw))\n {\n out.println(userid + "" "" + message + "" "" + state + "" "" + LocalDateTime.now()\n + "" "" + localDateTime);\n\n } catch (IOException e) {\n logger.error(""cannot write to file : "" + e.toString());\n } \n }\n \n public String counter(int counting)\n {\n\n Connection connect = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n connect = ds.getConnection(); \n \n /*\n First we select the counts from the count table in order to verify if the user session should be terminated\n or that the user should be locked out.\n */\n String sqlquery = ""SELECT * from counter"";\n \n //We bind the parameter in order to prevent sql injections\n PreparedStatement state = connect.prepareStatement(sqlquery);\n \n // execute the query, and get a java resultset\n ResultSet res = state.executeQuery();\n \n //Next we read the value from the database and put it into a variable\n while (res.next())\n {\n userID = res.getInt(""userID"");\n count = res.getInt(""count"");\n blocker = res.getInt(""blocker"");\n }\n \n state.close();\n connect.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n return ""cannot search database. check query""; \n }\n \n Connection conn = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n \n /*\n First we select the counts from the count table in order to verify if the user session should be terminated\n or that the user should be locked out.\n */\n String query = ""SELECT * from counter WHERE userID = ?"";\n \n //We bind the parameter in order to prevent sql injections\n PreparedStatement st = conn.prepareStatement(query);\n st.setInt(1, userID);\n \n // execute the query, and get a java resultset\n ResultSet rs = st.executeQuery();\n \n //Next we read the value from the database and put it into a variable\n while (rs.next())\n {\n count = rs.getInt(""count"");\n blocker = rs.getInt(""blocker"");\n }\n \n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n return ""cannot search database. check query""; \n }\n \n \n //We add the counting to the database results for the final value\n count = count + counting; \n int finalCount = count;\n blocker = blocker + counting;\n int finalBlock = blocker;\n \n //Here we connect to the database \n Connection conn2 = null;\n try {\n Context initContext2 = new InitialContext();\n Context webContext2 = (Context)initContext2.lookup(""java:/comp/env"");\n DataSource ds2 = (DataSource)webContext2.lookup(""jdbc/myJdbc"");\n conn2 = ds2.getConnection(); \n \n // create the java mysql update preparedstatement\n String query2 = ""UPDATE counter SET count = ?, blocker = ? WHERE userID = ?"";\n PreparedStatement preparedStmt2 = conn2.prepareStatement(query2);\n preparedStmt2.setInt(1, count);\n preparedStmt2.setInt(2, blocker);\n preparedStmt2.setInt(3, userID);\n\n // execute the java preparedstatement\n preparedStmt2.executeUpdate();\n \n \n conn2.close();\n } catch (SQLException | NamingException e) {\n logger.error(""SQL insert query error in update counter"" + e.toString() );\n return ""SQL insert query error in update counter""; // this can be used to dispatch the response back to the client showing a corresponding message\n } \n \n \n if (finalCount == 3)\n {\n validation = ""terminate"";  \n }\n\n if (finalBlock > 3)\n {  \n int access = 0; //0 is considered as FALSE in MySQL\n \n //Here we connect to the database \n Connection conn3 = null;\n try {\n Context initContext3 = new InitialContext();\n Context webContext3 = (Context)initContext3.lookup(""java:/comp/env"");\n DataSource ds3 = (DataSource)webContext3.lookup(""jdbc/myJdbc"");\n conn3 = ds3.getConnection(); \n \n // create the java mysql update prepared statement\n String query3 = ""UPDATE users set access = ? WHERE userID = ?"";\n PreparedStatement preparedStmt3 = conn3.prepareStatement(query3);\n preparedStmt3.setInt(1, access);\n preparedStmt3.setInt(3, userID);\n\n // execute the java preparedstatement\n preparedStmt3.executeUpdate();\n \n validation = ""block"";\n \n conn3.close();\n } catch (SQLException | NamingException e) {    \n logger.error(""SQL insert query error in update access"" + e.toString() );\n return ""SQL insert query error in update access"" ; // this can be used to dispatch the response back to the client showing a corresponding message    \n } \n }\n \n return validation;  \n } \n }\n\n"
Give me some sample code of Randomizer function in java ?,"Randomizer function\n\n\n Example:\n\n\n package com.edw;\n\n import java.security.SecureRandom;\n import java.util.ArrayList;\n import java.util.Base64;\n import java.util.List;\n import org.apache.log4j.Logger;\n\n public final class Randomizer {\n \n private List<Integer> bytes = new ArrayList<>();\n private int address = 0;\n final static Logger logger = Logger.getLogger(Randomizer.class);\n \n public String randomize()\n { \n SecureRandom csprng = new SecureRandom();\n byte[] randomBytes = new byte[128];\n csprng.nextBytes(randomBytes);\n String csrftoken = Base64.getEncoder().encodeToString(randomBytes);\n \n return csrftoken; \n }\n \n public String generateToken(int numberOfBytes)\n { \n SecureRandom csprng = new SecureRandom();\n byte[] randomBytes = new byte[numberOfBytes];\n csprng.nextBytes(randomBytes);\n String csrftoken = null;\n try {\n csrftoken = this.bin2hex(randomBytes[0]);\n } catch (Exception e) {\n logger.error(""Randomizer error : "" + e.toString());\n }\n return csrftoken; \n }\n public String generate(int numberOfBytes)\n { \n SecureRandom csprng = new SecureRandom();\n byte[] randomBytes = new byte[numberOfBytes];\n csprng.nextBytes(randomBytes);\n String csrftoken = Base64.getEncoder().encodeToString(randomBytes);\n return csrftoken; \n }\n \n public String secure_password(int numberOfBytes)\n { \n SecureRandom csprng = new SecureRandom();\n byte[] randomBytes = new byte[numberOfBytes];\n csprng.nextBytes(randomBytes);\n String token = randomBytes.toString();\n return token; \n }\n \n\n public void setAddress(int address) \n {\n this.address = address;\n }\n\n public String bin2hex(int byt) throws Exception \n {\n if (bytes.size() == 0xFF) \n {\n throw new Exception(""Too many bytes""); \n }\n bytes.add(byt);\n int sum = 0;\n StringBuilder sb = new StringBuilder();\n sb.append(':');\n sb.append(toHexString(bytes.size(), 2));\n sum += bytes.size();\n sb.append(toHexString(address, 4));\n sum += (address & 0xFF00) >> 8;\n sum += address & 0xFF;\n address += bytes.size();\n sb.append(""00"");\n for (Integer b : bytes) {\n sum += b;\n sb.append(toHexString(b, 2));\n }\n sb.append(toHexString((~(sum & 0xFF) + 1) & 0xFF, 2));\n bytes.clear();\n return sb.toString();\n }\n\n private String toHexString(int i, int len) \n {\n String hex = Long.toHexString(i).toUpperCase();\n if (len == 2) \n {\n if (hex.length() == 1) \n {\n return ""0"" + hex;\n }else{\n return hex;\n }\n }else{\n if (hex.length() == 1) \n {\n return ""000"" + hex;\n } else if (hex.length() == 2) \n {\n return ""00"" + hex;\n } else if (hex.length() == 3) \n {\n return ""0"" + hex;\n }else{\n return hex;\n }\n }\n }\n }\n\n"
Give me some sample code of Whitelisting function in java ?,"Whitelisting function\n\n\n Example:\n\n\n package com.edw;\n import org.apache.log4j.Logger;\n\n public final class WhiteList\n { \n final static Logger logger = Logger.getLogger(WhiteList.class);\n public boolean WhiteListing(String allowed, String input)\n {\n /*\n Here we define a white list of pages we want the user to be allowed to be redirected to, all \n patterns are terminated whenever they not comply with the predefined white list\n */\n \n String[] pattern = allowed.split("","");\n //For validation if the file returned true\n boolean validated = false;\n //To catch the user submitting evil requests we count the number of times the for loop hits false\n int count = 0;\n int countArray = 0;\n \n for( int i = 0; i < pattern.length; i++)\n {\n String item = pattern[i];\n \n //If filename is equal to the predefined items\n if ( input == item)\n {\n validated = true ; \n count = 1;\n }\n \n //Here we increase the counts, if they are equal we know the function did not hit a valid filename\n count++;\n countArray++;\n }\n \n if (countArray == count)\n { \n //this breach has to be reported into the log files\n validated = false;\n logger.info(""Audit log message!"" + ""FAIL"" + ""HIGH""); \n }\n return validated; \n } \n }\n \n\n"
Give me some sample code of Charsets in java ?,"Charsets \n\n\n Example:\n\n\n /*\n In order to set the ""Charsets"" header you'll have to add the \n following code to the head of your application, the following code could be used in your controller \n for by example, text/html:\n */\n\n response.addHeader(""ContentType: text/html"", ""charset=utf8"");\n\n /*\n Or directly into your html markup:\n */\n\n <meta httpequiv=""ContentType"" content=""text/html; charset=utf8"">\n"
Give me some sample code of X Content Type Options header in java ?,"XContentTypeOptions header\n\n\n Example:\n\n\n /*\n In order to set the ""XContentTypeOptions"" header you'll have to add the \n following code to the head of your application, the following code could be used in your controller:\n */\n\n response.appendHeader(""XContentTypeOptions"", ""nosniff"");\n"
Give me some sample code of XML External Entities in java ?,"XML External Entities \n\n\n Example:\n\n \n /*\n The overall prevention method for loading external entities is adding the following line of code:\n This line of code function tells the underlying libxml parsing to not try to interpret the values \n of the entities in the incoming XML and leave the entity references intact.\n\n Both DocumentBuilderFactory and SAXParserFactory XML Parsers can be configured using the same techniques to protect them against XXE.The JAXP DocumentBuilderFactory setFeature method allows a developer to control which implementationspecific XML processor features are enabled or disabled. The features can either be set on the factory or the underlying XMLReader setFeature method. Each XML processor implementation has its own features that govern how DTDs and external entities are processed.\n */\n\n DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n String FEATURE = null;\n\n //or\n\n SAXParserFactory spf = SAXParserFactory.newInstance();\n SAXParser saxParser = spf.newSAXParser();\n XMLReader reader = saxParser.getXMLReader();\n \n \n\n // DocumentBuilderFactory\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException; // catching unsupported features\n\n DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n String FEATURE = null;\n try {\n // This is the PRIMARY defense. If DTDs (doctypes) are disallowed, almost all XML entity attacks are prevented\n // Xerces 2 only http://xerces.apache.org/xerces2j/features.htmldisallowdoctypedecl\n FEATURE = ""http://apache.org/xml/features/disallowdoctypedecl"";\n dbf.setFeature(FEATURE, true);\n\n // If you can't completely disable DTDs, then at least do the following:\n // Xerces 1 http://xerces.apache.org/xercesj/features.htmlexternalgeneralentities\n // Xerces 2 http://xerces.apache.org/xerces2j/features.htmlexternalgeneralentities\n // JDK7+ http://xml.org/sax/features/externalgeneralentities \n FEATURE = ""http://xml.org/sax/features/externalgeneralentities"";\n dbf.setFeature(FEATURE, false);\n\n // Xerces 1 http://xerces.apache.org/xercesj/features.htmlexternalparameterentities\n // Xerces 2 http://xerces.apache.org/xerces2j/features.htmlexternalparameterentities\n // JDK7+ http://xml.org/sax/features/externalparameterentities \n FEATURE = ""http://xml.org/sax/features/externalparameterentities"";\n dbf.setFeature(FEATURE, false);\n\n // Disable external DTDs as well\n FEATURE = ""http://apache.org/xml/features/nonvalidating/loadexternaldtd"";\n dbf.setFeature(FEATURE, false);\n\n // and these as well, per Timothy Morgan's 2014 paper: ""XML Schema, DTD, and Entity Attacks"" (see reference below)\n dbf.setXIncludeAware(false);\n dbf.setExpandEntityReferences(false);\n \n // And, per Timothy Morgan: ""If for some reason support for inline DOCTYPEs are a requirement, then \n // ensure the entity settings are disabled (as shown above) and beware that SSRF attacks\n // (http://cwe.mitre.org/data/definitions/918.html) and denial \n // of service attacks (such as billion laughs or decompression bombs via ""jar:"") are a risk.""\n\n // remaining parser logic\n ...\n \n } catch (ParserConfigurationException e) {\n // This should catch a failed setFeature feature\n logger.info(""ParserConfigurationException was thrown. The feature '"" +\n FEATURE +\n ""' is probably not supported by your XML processor."");\n ...\n }\n catch (SAXException e) {\n // On Apache, this should be thrown when disallowing DOCTYPE\n logger.warning(""A DOCTYPE was passed into the XML document"");\n ...\n }\n catch (IOException e) {\n // XXE that points to a file that doesn't exist\n logger.error(""IOException occurred, XXE may still possible: "" + e.getMessage());\n ...\n }\n \n \n \n \n \n // SAXParserFactory\n \n import javax.xml.parsers.ParserConfigurationException; // catching unsupported features\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n \n import org.xml.sax.SAXNotRecognizedException; // catching unknown features\n import org.xml.sax.SAXNotSupportedException; // catching known but unsupported features\n import org.xml.sax.XMLReader;\n \n ...\n \n SAXParserFactory spf = SAXParserFactory.newInstance();\n SAXParser saxParser = spf.newSAXParser();\n XMLReader reader = saxParser.getXMLReader();\n \n try {\n // Xerces 1 http://xerces.apache.org/xercesj/features.htmlexternalgeneralentities\n // Xerces 2 http://xerces.apache.org/xerces2j/features.htmlexternalgeneralentities\n \n // Using the SAXParserFactory's setFeature\n spf.setFeature(""http://xml.org/sax/features/externalgeneralentities"", false);\n // Using the XMLReader's setFeature\n reader.setFeature(""http://xml.org/sax/features/externalgeneralentities"", false);\n \n // Xerces 2 only http://xerces.apache.org/xercesj/features.htmlexternalgeneralentities\n spf.setFeature(""http://apache.org/xml/features/disallowdoctypedecl"", true);\n \n // remaining parser logic\n ...\n \n } catch (ParserConfigurationException e) {\n // Tried an unsupported feature.\n \n } catch (SAXNotRecognizedException e) {\n // Tried an unknown feature.\n \n } catch (SAXNotSupportedException e) {\n // Tried a feature known to the parser but unsupported.\n \n } catch ... {\n \n }\n ...\n"
Give me some sample code of XSL Injection Prevention in java ?,"XSL Injection Prevention \n\n\n Example:\n\n\n /*\n In order to prevent XSL injections you must enforce strict policy's whenever the\n files are loaded from a source controlled by a possible attacker.\n\n Let's say for example that the user can choose from several XSL files on your application.\n\n ABC.xsl arranges your employee names on alphabetical order\n CBA.xsl just shows the input by order of your XML file.\n\n Before attaching the XSL files to the style sheet we first want to \n do validation on the request to make sure the included file was one of our own predefined files\n */\n\n package com.edw;\n\n import java.io.File;\n import java.io.IOException;\n\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.FactoryConfigurationError;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.OutputKeys;\n import javax.xml.transform.Source;\n import javax.xml.transform.Transformer;\n import javax.xml.transform.TransformerException;\n import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.dom.DOMResult;\n import javax.xml.transform.dom.DOMSource;\n import org.w3c.dom.ls.LSSerializer;\n import org.w3c.dom.Document;\n import org.xml.sax.SAXException;\n import org.w3c.dom.ls.DOMImplementationLS;\n\n public class IncludeXSL {\n\n private WhiteList wt = new WhiteList();\n \n public String includeXSL(String WhiteListing, String input)\n {\n LSSerializer serializer = null ;\n boolean continue_ = true;\n Document result = null;\n \n /*\n We want to WhiteList the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about WhiteListing see ""whitelisting"" in the code examples:\n */\n \n if (wt.WhiteListing(WhiteListing, input) == false) { continue_ = false; }\n \n //If all went good we do the function\n if(continue_)\n {\n //LOAD XML FILE\n //Load the XML source\n Document xslt = null; \n Document xml = null; \n try {\n File fXmlFile = new File(input);\n DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n DocumentBuilder db = dbFactory.newDocumentBuilder(); \n xml = db.newDocument();\n xslt = db.parse(fXmlFile);\n } catch (SAXException | IOException | ParserConfigurationException e) {\n \n }\n \n xml.appendChild(xml.createElementNS(null, ""root""));\n try {\n result = transformXML(xml, xslt);\n } catch (TransformerException | ParserConfigurationException | FactoryConfigurationError e) {\n \n }\n serializer = ((DOMImplementationLS) xml.getImplementation()).createLSSerializer();\n }\n return serializer.writeToString(result); \n }\n \n //Configure the transformer\n public static Document transformXML(Document xml, Document xslt) throws TransformerException, ParserConfigurationException, FactoryConfigurationError {\n\n Source xmlSource = new DOMSource(xml);\n Source xsltSource = new DOMSource(xslt);\n DOMResult result = new DOMResult();\n\n // the factory pattern supports different XSLT processors\n TransformerFactory transFact = TransformerFactory.newInstance();\n Transformer trans = transFact.newTransformer(xsltSource);\n trans.setOutputProperty(OutputKeys.ENCODING, ""UTF8"");\n trans.transform(xmlSource, result);\n Document resultDoc = (Document) result.getNode();\n\n return resultDoc;\n }\n }\n\n"
Give me some sample code of XSS Filtering in java ?,"XSS filtering\n\n\n Example:\n\n\n package com.edw;\n\n import org.owasp.esapi.ESAPI;\n import org.jsoup.Jsoup;\n import org.jsoup.safety.Whitelist;\n\n public final class XssFilter {\n\n /**\n * Strips any potential XSS threats out of the value\n * @param value\n * @return\n */\n public String filter( String value ) {\n  if( value == null )\n return null;\n \n // Use the ESAPI library to avoid encoded attacks.\n value = ESAPI.encoder().canonicalize( value );\n \n // Avoid null characters\n value = value.replaceAll(""\0"", """");\n \n // Clean out HTML\n value = Jsoup.clean( value, Whitelist.none() );\n \n return value;\n } \n }\n\n"
Give me some sample code of User Registration SQL truncation prevention in java ?,"User registration SQL truncation prevention\n\n\n Example:\n\n\n /*\n In order to prevent Column truncation SQL injection Solution we have to make sure the\n applications structural logic does not mismatches with the database structural logic.\n To achieve this imagine the follow example of a database structure of a users table\n\n TABLE users\n \n | *Name* | *Type* | *Extra* |\n \n | userID | Int(11) | AUTO_INCREMENT |\n \n | Username | char(21) | |\n \n | Password | Varchar(255) | |\n \n | PrivilegeID | Int(11) | |\n \n */\n\n\n package com.edw;\n\n import java.io.UnsupportedEncodingException;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class RegisterUser {\n \n private AuditLog Log = new AuditLog();\n private Hashing hash = new Hashing();\n final static Logger logger = Logger.getLogger(RegisterUser.class);\n \n public boolean userCheck(String username){\n \n boolean isTrue = false; \n //Here we connect to the database by means of a connection configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT * FROM members WHERE username = ?"";\n \n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, username);\n \n // execute the query, and get a java result set\n\n ResultSet rs = st.executeQuery();\n \n if (!rs.isBeforeFirst() && !rs.next())\n {\n isTrue = true;\n }\n \n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n return isTrue;\n }\n \n public boolean userRegister(String username, String password, int privID){\n\n boolean isTrue = false;\n \n /*\n Whenever the user gains the ability to register himself or change his user\n credentials you must always enforce the application to compare the length of the\n submitted string against the length of the allowed string length in your database\n structure in order to prevent SQL column truncation.\n */\n \n int length = username.length(); \n /*\n We now compare the length of the username against the allowed string length in\n The database structure\n */\n if(length >= 21){\n //If length is to large the function must return false and the result must be logged.\n Log.SetLog(username, ""Username was to long!"", ""FAIL!"", LocalDateTime.now(), null);\n }\n \n //If true then register the user! \n if(this.userCheck(username) == true){\n isTrue = true;\n \n //Then we encrypt the password\n String salt = """";\n String passhash = """";\n try {\n salt = hash.createSalt(password);   \n passhash = hash.hashPassword(salt, password);\n } catch (InvalidKeyException | NoSuchAlgorithmException | UnsupportedEncodingException e) {\n logger.error(""Error in hashing algorithm "" + e.toString();\n } \n \n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try { \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n \n //After successful validation we enter the new user into the database\n String query = ""INSERT INTO users""\n + "" (Username, Password, PrivilegeID)""\n + "" VALUES""\n + "" (?, ?, ?)"";\n \n PreparedStatement st = conn.prepareStatement(query);\n \n st.setString(1, username);\n st.setString(2, passhash);\n st.setInt(3, privID);\n\n ResultSet rs = st.executeQuery();\n \n rs.close();\n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n }else{\n Log.SetLog("""", ""Username"" + username + "" already exists!"", ""FAIL!"", LocalDateTime.now(), null);\n isTrue = false ;\n }\n return isTrue;\n } \n }\n"
Give me some sample code of Reauthentication in java ?,"Reauthentication \n\n\n Example:\n\n\n package com.edw;\n\n import java.io.IOException;\n import java.net.HttpCookie;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.servlet.ServletException;\n import javax.servlet.annotation.WebServlet;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.sql.DataSource;\n import java.util.UUID;\n\n import org.apache.log4j.Logger;\n\n import com.ning.http.client.Request;\n\n /**\n * Servlet implementation class Reauth\n */\n @WebServlet(""/Reauth"")\n public final class Reauth extends HttpServlet {\n private static final long serialVersionUID = 1L;\n private int userID; \n private String username; \n private String password; \n private String access; \n private String salt; \n private int privilege; \n private boolean loggedin = false;\n final static Logger logger = Logger.getLogger(Reauth.class);\n \n AuditLog Log = new AuditLog();\n\n //Second we include the password hash.\n Hashing hash = new Hashing();\n\n //Third we include the random password/token class.\n Randomizer CSRF = new Randomizer();\n \n /**\n * @see HttpServletHttpServlet()\n */\n public Reauth() {\n super();\n }\n\n /**\n * @see HttpServletdoGet(HttpServletRequest request, HttpServletResponse response)\n */\n protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n response.getWriter().append(""Served at: "").append(request.getContextPath());\n }\n\n /**\n * @see HttpServletdoPost(HttpServletRequest request, HttpServletResponse response)\n */\n protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n \n loggedin = reAuthentication(request,response);\n \n if (loggedin == false)\n {\n request.getSession().invalidate();\n request.getSession().setAttribute(""Authenticated"", """");\n \n Cookie cookie = null;\n Cookie[] cookies = null;\n // Get an array of Cookies associated with this domain\n cookies = request.getCookies();\n \n for (Cookie cookie2 : cookies) {\n cookie = cookie2;\n \n if (cookie.getName().equals(""JSESSIONID""))\n {  \n cookie.setValue("""");\n } \n response.addCookie(null);\n request.setAttribute(""msg"",""Session terminated!"");\n request.getRequestDispatcher(""/login.jsp"").forward(request, response);\n return;\n }\n }\n doGet(request, response);\n }\n \n public boolean reAuthentication(HttpServletRequest request, HttpServletResponse response)\n {\n String passwordHash = """";\n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try { \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT * from users WHERE userID = ?"";\n \n PreparedStatement st = conn.prepareStatement(query);\n st.setInt(1, userID);\n \n // execute the query, and get a java result set\n //We bind the parameter in order to prevent SQL injections\n ResultSet rs = st.executeQuery();\n while (rs.next())\n {\n passwordHash = rs.getString(""password"");\n salt = rs.getString(""password"");\n }\n \n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n \n /*\n We validate the password see ""Password Storage(salting stretching hashing)"" in the code examples\n for more detailed information:\n */\n if (hash.Validate(passwordHash, salt, password) == true)\n {\n //the connection has to be reported into the log files \n Log.SetLog(""Null"", ""login was OK!"", ""SUCCESS"", LocalDateTime.now(), ""NULL"");\n\n /*\n This is is to prevent session fixation, after login we create a new cookie which\n we than use to authenticate. This value can not be fixated since it is set after \n login.\n\n create a new UUID and save into the session:\n */\n \n //All the random tokens will now be changed\n UUID uid = UUID.randomUUID(); \n String AuthToken = uid.toString();\n request.getSession().setAttribute(""AuthToken"", AuthToken);\n \n // now create a new cookie with this UUID value\n Cookie cookie = new Cookie(""AuthToken"",AuthToken);\n response.addCookie(cookie);\n\n /*\n Now we create a random value for our CSRF Token. See ""Random password/token generation"" in\n the code examples for more detailed information:\n */\n \n String CSRftoken = CSRF.generate(25);\n request.getSession().setAttribute(""CSRF"", CSRftoken);\n request.getSession().setAttribute(""access"", ""Authenticated"");\n\n loggedin = true;\n }else{\n //If things went wrong we destroy the entire session. see ""logout"" code example for more info:\n loggedin = false ;\n }\n return loggedin;\n }\n }\n"
Give me some sample code of Open Forwards and redirects in java ?,"Open Forwards and Redirects \n\n\n Example:\n\n\n /*\n When using forwards & redirects you should make sure the URL is being explicitly \n declared in the code and cannot be manipulated by an attacker like:\n */\n\n //response.Redirect(""/login"");\n\n /*\n Generally you should avoid getting input into the redirect which could contain\n userinput by any means. if for any reason this may not be feasible than you \n should make a WhiteList input validation for the redirect like so:\n */\n\n package com.edw;\n\n public class OpenForwards {\n\n public boolean openForwards(String redirect)\n {\n WhiteList listMe = new WhiteList();\n boolean validated = true;\n\n //For more information about whitelisting see the ""WhiteListing"" code example:\n if (listMe.WhiteListing(""page1,page2,page3"", redirect) == false) { validated = false; }\n\n //return the value back to the servlet in order to handle redirection. \n //if the variable validate is true then it will redirect\n \n return validated; \n } \n }\n"
Give me some sample code of Secure Session Cookies in java ?,"Secure Session Cookies \n\n\n Example:\n\n\n //Secure Flag\n\n //Benefit: Instructs the browser to never send the cookie over a HTTP request. The cookie can only be sent over HTTPS. This works //even if the user manually types in a request for HTTP. The HTTP request will be sent, but the browser will not send any cookies //marked as “SECURE”\n\n //Limitations: The HTTP Request is still sent and this could be manipulated by a man in the middle to perform convincing phishing //attacks (See Strict Transport Security for solution).\n\n //Example within HTTP Response:\n //Cookie: JSESSIONID=kljahsdf123; SECURE;\n\n //web.xml\n\n //Servlet 3.0 (Java EE 6) introduced a standard way to configure secure attribute for the session cookie, this can be done by //applying the following configuration in web.xml\n\n <sessionconfig>\n <cookieconfig>\n <secure>true</secure>\n </cookieconfig>\n </sessionconfig>\n\n //Tomcat\n\n //In Tomcat 6 if the first request for session is using https then it automatically sets secure attribute on session cookie. \n\n //or programmatically \n\n String sessionid = request.getSession().getId();\n response.setHeader(""SETCOOKIE"", ""JSESSIONID="" + sessionid + ""; secure"");\n"
Give me some sample code of Rfc2898 DeriveBytes in java ?,"RFC 2898 password derivation compatible with .NET Rfc2898DeriveBytes\n\n\n Example:\n\n\n package com.edw;\n\n import java.io.UnsupportedEncodingException;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n\n import javax.crypto.Mac;\n import javax.crypto.spec.SecretKeySpec;\n\n /*\n RFC 2898 password derivation compatible with .NET Rfc2898DeriveBytes class.\n */\n\n public final class Rfc2898DeriveBytes\n {\n public static void main(String[] args) throws Exception\n {\n Rfc2898DeriveBytes rfc2898 = new Rfc2898DeriveBytes(""*^@KK@! "", ""*^@KK@!"".getBytes());\n\n }\n\n private Mac _hmacSha1;\n private byte[] _salt;\n private int _iterationCount;\n\n private byte[] _buffer = new byte[20];\n private int _bufferStartIndex = 0;\n private int _bufferEndIndex = 0;\n private int _block = 1;\n\n /**\n * Creates new instance.\n * \n * @param password\n * The password used to derive the key.\n * @param salt\n * The key salt used to derive the key.\n * @param iterations\n * The number of iterations for the operation.\n * @throws NoSuchAlgorithmException\n * HmacSHA1 algorithm cannot be found.\n * @throws InvalidKeyException\n * Salt must be 8 bytes or more. or Password cannot be null.\n */\n public Rfc2898DeriveBytes(byte[] password, byte[] salt, int iterations) throws NoSuchAlgorithmException, InvalidKeyException\n {\n if ((salt == null) || (salt.length < 8))\n {\n throw new InvalidKeyException(""Salt must be 8 bytes or more."");\n }\n if (password == null)\n {\n throw new InvalidKeyException(""Password cannot be null."");\n }\n this._salt = salt;\n this._iterationCount = iterations;\n this._hmacSha1 = Mac.getInstance(""HmacSHA1"");\n this._hmacSha1.init(new SecretKeySpec(password, ""HmacSHA1""));\n }\n\n /**\n * Creates new instance.\n * \n * @param password\n * The password used to derive the key.\n * @param salt\n * The key salt used to derive the key.\n * @param iterations\n * The number of iterations for the operation.\n * @throws NoSuchAlgorithmException\n * HmacSHA1 algorithm cannot be found.\n * @throws InvalidKeyException\n * Salt must be 8 bytes or more. or Password cannot be null.\n * @throws UnsupportedEncodingException\n * UTF8 encoding is not supported.\n */\n public Rfc2898DeriveBytes(String password, byte[] salt, int iterations) throws InvalidKeyException, NoSuchAlgorithmException, UnsupportedEncodingException\n {\n this(password.getBytes(""UTF8""), salt, iterations);\n }\n\n /**\n * Creates new instance.\n * \n * @param password\n * The password used to derive the key.\n * @param salt\n * The key salt used to derive the key.\n * @throws NoSuchAlgorithmException\n * HmacSHA1 algorithm cannot be found.\n * @throws InvalidKeyException\n * Salt must be 8 bytes or more. or Password cannot be null.\n * @throws UnsupportedEncodingException\n * UTF8 encoding is not supported.\n */\n public Rfc2898DeriveBytes(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeyException, UnsupportedEncodingException\n {\n this(password, salt, 0x3e8);\n }\n\n /**\n * Returns a pseudorandom key from a password, salt and iteration count.\n * \n * @param count\n * Number of bytes to return.\n * @return Byte array.\n */\n public byte[] GetBytes(int count)\n {\n byte[] result = new byte[count];\n int resultOffset = 0;\n int bufferCount = this._bufferEndIndex this._bufferStartIndex;\n\n if (bufferCount > 0)\n { // if there is some data in buffer\n if (count < bufferCount)\n { // if there is enough data in buffer\n System.arraycopy(this._buffer, this._bufferStartIndex, result, 0, count);\n this._bufferStartIndex += count;\n return result;\n }\n System.arraycopy(this._buffer, this._bufferStartIndex, result, 0, bufferCount);\n this._bufferStartIndex = this._bufferEndIndex = 0;\n resultOffset += bufferCount;\n }\n\n while (resultOffset < count)\n {\n int needCount = count resultOffset;\n this._buffer = this.func();\n if (needCount > 20)\n { // we one (or more) additional passes\n System.arraycopy(this._buffer, 0, result, resultOffset, 20);\n resultOffset += 20;\n }else{\n System.arraycopy(this._buffer, 0, result, resultOffset, needCount);\n this._bufferStartIndex = needCount;\n this._bufferEndIndex = 20;\n return result;\n }\n }\n return result;\n }\n\n private byte[] func()\n {\n this._hmacSha1.update(this._salt, 0, this._salt.length);\n byte[] tempHash = this._hmacSha1.doFinal(getBytesFromInt(this._block));\n\n this._hmacSha1.reset();\n byte[] finalHash = tempHash;\n for (int i = 2; i <= this._iterationCount; i++)\n {\n tempHash = this._hmacSha1.doFinal(tempHash);\n for (int j = 0; j < 20; j++)\n {\n finalHash[j] = (byte) (finalHash[j] ^ tempHash[j]);\n }\n }\n if (this._block == 2147483647)\n {\n this._block = 2147483648;\n }else{\n this._block += 1;\n }\n return finalHash;\n }\n\n private static byte[] getBytesFromInt(int i)\n {\n return new byte[] { (byte) (i >>> 24), (byte) (i >>> 16), (byte) (i >>> 8), (byte) i };\n }\n }\n\n"
Give me some sample code of Login function in java ?,"Login Functionality \n\n\n Example:\n\n\n package com.edw;\n\n import java.io.IOException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.util.UUID;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.servlet.ServletException;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class Login extends HttpServlet{\n\n final static Logger logger = Logger.getLogger(Login.class);\n private String password ;\n private String username;\n private int userID;\n private String salt;\n private String access ;\n private int privilege;\n\n //First we include the audit log class.\n Auditlog Log = new Auditlog();\n \n //Second we include the password hash.\n Hashing hash = new Hashing();\n\n //Third we include the random password/token class.\n Randomizer CSRF = new Randomizer();\n \n //Last we include the random InputValidation class.\n InputValidation validate = new InputValidation();\n \n /**\n * \n */\n private static final long serialVersionUID = 1L;\n @Override\n protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n username = req.getParameter(""username"");\n this.checkSession(req, resp);\n String passwordHash = """";\n String userId = """";\n\n //we also validate the username input, if it was bad we empty the string:\n if (validate.validateInput(username, ""alphanumeric"", ""Error in username"", ""LOW"", ""0"") != true) { username = """"; }\n \n //Here we connect to the database by means of a connection string as configured in the web.xml \n Connection conn = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the user from the users table\n String query = ""SELECT * from users WHERE username = ?"";\n \n PreparedStatement st = conn.prepareStatement(query);\n st.setString(1, username);\n \n //execute the query, and get a java resultset\n //We bind the parameter in order to prevent sql injections\n\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n username = rs.getString(""username"");\n passwordHash = rs.getString(""password"");\n salt = rs.getString(""salt"");\n userId = rs.getString(""userID"");\n }\n \n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n\n /*\n We validate the password see ""Password Storage(salting stretching hashing)"" in the code examples\n for more detailed information:\n */\n if (hash.Validate(passwordHash, salt, password) == true)\n {\n /*\n This is is to prevent session fixation, after login we create a new cookie which\n we then use to authenticate. This value can not be fixated since it is set after \n login.\n\n create a new UUID and save into the session:\n */\n\n UUID uuid = UUID.randomUUID();\n String randomUUIDString = uuid.toString();\n req.getSession().setAttribute(""AuthToken"", randomUUIDString); \n \n // now create a new cookie with this UUID value\n Cookie newCookie = new Cookie(""AuthToken"", randomUUIDString);  \n resp.addCookie(newCookie);\n \n //the connection has to be reported into the log files\n Log.SetLog("""", """", ""login was OK!"", ""SUCCESS"", ""NULL"");\n \n /*\n Now we create a random value for our CSRF Token. See ""Random password token generation"" in\n the code examples for more detailed information:\n */\n String CSRftoken = CSRF.generate(25);\n \n //Set an accessor session.\n req.getSession().setAttribute(""CSRF"", CSRftoken); \n \n /*\n Put id in a session for query identifier based authentication\n See ""identifier based authentication"" code example for more information\n */\n req.getSession().setAttribute(""userID"", userId);\n }else{\n //the connection has to be reported into the log files\n Log.SetLog("""", ""null"", ""Login failed!"", ""FAIL"", ""NULL"");\n \n req.setAttribute(""msg"",""Session terminated!"");\n req.getRequestDispatcher(""/login.jsp"").forward(req, resp);\n return;\n } \n super.doGet(req, resp);\n }\n\n @Override\n protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n super.doPost(req, resp);\n }\n\n //In this method we do a check if the sessions are ok\n public void checkSession(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException\n {\n Cookie cookie = null;\n Cookie[] cookies = null;\n // Get an array of Cookies associated with this domain\n cookies = req.getCookies();\n \n String authtoken = "" ""; \n for (int i = 0; i < cookies.length; i++){\n cookie = cookies[i];\n \n if (cookie.getName().equals(""AuthToken""))\n {\n authtoken = cookie.getName(); \n }\n \n //We use this try catch for whenever the cookie is dropped\n try{\n //Check sessions and cookies to see if they match\n if (!req.getSession().getAttribute(""AuthToken"").equals(authtoken) || req.getSession().getAttribute(""AuthToken"") != ""access"")\n {\n req.setAttribute(""msg"",""Session terminated!"");\n req.getRequestDispatcher(""/login.jsp"").forward(req, resp);\n return;\n }\n }catch (Exception e){\n logger.error(e.toString());\n req.getSession().removeAttribute(""Authenticated"");\n req.getSession().invalidate();\n req.getRequestDispatcher(""/login.jsp"").forward(req, resp);\n return; \n }\n } \n }\n }\n"
Give me some sample code of HTML Output in java ?,"HTML Output\n\n\n Example:\n\n  \n /*\n Whenever user input is displayed in the application all user input should be properly escaped \n to prevent XSS injections.\n */\n\n /*\n This escaping is used whenever you put the code straight into the html like:\n <span>YOUR USER INPUT</span>\n The attack bellow will now be outputted as,\n <script>alert(1337);</script>\n */\n\n import org.owasp.esapi.ESAPI;\n import org.owasp.esapi.errors.EncodingException;\n\n String htmlbug = ESAPI.encoder().encodeForHTML(""<script>alert(1337);</script>"");\n\n /*\n This next encoding method is used for whenever you are allowing userinput into \n html attributes.\n The attack below will now be outputted as:\n onload=&39;alert(1337)&39;\n */\n \n String htmlatr = ESAPI.encoder().encodeForHTMLAttribute(""onload='alert(1337);'"");\n \n /*\n Whenever parameters are rendered via javascript your application will detect normal injections\n in the first instant. in order for the application not to be vulnerable to javascript encoding you MUST use the encodeForJavaScript function, any other escaping function still leaves your code vulnerable\n */  \n\n ESAPI.encoder().encodeForJavaScript(""\\x3Cscript\\x3Ealert(12);\\x3C\\x2Fscript\\x3E"");\n \n /*\n Whenever a user can submit an link/A HREF in your application you must solely depend upon the\n ""ESAPI.encoder().encodeForURL"" method since an attacker could otherwise inject the href with an XSS\n that looks like this ""javascript:alert(""XSS"");"" whenever a victim now clicks the link this XSS\n will be executed in his browser.\n */ \n\n try {\n ESAPI.encoder().encodeForURL(""javascript:alert(234);"");\n } catch (EncodingException e) {\n logger.error(""Error encoding characters : "" + e.toString() + "" Time : "" + LocalDateTime.now());\n }\n\n /*\n Security consists of different layers of protection in order to guarantee the integrity\n of your application. This means that the value displayed from the database/user should\n already be sanitized before being processed in order to prevent XSS.\n\n As an example, what do you do when you expect a numeric value from your application?\n\n You first sanitize the user input by means of an input validation method like:\n See the ""input validation"" class for the entire example!\n */\n InputValidation validate = new InputValidation();\n String userinput = ""when this string is evil the application will block operation!"";\n if(validate.validateInput(userinput, ""numeric"", ""Unexpected user input"", ""HIGH"", 3)== false)\n { /* Cancel operation of your application */ }\n \n /*\n In this example the application cancelled the request by means of simple validation.\n */\n \n\n\n"
Give me some sample code of HttpOnly flag in java ?,"HttpOnly flag\n\n\n Example:\n\n\n //If you're using Servlets 3.0, you can actually instruct the app server to ensure that all session cookies are HttpOnly and Secure //with the following fragments:\n\n <sessionconfig>\n <cookieconfig>\n <secure>true</secure>\n <httponly>true</httponly>\n </cookieconfig>\n </sessionconfig>\n\n\n //httpOnly is supported as of Tomcat 6.0.19 and Tomcat 5.5.28.\n\n //See the changelog entry for bug 44382.\n\n //The last comment for bug 44382 states, ""this has been applied to 5.5.x and will be included in 5.5.28 onwards."" However, it does //not appear that 5.5.28 has been released.\n\n //The httpOnly functionality can be enabled for all webapps in conf/context.xml:\n\n <Context useHttpOnly=""true"">\n ...\n </Context>\n\n // My interpretation is that it also works for an individual context by setting it on the desired Context entry in conf/server.xml // (in the same manner as above).\n\n"
Give me some sample code of Session cookies domain in java ?,"Session Cookies \n\n\n Example:\n\n\n /*\n Setting the ""Domain"" attribute to a too permissive value, such as ""example.com"" \n allows an attacker to launch attacks on the session IDs between different hosts and \n web applications belonging to the same domain, known as crosssubdomain cookies.\n For example, vulnerabilities in www.example.com might allow an attacker to get access \n to the session IDs from secure.example.com.\n */\n\n //This is apparently supported via a configuration setting in 6.0.27 and onwards:\n\n Configuration is done by editing METAINF/context.xml\n\n <Context sessionCookiePath=""/something"" sessionCookieDomain="".domain.tld"" />\n"
Give me some sample code of RFD and file download injections in java ?,"RFD and file download injections\n\n\n Example:\n\n\n /*\n the following code snippet represents the jsf page used to download a file \n\n <html xmlns=""http://www.w3.org/1999/xhtml""\n xmlns:h=""http://java.sun.com/jsf/html""\n xmlns:f=""http://java.sun.com/jsf/core""\n xmlns:p=""http://primefaces.org/ui""\n xmlns:cu=""http://localhost:8080/custom""\n xmlns:ui=""http://java.sun.com/jsf/facelets"">\n\n <f:view contentType=""text/html"">\n <h:head>\n <h:outputStylesheet name=""commonstyle.css"" library=""css"" />\n </h:head> \n <h:body>\n <div id=""page""> \n <div id=""header"">\n <ui:insert name=""header"" >\n <ui:include src=""commonHeader.xhtml"" />\n </ui:insert>\n <img src=""resources/images/skf.png""></img>\n </div>\n <p:separator style=""border: 0px;""></p:separator>\n </div>\n \n <div id=""content""> \n <ui:insert name=""content"" >\n <ui:include src=""commonDownloadRFD.xhtml"" />\n </ui:insert> \n <p:dialog modal=""true"" widgetVar=""statusDialog"" header=""Status"" draggable=""false"" closable=""false"" resizable=""false"">\n <p:graphicImage name=""/images/ajaxloadingbar.gif"" />\n </p:dialog>\n \n <h:form>\n <p:commandButton value=""Download"" ajax=""false"" actionListener=""{fileDownloadController.filedownload}"" onclick=""PrimeFaces.monitorDownload(start, stop);"" icon=""uiiconarrowthick1s"">\n </p:commandButton>\n <p:spacer width=""20"" height=""40"" />\n <p:commandButton action=""{navigationController.moveToMainMenu}"" ajax=""false"" value=""Main Menu"" /> \n </h:form>\n \n <script type=""text/javascript"">\n function start() {\n PF('statusDialog').show();\n }\n \n function stop() {\n PF('statusDialog').hide();\n }\n </script>\n </div>\n </h:body>\n </f:view>\n </html>\n\n */\n\n\n // The following bean represents the managed bean to perform the file download action \n\n package prime.com.beans;\n\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n import org.apache.log4j.Logger;\n import java.util.regex.Pattern;\n\n import javax.faces.application.FacesMessage;\n import javax.faces.bean.ManagedBean;\n import javax.faces.component.UIComponent;\n import javax.faces.context.ExternalContext;\n import javax.faces.context.FacesContext;\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.servlet.annotation.MultipartConfig;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.sql.DataSource;\n\n import com.Lib.AuditLog;\n import com.Lib.InputValidation;\n import com.Lib.WhiteList;\n \n\n @ManagedBean(name=""fileDownloadController"")\n @MultipartConfig\n public final class FileDownloader {\n \n // Applications are rarely tested for Unicode exploits, and yet many are vulnerable due to the same sort of issues which allows HTTP Request Smuggling to work – every browser, \n // web server, web application firewall or HTTP inspection agent, and other device treats user locale handling in different (and usually confusing) manner.\n // Canonicalization deals with the way in which systems convert data from one form to another. \n // Canonical means the simplest or most standard form of something. Canonicalization is the process of converting something from one representation to the simplest form.\n // Web applications have to deal with lots of canonicalization issues from URL encoding to IP address translation. \n // When security decisions are made based on less than perfectly canonicalized data, the application itself must be able to deal with unexpected input safely. \n \n final static Logger logger = Logger.getLogger(FileUploader.class);\n private AuditLog Log = new AuditLog(); \n private WhiteList wl = new WhiteList();\n InputValidation validate = new InputValidation();\n private UIComponent component;\n private String file;\n private File fileplace;\n \n public FileDownloader() { \n \n FacesContext context = FacesContext.getCurrentInstance();\n HttpServletRequest request = (HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest();\n HttpServletResponse response = (HttpServletResponse) FacesContext.getCurrentInstance().getExternalContext().getResponse(); \n \n // Unicode Encoding is a method for storing characters with multiple bytes. Wherever input data is allowed, \n // data can be entered using Unicode to disguise malicious code and permit a variety of attacks. RFC 2279 references many ways that text can be encoded. \n \n FacesContext.getCurrentInstance().getExternalContext().setResponseContentType(""text/html;charset=UTF8"");\n \n String action = """"; \n boolean proceed = false ;\n String mimetype = """";\n \n // Create path components to save the file\n // The location of stored files should always be outside of your root\n file = ""C:\\tsec.jpg"";\n fileplace = new File(file); \n \n String fileNameformat = fileplace.getName();\n \n String filenameparts[] = fileNameformat.split(Pattern.quote("".""));\n String fileName = filenameparts[0];\n String afterdot = filenameparts[1];\n \n /*\n First we check if the value is alphanumeric only to prevent uploading out of intended directory, \n as well as other injections\n */\n \n /* in normal situations the userID should be retrieved from session or from the web page made the request. \n * For demonstration purposes we assume that the usedID is always 2, which indicated the Administration ID number. \n */\n \n if (validate.validateInput(""2"", fileName, ""alphanumeric"", ""validation failed"",request.getRemoteAddr(),""HIGH"") == ""validation failed"")\n {\n proceed = false;\n action = ""validation failed"";\n }\n \n else if (validate.validateInput(""2"", fileName, ""alphanumeric"", ""Session Termination"",request.getRemoteAddr(),""HIGH"") == ""terminate"")\n {\n proceed = false;\n action = ""terminate"";\n } \n \n else if (validate.validateInput(""2"", fileName, ""alphanumeric"", ""Block access"",request.getRemoteAddr(),""HIGH"") == ""block"")\n {\n proceed = false;\n action = ""block"";\n }else{\n Log.SetLog(""2"", ""Validated Successfully"" , ""SUCCESS"", LocalDateTime.now(),request.getRemoteAddr(), """");\n action = ""Validated Successfully"";\n proceed = true;\n }\n \n if (proceed == true)\n {\n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n\n //Here we select the number of counts from aggregate column in order to verify the number of connections:\n String query = ""SELECT * FROM privileges WHERE privilegeID=?"";\n \n PreparedStatement st = conn.prepareStatement(query);\n \n /* in normal situations the privilegeID should be retrieved from database based on UserID retrieved from the active session \n * or from the web page made the request. \n * For demonstration purposes we assume that the privilegeID is always 1, which indicated the Administration privilege ID number. \n */\n st.setString(1, ""1"");\n\n // execute the query, and get a java result set\n //We bind the parameter in order to prevent SQL injections\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n mimetype = rs.getString(""mimeType"");\n }\n st.close();\n conn.close();\n } catch (SQLException | NamingException e) {\n logger.error(""cannot read from database. check query :"" e.toString());\n } \n\n /*\n We also define the mimetype per download file.\n This is because whenever a user can only download images it is not necessary to set\n an uncommon contenttype header for it.\n NOTE: These mimetypes should not be stored based upon the mimetype which was send \n the response header when the user uploaded the file. This value can be easily \n manipulated with an intercepting PROXY. You should get the mimetype from the file\n itself after it was stored on the server.\n */\n response.reset();\n response.setContentType(mimetype);\n response.addHeader(""CacheControl"", ""nocache"");\n response.addHeader(""ContentDisposition"", ""attachment; filename="" + fileName + ""."" + afterdot + "";"");\n \n OutputStream out;\n try {\n out = response.getOutputStream();\n \n FileInputStream in = new FileInputStream(fileplace);\n byte[] buffer = new byte[4096];\n int length;\n while ((length = in.read(buffer)) > 0){\n out.write(buffer, 0, length);\n }\n in.close();\n out.flush(); \n } catch (IOException e) {\n logger.error(""Cannot download file "" e.toString());\n }\n }\n else if (file == null)\n {\n action = ""empty"";\n }\n \n if (action.equals(""terminate""))\n {\n request.getSession().invalidate();\n request.setAttribute(""msg"",""Session terminated! file has not been downloaded""); \n ExternalContext ec = FacesContext.getCurrentInstance().getExternalContext();\n try {\n ec.redirect(ec.getRequestContextPath() + ""/Menu.xhtml"");\n } catch (IOException e) {\n logger.error(""Cannot redirect "" e.toString());\n }\n }\n if (action.equals(""validation failed""))\n {\n request.getSession().invalidate();\n context.addMessage(component.getClientId(), new FacesMessage(FacesMessage.SEVERITY_ERROR, ""FAIL!"", ""Session terminated! file has not been downloaded""));\n }\n if (action.equals(""block""))\n { \n request.getSession().invalidate(); \n context.addMessage(component.getClientId(), new FacesMessage(FacesMessage.SEVERITY_ERROR, ""FAIL!"", ""Session terminated with Blocked Access! file has not been downloaded""));\n }\n if (action.equals(""Validated Successfully""))\n {\n context.addMessage(component.getClientId(), new FacesMessage(FacesMessage.SEVERITY_ERROR, ""SUCCESS!"", ""file downloaded"")); \n }\n }\n \n public String getFile() {\n return file;\n }\n\n public void setFile(String file) {\n this.file = file;\n }\n\n public void fixedDownloads(String file, String download, HttpServletResponse response)\n {\n /*\n The second example is for whenever you are providing users with fixed downloads\n such as manuals etc. We do not only check if the file just exists, because that would\n allow an attacker to also download important other files from your server, so instead\n we whitelist them.\n */\n if (wl.WhiteListing(file, download) != false)\n {\n response.reset();\n response.setContentType(""text/plain"");\n response.addHeader(""CacheControl"", ""nocache"");\n response.addHeader(""ContentDisposition"", ""attachment; filename="" + file + "";"");\n \n OutputStream out;\n try { \n out = response.getOutputStream();\n FileInputStream in = new FileInputStream(file);\n byte[] buffer = new byte[4096];\n int length;\n while ((length = in.read(buffer)) > 0){\n out.write(buffer, 0, length);\n }\n in.close();\n out.flush();\n } catch (IOException e) {\n logger.error(""Cannot download file "" e.toString());\n } \n } \n }\n }\n\n"
Give me some sample code of Identifier based authorization in java ?,"Identifierbased authorization\n\n\n Example:\n\n\n package com.edw;\n\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.time.LocalDateTime;\n\n import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import javax.sql.DataSource;\n\n import org.apache.log4j.Logger;\n\n public final class IdentifierBased {\n\n private int userID;\n private String name;\n private String email;\n private String phone;\n final static Logger logger = Logger.getLogger(IdentifierBased.class);\n /*\n First we include the audit log class.\n For more detailed information see the Auditlog code example\n */\n AuditLog Log = new AuditLog();\n \n /*\n We then do the same for aggregate user controls.\n For more detailed information see the Aggregate user control code example\n */\n Aggregate aggregate = new Aggregate();\n \n InputValidation validate = new InputValidation();\n \n /* \n the following function return a String value that informs the appropriate \n SERVLET to take actions such as terminate the session or take logs about \n a certain action such as user blocking\n The following SERVLET is an example of such behavior\n \n * protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException \n {\n userID = request.getParameter(""userID"");\n name = request.getParameter(""User"");\n \n IdentifierBased au = new IdentifierBased() ;\n String auth = au.IdentifierBasedAuthentication(pageID, userID, name);\n \n if (auth.equals(""terminate""))\n {\n request.getSession().invalidate();\n request.setAttribute(""msg"",""FAIL! Session terminated!"");\n request.getRequestDispatcher(""/login.jsp"").forward(request, response);\n return;\n }\n \n else if (auth.equals(""block""))\n {\n request.getSession().invalidate();\n request.setAttribute(""msg"",""FAIL! User Blocked!"");\n request.getRequestDispatcher(""/login.jsp"").forward(request, response);\n return;\n }\n } \n * \n * \n */\n \n public String IdentifierBasedAuthentication(int pageID, String user_id, String username)\n { \n String page = new Integer(pageID).toString();\n String identifier = ""null"" ; \n /*\n First we validate if the incoming value is in fact an integer since we expect a page id number.\n If the incoming value is not a number we lockout the users since he tries to manipulate application operation.\n */\n\n boolean doFunction = true;\n //see the ""input validation"" code example for more detailed information about this function\n if (validate.validateInput("""", page, ""numeric"", ""Failed to get file"", ""HIGH"") == false) { doFunction = false; }\n \n if (doFunction == false)\n {\n //First we log the fact we detected a tampering in the application operation\n Log.SetLog(user_id, ""User tried to manipulate application operation"", ""FAIL"", LocalDateTime.now(),"""",""HIGH"");\n\n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user's account must be blocked. \n Given the high threat level, there will be immediate session termination.\n */\n String validation = Log.counter(3); \n \n //the following values will be used from the SERVLET in order to handle session terminations or user blocking \n if (validation.equals(""SQL insert query error in update access"" )){\n Log.SetLog(user_id, """" , ""SQL insert query error in update access"", LocalDateTime.now(),"""", """");\n }\n if (validation.equals(""block"")){\n Log.SetLog(user_id, """" , ""block"", LocalDateTime.now(), """", ""HIGH"");\n identifier = ""block"";\n }\n if (validation.equals(""terminate"")){\n Log.SetLog(user_id, """" , ""terminate"", LocalDateTime.now(), """", ""HIGH"");\n identifier = ""terminate"";\n }\n }\n \n if (doFunction == true)\n {\n //the page retrieval has to be reported into the log files\n Log.SetLog(user_id, ""Connection to the database was made successfully"", ""SUCCESS"", LocalDateTime.now(),"""","""");\n\n //We also count the connection to the database.\n aggregate.aggregateControl(1,username , user_id);\n\n /* \n Whenever you are checking whether a user is restricted to review certain data,\n the access restrictions should be processed from the server.\n \n The userID could be stored inside a session variable on login, and should\n be used to retrieve user data from the database when requested\n \n in order to verify if the user is allowed to look into that data:\n */\n\n //Here we connect to the database by means of a connection string as configured in the web.xml and /METAINF/context.xml \n Connection conn = null;\n try {\n \n Context initContext = new InitialContext();\n Context webContext = (Context)initContext.lookup(""java:/comp/env"");\n DataSource ds = (DataSource)webContext.lookup(""jdbc/myJdbc"");\n conn = ds.getConnection(); \n \n //We also count the connection to the database.\n aggregate.aggregateControl(1,username , user_id);\n \n /* Here we select the users privilege level from the users table */\n String query = ""SELECT * from profile WHERE userID = ? "";\n \n //execute the query, and get a java result set\n //We bind the parameter in order to prevent SQL injections\n PreparedStatement st = conn.prepareStatement(query);\n st.setInt(1, userID);\n \n //Next we read the value from the database and put it into a variable\n ResultSet rs = st.executeQuery();\n \n while (rs.next())\n {\n name = rs.getString(""name"");\n email = rs.getString(""email"");\n phone = rs.getString(""phone"");\n }\n \n st.close();\n conn.close();\n \n } catch (SQLException | NamingException e) {\n logger.error(""cannot search database. check query"" + e.toString() );\n }\n \n this.setEmail(email);\n this.setName(name);\n this.setPhone(phone);\n }\n return identifier;\n }\n\n public String getName() {\n return name;\n }\n\n public void setName(String name) {\n this.name = name;\n }\n\n public String getEmail() {\n return email;\n }\n\n public void setEmail(String email) {\n this.email = email;\n }\n\n public String getPhone() {\n return phone;\n }\n\n public void setPhone(String phone) {\n this.phone = phone;\n }\n }\n"
Give me some sample code of X XSS Protection Header in php ?,"XXSSProtection header\n\n\n Example:\n\n\n <?php\n\n //In order to set the XXSSProtection header, you'll have to add the following code to the head of your application:\n header(""XXSSProtection:1; mode=block"");\n\n ?>\n"
Give me some sample code of Enforce secure passwords in php ?,"Enforce secure passwords\n\n\n Example:\n\n\n <?php\n\n class passwordPolicy{\n public function createPassword($pwd){\n $proceed = true;\n\n //Recommended to use a small phrase instead of a password:\n if(strlen($pwd) < 8 ){\n $error .= ""Password too short!"";\n $proceed = false;\n }\n\n $pattern = array(""/[09]+/"",""/[az]+/"",""/[AZ]+/"",""/\W+/""); \n\n /*\n The password should include at least one number, a small letter, a CAPS,\n and a special character as defined in the patterns array:\n */\n foreach($pattern as $value){\n if(!preg_match($value, $pwd)){\n $error .= ""Password incomplete"";\n $proceed = false;\n }\n }\n\n /*\n Even though your password is sufficient according to all your standards, the password could still be weak.\n Just imagine the password ""Password!""; this could easily be guessed by an attacker. To prevent the use of weak passwords we\n compare the password with a list of top 500 bad passwords and if matched, the password wil be rejected:\n */\n $file = file_get_contents('badpasswords.txt');\n\n $pattern = explode(',', $file);\n\n foreach($pattern as $password){\n if(preg_match($password, $pwd)){\n $error .= ""Your password was matched with the bad password list, please try again."";\n $proceed = false;\n }\n }\n\n if($proceed == true){\n echo ""Your password is allowed!"";\n return true;\n }else{\n echo ""Password validation failure(your choice is weak): $error"";\n return false\n } \n }\n }\n \n ?>\n"
Give me some sample code of Re authentication in php ?,"Reauthentication\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever a user wants to change his credentials or do other important data exchanges such as\n transferring money he should always be challenged to reauthenticate himself before\n allowing them to perform these actions.\n */\n\n class challengeUser{\n public function reauthenticate($password){\n\n //init DB connection\n include(""classes.php"");\n $con = new database();\n $logging = new logging();\n\n $db = con>connection();\n\n //PDO prepared statement in order to prevent SQL injections \n $stmt = $db>query(""SELECT * FROM members WHERE id = :userID "");\n\n //We than bind the parameters in order to prevent SQL injection;\n $stmt>execute(array(':userID'=>$_SESSION['userID'] ));\n\n\n $loginUser = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n /*\n Than we validate the password, if the validation is true than we set the sessions\n For more detailed information on password validation check please look into the\n Password storage(salting/stretching/hashing) in the knowledgebase for more information.\n */\n if($this>ValidatePassword($loginUser['password'], $password) === true){\n\n //After successful validation we want to log that Password was validated successfully:\n setLog($_SESSION['userID'],""Password return true"", ""SUCCESS"", date(ddmmyyyy), $privilege, ""NULL"");\n\n session_start();\n\n //Change the session id on login\n session_regenerate_id(true);\n\n //Here we set a session to see if the user is authenticated throughout the system\n $_SESSION['access'] = ""active"";\n\n /*\n The userID in a session variable to use as an identifier to prevent a user reading\n into unauthorized data, See Identifierbased authorization for more information and\n code examples.\n */\n\n $_SESSION['userID'] = $loginUser['id'];\n\n //The CSRF token is set here by an approved random number generator\n $_SESSION['csrf'] = base64_encode(openssl_random_pseudo_bytes(128));\n\n //if all is ok we return loginUser values\n return true;\n\n }else{\n\n //The user failed reauthenticating himself\n $logging>setLog($_SESSION['userID'],""Reauthentication failed"", ""FAIL"", date(""dmy""), ""null"", ""MOD"");\n\n //If the authentication fails we destroy the session\n session_start();\n session_destroy();\n\n //Regenerate the session ID to lock out an attacker!\n session_regenerate_id(true);\n $_SESSION['active'] = """";\n\n header(""location:login.php"");\n\n die();  \n }\n }\n }\n\n /*\n Before we let a user perform certain actions he should first be challenged to authenticate\n himself. imagine the following scenario, the user wants to change his email address.\n */\n\n $challenge = new challengeUser()\n if($challenge>reauthenticate() !== true){\n\n echo ""please reauthenticate yourself"";\n echo\n ""\n <form method='post'>\n <input type='password' name='password'/>\n <input type='submit' name='authenticate'/>\n </form> \n "";\n\n }else{\n\n //Do operation for changing the email address\n echo ""You can now change your email address!"";\n }\n\n ?>\n"
Give me some sample code of XSL injection prevention in php ?,"XSL injection prevention\n\n\n Example:\n\n\n <?php\n\n /*\n In order to prevent XSL injections you must enforce strict policy's whenever the\n files are loaded from a source controlled by an possible attacker.\n\n Let's say for example that the user can choose from several XSL files on your application.\n\n ABC.xsl arranges your employee names on alphabetical order\n CBA.xsl does not care and just shows the input by order of your XML file.\n\n Before we want to attach the XSL files to the style sheet we first want to\n do validation on the request to make sure the included file was one of our own pre\n defined files, example:\n including(""file1.xsl,file2.xsl,etc"", $_GET['xslfile'], ""3"")\n */\n\n class includeXSL{\n public function including($whiteListing, $inputParam, $countLevel){\n\n //Include the classes of which you want to use objects from\n include_once(""classes.php"");\n\n $whitelist = new whitelisting();\n\n $continue = true;\n\n /*\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n */\n if($whitelist>checkpattern($whiteListing, $inputParam, $countLevel) == false)\n {$continue = false;}\n\n //If all went good we do the function\n if($continue == true){\n LOAD XML FILE\n // Load the XML source\n $xml = new DOMDocument;\n $xml>load('test.xml');\n\n $xsl = new DOMDocument('1.0','UTF8');\n $xsl>load($inputParam);\n\n // Configure the transformer\n $proc = new XSLTProcessor;\n $proc>importStyleSheet($xsl); // attach the xsl rules\n\n echo $proc>transformToXML($xml);\n }\n }\n }\n\n ?>\n"
Give me some sample code of Session cookies (domain) in php ?,"Session cookies (domain)\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever a session is started, and you want to share it over different domains,\n the domain value should be set to the specific domain:\n */\n\n public function sessionStart(){\n\n $lifetime = 3600;\n $path = ""/"";\n $domain = ""demo.yourdomain.com""; // < the Configure domains, do not use .yourdomain.com (wildcard) this increases the attack surface!\n\n $secure = 0;\n $httponly = true;\n\n session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly);\n }\n\n ?>\n"
Give me some sample code of Directory listing in php ?,"Directory listing\n\n\n Example:\n\n\n <?php\n\n /*\n To disable or prevent directory access, add following line in your .htaccess file. If\n user points the browsers to a directory that does not have an index file, then a\n ""403 Forbidden"" error will be displayed:\n\n Add this line of code to your .htaccess file:\n */\n\n Options Indexes\n\n ?>\n"
Give me some sample code of RFD and file download injection prevention in php ?,"Reflective file download and file download injection prevention\n\n\n Example:\n\n\n <?php\n\n //include all necessary classes\n include_once(""class/classCollect.php"");\n\n class fileDownload{\n /*\n The first example we cover how to download files which users can upload\n themselves on the web application\n */\n\n public function downloadUserFiles($fileID){ \n\n $conn = new NewDatabase();\n $db = $conn > connection();\n $validation = new validation();\n $proceed = true;\n\n /*\n For the sake of example we only allow the users to download their own files\n by identifier based sql query's. As you can see we select the filename\n by its id. in this case we prevent direct user input into the disposition header.\n */\n\n if($validation>inputValidation($fileID, ""numeric"", ""validate was false"", ""HIGH"", 3) == false){\n $proceed = false;\n }\n\n if($proceed == true){\n $stmt = $db>prepare(""SELECT * FROM download WHERE fileID=? AND userID=?"");\n $stmt>execute(array($fileID, $_SESSION['userID']));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n $filename = $row['fileName'];\n $mimeType = $row['mimeType'];\n }\n\n if($filename){\n /*\n We also define the mimetype per download file.\n This is because whenever a user can only download images it is not necessary to set\n an uncommon contenttype header for it.\n NOTE: These mimetypes should not be stored based upon the mimetype which was send\n the response header when the user uploaded the file. This value can be easily\n manipulated with an intercepting proxy. You should get the mimetype from the file\n itself after it was stored on the server.\n */\n header('ContentDescription: File Transfer');\n  header(""contenttype:"".$mimeType."""");\n  header('ContentDisposition: attachment; filename='.$filename);\n  header('Expires: 0');\n header(""CacheControl: nostore, nocache, mustrevalidate, maxage=0"");\n header(""CacheControl: postcheck=0, precheck=0"", false);\n header(""Pragma: nocache""); \n header('ContentLength: ' . filesize($filename));\n //Last check to see if it really does exist.\n if(file_exists($filename)){\n readfile($filename);\n }\n /*\n Exit is very important, if other mechanims fail this makes sure the rest\n of the page plus attack string does not get downloaded anyways.\n */\n exit;\n }\n }\n }\n\n /*\n The second example is for whenever you are providing users with fixed downloads\n such as manuals etc. We do not only check if the file just exists, because that would\n allow an attacker to also download important other files from your server, so instead\n we whitelist them.\n */\n public function downloadStored($filename){\n\n $white = new whitelisting();\n\n if($white > checkpattern(""file1.txt,file2.txt"", $filename, 3) != false){\n header('ContentDescription: File Transfer');\n  header('ContentType: text/plain');\n  header('ContentDisposition: attachment; filename='.$filename);\n  header('Expires: 0');\n header(""CacheControl: nostore, nocache, mustrevalidate, maxage=0"");\n header(""CacheControl: postcheck=0, precheck=0"", false);\n header(""Pragma: nocache""); \n header('ContentLength: ' . filesize($filename));\n if(file_exists($filename)){\n readfile($filename);\n }\n /*\n Exit is very important, if other mechanims fail this makes sure the rest\n of the page plus attack string does not get downloaded anyways.\n */\n exit;\n }\n }\n }\n\n ?>\n"
Give me some sample code of X Content Type Options header in php ?,"XContentTypeOptions header\n\n\n Example:\n\n\n <?php\n\n //In order to set the ""XContentTypeOptions"" header you'll have to add the following code to the head of your application:\n header('XContentTypeOptions: nosniff');\n\n ?>\n"
Give me some sample code of Audit logs in php ?,"Audit logs\n\n\n Example:\n\n\n <?php\n\n /*\n The log function does not have to be complicated as long as you log at least these 6 values\n\n Whenever a user is registered or added to your system, the application must also\n automatically generate a table for this user which contains his userID, counter and blocker\n variable in order to keep track of his behavior.\n */\n\n class logging{\n public function setLog($userID, $errorMessage, $value, $date, $privilege, $threat){\n\n //Save log file in a directory which has restrictions in place so no one can access it easily\n $myFile = ""restrictedfolder/logfile.txt"";\n\n $fh = fopen($myFile, 'a+') or die(""can't open file"");\n\n //Notice how we user the userID instead of the actual username in order to prevent the integrity of these usernames\n //should an attacker ever gain access to these log files\n $stringData = $date."" "".$userID."" "".$errorMessage."" "".$value."" "".$privilege."" "".$threat."" \n"" ;\n\n fwrite($fh, $stringData);\n fclose($fh);\n }\n\n public function setCounter($count){\n\n include(""classes.php"");\n\n //init DB connection\n $con = new database();\n $db = $con>connection();\n\n\n //Here we select all data to verify if the users session should be terminated or his account should be lockedout\n $stmt = $db>prepare(""SELECT count, blocker FROM counter WHERE userID=:id"");\n $stmt>execute(array($_SESSION['userID']));\n $row = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($row as $rows){\n\n //First we update the count/blocker variable with the old values for the update\n $dbCount = $rows['count'];\n $dbBlocker = $rows['blocker'];\n\n }\n\n $countUpdate = $count + $dbCount;\n $blockerUpdate = $count + $dbBlocker;\n\n //Here we want to set a counter for whenever a user attacks the application so we can lockout his account\n //when there are to many violations registered.\n $stmt = $db>prepare(""UPDATE counter SET count=?, blocker=? WHERE userID=?"");\n $stmt>execute(array($countUpdate, $blockerUpdate, $_SESSION['userID']));\n $affected_rows = $stmt>rowCount();\n\n //If the users counter was bigger than three his session should be terminated\n if($countUpdate >= 3){\n\n //Log that the users sessions have been terminated:\n setLog($_SESSION['userID'],""The users session was terminated"", ""SUCCESS"", date(ddmmyyyy), $privilege, ""NULL"");\n\n //Clear the session variable to deny access\n $_SESSION['accessor'] = """";\n session_start();\n session_destroy();\n\n $countUpdate = 0;\n }\n\n\n //If the users counter was bigger than three his session should be terminated\n if($blockerUpdate >= 12){\n\n //Log that the users has been denied access to system:\n setLog($_SESSION['userID'],""The users is denied access to system"", ""SUCCESS"", date(ddmmyyyy), $privilege, ""NULL"");\n\n //If the blocker was bigger than 12 it means the user has made three strikes and his account should blocked\n $status = ""blocked"";\n $stmt = $db>prepare(""UPDATE users SET status=? WHERE userID=?"");\n $stmt>execute(array($status, $_SESSION['userID']));\n $affected_rows = $stmt>rowCount();\n\n //Clear the session variable to deny further access\n $_SESSION['accessor'] = """";\n session_start();\n session_destroy();\n }\n\n //After the counter has terminated a session he should be set to zero again\n $stmt = $db>prepare(""UPDATE counter SET count=? WHERE userID=?"");\n $stmt>execute(array($countUpdate, $_SESSION['userID']));\n $affected_rows = $stmt>rowCount();\n\n }\n }\n \n  ?>\n"
Give me some sample code of CSRF Token in php ?,"CSRF Token\n\n\n Example:\n\n\n <?php\n\n class CSRF{\n\n public function generateToken(){\n /*\n After successful user authentication, the application must start a session\n which contains the ""Cross Site Request Forgery(CSRF)"" token.\n */\n\n $_SESSION['csrf'] = base64_encode(openssl_random_pseudo_bytes(128));\n }\n\n /*\n\n The random CSRF token generated need to be send to the server with every form submission.\n This token is included in a form as a HTML hidden form field parameter. When the form is\n submitted the token value is also submitted along with it.\n\n The token is then validated against the csrf token which was generated during user authentication.\n Below code demonstrate the validation of csrf token at the server side:\n\n */\n\n protected function _checkCsrf($token){ \n session_start(); \n\n if($_SESSION['csrf'] != $token){ \n\n //Log the invalid token verification\n setLog($_SESSION['userID'],""invalid CSRF token send!"", ""FAIL"", date(""dmy""), $_SESSION['privilege'], ""HIGH"");\n\n //If the token was not valid we terminate the users session\n session_start();\n session_destroy(); \n\n //The die function is to make sure the rest of the php code is not executed beyond this point\n die(); \n } \n } \n } \n ?>\n"
Give me some sample code of Logout function in php ?,"Logout function\n\n\n Example:\n\n\n <?php\n\n /*\n This way, the logout functionality will revoke the complete session:\n */\n\n public function deleteLogin(){\n\n //We first want to log the user logging out.\n setLog($_SESSION['userID'],""User logout"", ""SUCCESS"", date(""dmy""), $_SESSION['privilege'], ""NULL"");\n\n //We empty his authentication session\n $_SESSION['Authenticated'] = """";\n\n //Than we destroy the entire session\n session_start();\n session_regenerate_id(true);\n session_destroy();\n }\n\n ?>\n"
Give me some sample code of Timeout a session in php ?,"Timeout a session\n\n\n Example:\n\n\n <?php\n\n public function sessionStart(){\n\n $lifetime = 3600; // < lifetime of a session\n $path = ""/"";\n $domain = ""www.example.com"";\n $secure = 0;\n $httponly = true;\n\n session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly);\n\n }\n\n /*\n You could also set the session cookie its secure function with a ini_set\n This ini_set has to be included in the header of al your pages in order to work\n */\n\n ini_set('session.cookie_lifetime', 3600);\n\n ?>\n"
Give me some sample code of White listing in php ?,"Whitelisting\n\n\n Example:\n\n\n <?php\n\n class whitelisting{\n\n /*\n First we create a function which checks the allowed patterns:\n checkpattern(""value1,value2,value3"" , $input, ""3"")\n */\n function checkpattern($allowed, $input, $countLevel){\n\n $logging = new logging();\n $result = explode("","" , $allowed);\n\n $results = false;\n\n foreach($result as $pattern){\n while(preg_match(""/^"".$pattern.""$/"", $input)){ \n //If the value is valid we send a log to the logging file. \n $logging>setLog($_SESSION['userID'],""Good whitelist validation"",\n ""SUCCESS"", date(""dmy""),""null"", ""HIGH"");\n\n $results = true;\n\n //Whenever there was a valid match we return true  \n return true;\n }\n }\n\n //Check for a false in order to send error to log and counter the user.\n if($results == false){\n //If the value is invalid we send a log to the logging file. \n $logging>setLog($_SESSION['userID'],""Bad whitelist validation"",\n ""FAIL"", date(""dmy""), $_SESSION[""privilege""], ""HIGH"");\n\n $logging>setCounter($countLevel);\n return false; \n }\n }\n }\n\n ?>\n"
Give me some sample code of Session hijacking and fixation in php ?,"Session hijacking and fixation\n\n\n Example:\n\n\n  <?php\n\n /*\n As soon as a user logs into your application you must store his session id as well as his\n IP address along with his userID. This information will be used later on in your application in order to\n identify possible session hijacking.\n\n TABLE track_sessions\n \n | TrackID | userID |    SESSION  | Ip address  |\n \n | 1 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.89 | \n \n | 2 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.81 |\n \n | 3 | 2 | c80959d3ea4c166413774e45375ac2a1 | 987.65.43.21 |\n \n\n In order to prevent session hijacking there are a couple of defense strategies\n which combined are a hardened defense. \n */\n\n /*\n First we implement the strict transport security header, this is in order to prevent\n users from accessing your application over an unprotected connection.\n */\n\n //Example of the strict transport security header:\n header('StrictTransportSecurity: maxage=31536000');\n\n\n //If all present and future subdomains will be HTTPS:\n header('StrictTransportSecurity: maxage=31536000; includeSubDomains');\n\n /*\n Recommended: If the site owner would like their domain to be included in the HSTS preload\n list maintained by Chrome (and used by Firefox and Safari), then use:\n */\n\n header('StrictTransportSecurity: maxage=31536000; includeSubDomains; preload');\n\n /*\n The `preload` flag indicates the site owner's consent to have their domain preloaded.\n The site owner still needs to then go and submit the domain to the list. the preload list\n enforces the browser to always present your application on HTTPS even on the first time\n the user hits your application\n */\n\n /*\n Then we set the httpOnly flag\n (see ""HttpOnly"" in the code examples for more details about implementation)\n */\n ini_set('session.cookie_httponly', 1);\n\n /*\n Then we set the flag for session timeout\n (see ""Timeout"" in the code examples for more details about implementation)\n */\n ini_set('session.cookie_lifetime', 3600);\n\n /*\n Then we set the session secure flag\n (see ""Secure flag"" in the code examples for more details about implementation)\n */\n ini_set('session.cookie_secure', 1);\n\n /*\n On login we change the session id in order to prevent session fixation\n (see ""Login functionality"" in the code examples for more details about implementation)\n */\n session_regenerate_id(true);\n\n /*\n NOTE: On applications that require high level security, there should never be an\n remember me functionality implemented.\n */\n\n\n /*\n Now imagine the scenario after the login of the user (see the ""login functionality"" in\n the code examples for more details). Whenever the user is logged in, the users IP address\n and session id are also stored in the database these values are used in order to verify\n if there are multiple users active on the same session.\n If so, we can let the user decide to terminate the session and terminate the\n other assigned sessions.\n */\n class sessionCheck{\n //We implement this logic into our checksession functionality\n public function _checkSession(){\n\n //init a DB connection\n include(""classes.php"");\n $con = new database();\n $db = $con >connection()\n\n //Here we check for a valid session to see if the user is authenticated\n session_start();\n if(($_SESSION['access'] != ""active"") || $_SESSION['access'] == """"){\n header(""Location: /login"");\n\n /*\n this statement ABSOLUTELY MUST DIE or else an attacker could gain knowledge and abuse\n all your pages and functionality simply by intercepting the response\n from the server when connection to your pages.\n */\n\n die();\n }\n\n /*\n Then we start the rest of the function where we will check if there are multiple\n users/IP addresses using the same session id\n */\n\n //store current session id\n $session = session_id();\n\n //get users ip address\n $ipaddress = $_SERVER['REMOTE_ADDR'];\n\n $stmt = $db>prepare(""SELECT * FROM track_sessions WHERE userID=:id"");\n $stmt>execute(array(':id' => $_SESSION['userID']));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n\n //check to see if the current ip address matches the one stored in login if not warn user!\n if(($ipaddress != $row['ipaddress']) && $row['SESSION'] != $session){\n\n echo ""\n <div style='borderstyle:solid; bordercolor:black; color:white; backgroundcolor:red; float:left;'>\n <p>There are other active sessions on other IPaddresses.<br/>\n Your session could be hijacked press logout in order to authenticate again\n for security reasons!\n <br/><br/>\n <a href='/logout'>Terminate sessions</a>\n <br/>\n <a href='/Proceed'>Proceed anyway</a>\n </p>\n </div>\n ""; \n }\n } \n }\n }\n\n /*\n the only thing left to do now is to update your track_sessions table by inserting\n the IP address, sessionID and userID if you want to accept the other sessions as valid.\n Otherwise the user just has to terminate his current session in order to lock out the\n other sessions.\n */\n\n ?>\n"
Give me some sample code of Random password token generation in php ?,"Random password/token generation\n\n\n Example:\n\n\n <?php\n\n //A good random token example for tokens would be:\n $_SESSION['csrf'] = base64_encode(openssl_random_pseudo_bytes(128));\n\n //A good random password would be:\n $bytes = openssl_random_pseudo_bytes(15);\n $pwd = bin2hex($bytes);\n\n /*\n When needing to generate random numbers, always use proven methods\n instead of writing your own.\n */\n\n  ?>\n"
Give me some sample code of Directory path traversal in php ?,"Directory/path traversal\n\n\n Example:\n\n\n <?php\n\n class fileGetContents{ \n /*\n Define the whitelist pattern and validation type and input parameter, countLevel like:\n getFiles(""page1,page2,etc"", ""alphanumeric"", $_GET['filename'], ""3"")\n */\n public getFiles($whiteListPattern, $validationType, $inputParameter, $countLevel){\n\n //Include the classes of which you want to use objects from\n include_once(""classes.php"");\n\n $validate = new validation();\n $whitelist = new whitelisting();\n\n $continue = true;\n\n /*\n First, we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n */\n if($validate>inputValidation($inputParameter, $validationType,\n ""Invalid user input"", ""HIGH"", $countLevel) == false) {$continue = false;}\n\n /*\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n */\n if($whitelist>checkpattern($whiteListPattern, $inputParameter, $countLevel) == false)\n {$continue = false;}\n\n //If all went good we include the filename\n if($continue == true){\n include($inputParameter);\n }\n }\n }\n ?>\n"
Give me some sample code of Input validation in php ?,"input validation\n\n\n Example:\n\n\n <?php\n\n /*\n This function is where you store al your input validation controls.\n It makes it easy to maintain whenever you want to apply changes for\n certain input validation roles and reduces the chance of mistakes in your regexes.\n */\n\n class validation{\n\n //Our input validation function\n public function inputValidation($input, $type, $logMessage, $threatLevel, $countLevel){\n\n //Audit log and user lockdown\n $logging = new logging();\n\n switch ($type) {\n case ""numeric"":\n $pattern = ""/^[09]+$/"";\n break;\n case ""alphanumeric"":\n $pattern = ""/^[azAZ09]+$/"";\n break;\n }\n\n if(!preg_match($pattern, $input)){\n\n /*\n Set a log for whenever there is unexpected user input with a threat level\n See ""audit logs"" code example for more information:\n */\n $logging > setLog($_SESSION['userID'], $logMessage, ""FAIL"", date(""dmy""),\n $_SESSION[""privilege""], $threatLevel);\n\n /*\n Set counter if counter hits 3 the users session must terminated\n After 3 session terminations the user account must be blocked\n See ""audit logs"" code example for more information:\n */ \n $logging>setCounter($countLevel);\n\n return false;\n }else{\n\n //Set a log for whenever there is unexpected userinput with a threat level\n $logging>setLog($_SESSION['userID'],""Valid input validation for regex from "".$type."" "",\n ""SUCCESS"", date(""dmy""), $_SESSION[""privilege""], ""NONE"");\n\n return true;\n }\n }\n }\n\n ?>\n"
Give me some sample code of Enforce sequential step order shopping in php ?,"Enforce sequential step order (Shopping)\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever an functionality consists out of following several steps to achieve some goal i.e,\n ""User adds items to chart"", ""User enters shipping information"", ""User pays for goods"",\n ""Items will be shipped."" You want to make sure the user can not skip the payment step in\n order to receive his goods.\n\n\n  \n | Items | | Cart | |checkout | | CostumerInfo |\n   \n |itemID | |cartID | |PaymentID| |ConsumerID |\n |price | |itemID | |itemID | |name |\n |name  | |sessionID| |Token | |address  |\n  |sessionID| |sessionID  |\n |Verified | |consumerToken |\n \n\n As you can see above we have a very simplified database structure for your average\n web shop. now we can walk through the different steps needed to enforce the user to take\n all steps before payment.\n\n We wont cover the entire shopping cart functions since that would become a rather big\n example so let's cover the basics of enforcing the sequential steps.\n\n Step1: would be, the user adding items to his cart.\n\n Step2: would be, the user adding his items to checkout. Whenever he is done shopping\n ""add to checkout"" generates a random token for the added items which\n are inserted into the payment table in the database\n\n\n */\n\n //First we build the checktokens function because we want to check the checkout tokens\n //multiple times throughout the steps\n function checkTokens(){\n $stmt = $db>prepare(""SELECT * from checkout where sessionID=? "");\n $stmt>execute(array(session_id()));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n\n //Here we check for a different token or new session token\n if(($row['token'] != $row['token']) && ($row['token'] != $_SESSION['token'])){\n\n $stmt = $db>prepare(""DELETE FROM customerinfo WHERE sessionID=:id"");\n $stmt>execute(array(session_id()));\n $affected_rows = $stmt>rowCount();\n\n $stmt = $db>prepare(""DELETE FROM checkout WHERE sessionID=:id"");\n $stmt>execute(array(session_id()));\n $affected_rows = $stmt>rowCount();\n\n header('location:checkout.php');\n }\n }\n }\n\n //note: As soon as the user visits your website you start sessions in order to assign phpsessionID\n\n //A random token for every time the form loads\n $token = base64_encode(openssl_random_pseudo_bytes(128));\n\n /*\n We create a session with the token, if someone adds new items to the checkout this\n token will change and will intercept attackers tampering the system.\n */\n\n\n ?>\n\n <form methods=""post"">\n <input type=""hidden"" name=""token"" value=""<?php echo $token; ?>""/>\n <input type=""submit"" name=""submit"" value=""add to checkout""/>\n </form>\n\n\n <?php\n\n //On submit we create a new session for the token\n if(isset($_POST['submit']){\n $_SESSION['token'] = $token;\n }\n\n /*\n On submit we send al the shopping cart data to another table in the database, but\n this time al the items also contain the same random token. Now an attacker cannot sneak\n in new items since these tokens will be evaluated on the payment page.\n\n next, the user lands on a page where he has to fill in his customer info:\n\n NOTE: do not forget the CSRF token in order to prevent attackers from changing his\n shipping info.\n */\n\n //First we check the checkout tokens to see if no new items where added.\n checkTokens();\n\n ?>\n\n <form methods=""post"">\n <input type=""text"" name=""customerName"" />\n <input type=""text"" name=""CustomerAddress"" />\n <input type=""submit"" name=""submit"" value=""to payment""/>\n <input type=""hidden"" name=""token"" value=""<?php echo $_SESSION['csrf']; ?>""/>\n </form>\n\n <?php\n\n //After submit we first of course check the CSRF token for validity\n\n checkCsrf($_POST['token']);\n\n //Check the checkout tokens to see if no new items where added\n checkTokens(); \n\n //than we proceed to check if the post values where not empty\n $errors = array();\n $check = true;\n\n if(empty($_POST['customerName'])){\n $check = false;\n array_push($errors, ""Customer name is required"");\n }\n\n if(empty($_POST['customerAddress'])){\n $check = false;\n array_push($errors, ""Customer address is required"");\n }\n\n if(!$check){\n echo $errors;\n }\n else{\n\n header('location:summary.php');\n //In this step we also insert al the customer data into the database.\n }\n\n /*\n Then we select al the customer info and shopping items on sessionID from the\n database and display it on screen in order for the user to verify if all the\n information displayed is correct.\n */\n\n //when the user has verified we again check the checkout tokens to see if no new items where added\n checkTokens(); \n\n /*\n After that the user verifies this information then he will be redirected to the payment\n page like ideal, Paypal etc.\n\n Whenever the payment returns true you set the ""verified"" column on the checkout\n table to TRUE and you send the customer the invoice and send him his items.\n */\n\n\n $verified = ""true"";\n $stmt = $db>prepare(""UPDATE checkout SET verified=? WHERE sessionID=? and token=?"");\n $stmt>execute(array($verified, session_id(), $_SESSION['token']));\n $affected_rows = $stmt>rowCount();\n\n //also in this step we clear al the db items matching to the phpsessionid\n $stmt = $db>prepare(""DELETE FROM customerinfo WHERE sessionID=:id"");\n $stmt>execute(array(session_id()));\n $affected_rows = $stmt>rowCount();\n\n $stmt = $db>prepare(""DELETE FROM checkout WHERE sessionID=:id"");\n $stmt>execute(array(session_id()));\n $affected_rows = $stmt>rowCount();\n\n $stmt = $db>prepare(""DELETE FROM cart WHERE sessionID=:id"");\n $stmt>execute(array(session_id()));\n $affected_rows = $stmt>rowCount();\n\n */\n\n ?>\n"
Give me some sample code of System commands in php ?,"System commands\n\n\n Example:\n\n\n <?php\n\n class systemCommands{ \n\n /*\n Define the whitelist pattern and validation type and input parameter like:\n getFiles(""value1,value2,etc"", ""alphanumeric"", $_GET['filename'], ""3"")\n */\n public function command($whiteListPattern, $validationType, $inputParameter){\n\n //Here we include al the necessary classes like audit logs, whitelisting and validation:\n include(""classes.php"");\n\n $validate = new validation();\n $whitelist = new whitelisting();\n\n $continue = true;\n\n /*\n Whenever a system command is finished, you should properly sanitize and escape this user input.\n System command functions examples are: system(), eval(), exec()\n\n First, we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n */\n\n if($validate>inputValidation($inputParameter, $validationType,\n ""Invalid user input for system commands"", ""HIGH"", $countLevel) == false) {$continue = false;}\n\n /*\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n */\n\n if($whitelist>checkpattern($whiteListPattern, $inputParameter, $countLevel) == false)\n {$continue = false;}\n\n //If all went good we include the filename\n if($continue == true){\n\n //Even though there is a match we still escape the shellcommand:\n $command = './configure '.$inputParameter;\n $escaped_command = escapeshellcmd($command);\n //Only after validation do we put the shellcommand into the system() function:\n system($escaped_command);\n }\n }\n }\n ?>\n"
Give me some sample code of Session cookies HttpOnly in php ?,"Session cookies HttpOnly\n\n\n Example:\n\n\n <?php\n\n //Whenever a session is started, the ""httpOnly"" option should always be set to ""true"" or ""1"":\n\n public function sessionStart(){\n\n $lifetime = 3600;\n $path = ""/"";\n $domain = ""www.example.com"";\n $secure = 0;\n $httponly = true; // < the httponly flag\n\n session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly);\n }\n\n /*\n You could also set the session cookie its httpOnly function with a ini_set\n This ini_set has to be included in the header of al your pages in order to work\n */\n\n ini_set('session.cookie_httponly', 1);\n\n ?>\n"
Give me some sample code of SQL query in php ?,"SQL query\n\n\n Example:\n\n\n <?php\n\n /*\n This example uses a prepared statement in order to insert data into the database.\n Because this method enforces the user to prepare all user input passed into the query, it always escapes SQL\n injections so none could be accidentally forgotten as with the normal mysqli_real_escape_string() methods.\n */\n\n $stmt = $db>prepare(""SELECT * FROM table WHERE id=? AND name=?"");\n $stmt>execute(array($id, $name));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n //or \n\n $stmt = $db>prepare(""UPDATE table SET name=? WHERE id=?"");\n $stmt>execute(array($name, $id));\n $affected_rows = $stmt>rowCount();\n\n //or\n\n $stmt = $db>prepare(""DELETE FROM table WHERE id=:id"");\n $stmt>bindValue(':id', $id, PDO::PARAM_STR);\n $stmt>execute();\n $affected_rows = $stmt>rowCount();\n\n //or\n\n $stmt = $db>prepare(""INSERT INTO table(field1,field2) VALUES(:field1,:field2)"");\n $stmt>execute(array(':field1' => $field1, ':field2' => $field2));\n $affected_rows = $stmt>rowCount();\n\n /*\n All methods will prevent SQL injections.\n The less recommended option for preventing sql injections is to use the mysqli_real_escape_string() function.\n */\n\n $username = mysqli_real_escape_string($connectionString, $_POST['username']);\n $email = mysqli_real_escape_string($connectionString, $_POST['email']);\n\n mysqli_query($connectionString, ""INSERT INTO users (username, email) VALUES (""'.$username.'"", ""'.$email.'"")"");\n\n /*\n NOTE: mysqli_real_escape_string() will _not_ work when escaping integers since the function only\n escapes strings. In order to prevent all SQL injection vulnerabilities, we strongly recommend\n using prepared statements\n */\n\n ?>\n"
Give me some sample code of Open forwards & redirects in php ?,"Open forwards & redirects\n\n\n Example:\n\n\n  <?php\n\n /*\n When using forwards & redirects you should make sure the URL is being explicitly\n declared in the code and cannot be manipulated by an attacker like:\n */\n\n header(""location:redirectpage.php"");\n\n /*\n Generally you should avoid getting input into the redirect which could contain\n userinput by any means. if for any reason this may not be feasible than you\n should make a whitelist input validation for the redirect like so:\n send(""value1,value2,etc"", $_GET['redirectParam'], ""3"")\n */\n\n class redirecting{\n public function send($whiteListing, $inputParam, $countLevel){\n\n //Include the classes of which you want to use objects from\n include_once(""classes.php"");\n\n $whitelist = new whitelisting();\n\n /*\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n */\n if($whitelist>checkpattern($whiteListing, $inputParameter, $countLevel) == true){\n header(""location:"".$inputParam."""");\n } \n }\n }\n\n ?>\n"
Give me some sample code of X Path query in php ?,"Xpath query\n\n\n Example:\n\n \n <?php\n\n class xPathControl{ \n\n /*\n Define the allowed characters and input parameter and count level for the\n user lockout like:\n controller(""<'>&"", $_GET['filename'], ""3"")\n */\n public function controller($allowedCharacters, $inputParameter, $countLevel){\n\n //Include the classes where you want to make objects of: \n include(""classes.php"");\n $encode = new encodeInput();\n\n /*\n First we build our encoding method, see ""input validation"" code example for\n more detailed information about encoding and escaping.\n */\n\n $return = $encode>encoder($allowedCharacters, $inputParameter, $countLevel);\n\n //If the encoder came back false we do not process the function!\n if($return !== false){\n //start a new domdocument\n\n $xmldoc = new DOMDocument();\n $xmldoc>load('test.xml');\n\n $xpathvar = new Domxpath($xmldoc);\n\n /*\n Assuming that you used the encoder function also for adding users, it will now retrieve the\n user O'Reilly from the query\n */\n\n $queryResult = $xpathvar>query('//lemonade[@supplier=""'.$return.'""]/price');\n\n foreach($queryResult as $result){\n echo $result>textContent;\n }\n }\n }\n }\n ?>\n"
Give me some sample code of Anti caching headers in php ?,"Anticaching headers\n\n\n Example:\n\n\n <?php\n\n /*\n Add the following headers to your application head in order to prevent the browser from caching\n */\n\n header(""CacheControl: nostore, nocache, mustrevalidate""); // HTTP/1.1\n header(""CacheControl: postcheck=0, precheck=0"", false);\n header(""Pragma: nocache""); // HTTP/1.0\n\n ?>\n"
Give me some sample code of Secure Session Cookies in php ?,"Secure Session Cookies\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever a cookie is sent over a secured connection, the cookie should be set\n with the secure flag, in order to guarantee the integrity of the data it contains.\n The secure flag is set by giving it the ""true"" or ""1"" value:\n */\n\n public function sessionStart(){\n\n $lifetime = 3600;\n $path = ""/"";\n $domain = ""www.example.com"";\n $secure = true; // < the secure flag\n $httponly = true;\n\n session_set_cookie_params($lifetime, $path, $domain, $secure, $httponly);\n }\n\n /*\n You could also set the session cookie its secure function with a ini_set\n This ini_set has to be included in the header of al your pages in order to work\n */\n\n ini_set('session.cookie_secure', 1);\n\n  ?>\n"
Give me some sample code of Crossdomain XML  in php ?,"Crossdomain XML\n\n\n Example:\n\n  \n // A bad example of a Crossdomain XML would be:\n \n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n // Because it allows access from all other domains.\n // Instead of this approach you might want to use the following restrictions.\n // Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>\n"
Give me some sample code of Password forget and disallow old passwords in php ?,"Password forget & Disallow old passwords\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever you are developing a password forget function, these are the steps to follow\n in order to create hardened defenses.\n\n TABLE users\n \n | userID | userName | password | EmailAddress | access |\n  \n | 1 | Admin | Csdar323 | info@admin.com |  TRUE  |\n   \n | 2 | User  | Adf4fsv | info@user.com |  FALSE |\n  \n | 3 | Guest | dff4fKr | info@guest.com |  TRUE  |\n  \n\n\n TABLE passwordForget\n  \n | forgotPasswordID | Token  | UserID | Active |  olPasswords |\n \n | 1 | c3ab8ff13720e.... |  1  | YES  |  Csdar323  |\n \n |  2   | 7dd39466b3c89.... |  1  | NO  | ef0c4f2  |\n \n |  3  | 83d4a3960714c.... |  3  | NO  | dff4fKr  |\n \n\n\n As you can see we also store the old passwords into the password forget table, this\n we do in order to prevent the user from using old passwords later on in the process.\n\n Also use a cron job to make sure the generated tokens for the password reset are\n expire after a certain amount of time like 20 minutes.\n */\n\n class passwordForget{\n public function checkValidity(){\n\n //init a DB connection\n include(""classes.php"");\n $con = new database();\n $db = $con >connection()\n\n $stmt = $db>prepare(""SELECT * FROM members WHERE email=?"");\n $stmt>execute(array($_POST['email']));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n //Here we select the old password as well as the userid from the members table\n $password = $row['password'];\n $userID = $row['id'];\n $email  = $row['email'];\n }\n\n //If the select was not empty we will be sending an email to the user as well as\n //preparing the password forget function\n if(!empty($rows)){\n\n echo ""An email was sent to your email for password reset"";\n\n /*\n Before we do anything we first set all other possible active statuses to NO\n in order to prevent an attacker creating a whole lot of tokens and than fuzz\n the password reset token.\n */\n\n $active = ""NO"";\n $stmt = $db>prepare(""UPDATE forgetPassword SET active=? WHERE userID=?"");\n $stmt>execute(array($active, $userID));\n $affected_rows = $stmt>rowCount();\n\n //Here we generate the password forget token\n $bytes = openssl_random_pseudo_bytes(30);\n $token = bin2hex($bytes);\n\n $stmt = $db>prepare(""\n INSERT INTO forgetPassword\n (token, userID, active, oldPasswords)\n VALUES\n (?, ?, ?, ?)"");\n\n $stmt>execute(array(\n $token,\n $userID,\n 'YES',\n $password\n ));\n\n //Here we send an email to the user with the needed reset function\n $msg = ""follow this link to reset your password http://example.com/index.php?resetLink=$token"";\n mail($email,""Password reset"",$msg);\n }else{\n\n /*\n We show the user the same message in order to prevent the enumeration of\n valid email addresses.\n */\n\n echo ""An email was sent to your email for password reset""; \n }\n }\n\n public function resetPassword(){\n\n //init a DB connection and make objects for hashing and secure password enforcing\n include(""classes.php"");\n\n $con = new database();\n $hash = new passwordHash();\n $pwd = new passwordPolicy();\n\n $db = $con>connection() \n\n /*\n Imagine the user clicked on his link with the token included and is redirected towards\n the page where he can enter his new password.\n\n Now we select the information from the forgot password function where the\n forgot tokens matches the token in the database.\n */\n\n $active = ""YES"";\n\n $stmt = $db>prepare(""\n SELECT a.userID, a.token, b.id\n FROM forgetPassword as a\n JOIN members as b\n ON a.userID = b.id WHERE token=? and Active=? "");\n\n $stmt>execute(array($_GET['resetLink'], $active));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n\n //Here we select token and users id:\n $token = $row['token'];\n $userID = $row['userID'];\n\n }\n\n if($token === $_GET['resetLink']){\n\n /*\n First we pull the password through our function which enforces the input of\n secure passwords.(see ""Enforce secure passwords"" in code examples for more\n detailed information)\n */\n\n if($pwd>createPassword($_POST['password']) === true);\n\n /*\n Than we encrypt our password\n (see ""Password storage"" in code examples for more\n detailed information)\n */\n\n $hash>createHash($_POST['password']);\n\n /*\n Finally we compare the password against other old passwords from the\n password reset database in order to prevent the user from using old passwords\n which could already be compromised by any means.\n */\n\n $stmt = $db>prepare(""SELECT oldPasswords FROM forgetPassword where userID=?"");\n $stmt>execute(array($userID));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $row){\n\n if($newpassword === $row['oldPasswords']){\n echo ""This was an old password please do not use this password"";\n }else{\n\n //First we update the new password for the user\n $active = ""NO"";\n $stmt = $db>prepare(""UPDATE members SET password=? WHERE userID=?"");\n $stmt>execute(array($newPassword, $userID));\n $affected_rows = $stmt>rowCount();\n\n //Then we destroy the reset token by setting it's value to NO\n $stmt = $db>prepare(""UPDATE forgetPassword SET active=? WHERE userID=?"");\n $stmt>execute(array($active, $userID));\n $affected_rows = $stmt>rowCount();\n\n }\n }\n }\n }\n }\n\n ?>\n"
Give me some sample code of XML External entities in php ?,XML External entities\n\n\n Example:\n\n \n <?php\n\n /*\n The overall prevention method for loading external entities is adding the following line of code:\n This line of code function tells the underlying libxml parsing to not try to interpret the values\n of the entities in the incoming XML and leave the entity references intact.\n */\n\n libxml_disable_entity_loader(true);\n\n ?>\n
Give me some sample code of Anti clickjacking headers in php ?,"Anti clickjacking headers\n\n\n Example:\n\n \n /*\n  One way to defend against clickjacking is to include a ""framebreaker"" script in each\n  page that should not be framed. The following methodology will prevent a webpage from\n  being framed even in legacy browsers, that do not support the XFrameOptionsHeader.\n  In the document HEAD element, add the following:\n  First apply an ID to the style element itself:\n  */\n\n  <style id=""antiClickjack"">body{display:none !important;}</style>\n  //And then delete that style by its ID immediately after in the script:\n\n <script type=""text/javascript"">\n if (self === top) {\n var antiClickjack = document.getElementById(""antiClickjack"");\n antiClickjack.parentNode.removeChild(antiClickjack);\n } else {\n top.location = self.location;\n }\n </script>\n\n\n  <?php\n \n  /*\n  The second option is to use ""security headers"".\n  There are two options for setting the ""anticlickjacking"" headers in your application:\n  */\n\n  //this will completely prevent your page from being displayed in an iframe.\n  header('XFrameOptions: DENY');\n\n\n  //this will completely prevent your page from being displayed in an iframe on other sites.\n  header('XFrameOptions: SAMEORIGIN');\n\n  ?>\n"
Give me some sample code of Debug enabling in php ?,"Debug Enabling\n\n\n Example:\n\n\n <?php\n\n /*\n Turn off all error reporting, this method should be included on all your pages.\n We recommend putting it in a main method which is used throughout your entire application.\n */\n error_reporting(0);\n\n //or\n ini_set('display_errors','Off');\n\n ?>\n"
Give me some sample code of Login functionality in php ?,"Login functionality\n\n\n Example:\n\n\n <?php\n\n /*\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n TABLE users\n  \n | userID | userName | password | privilegeID | access | AggregateControl |\n  \n | 1  | Admin | Csdar323 | 1  | TRUE | 2336 |\n   \n | 2 | User  | Adf4fsv | 2  | FALSE  | 0  |\n  \n | 3  | Guest  | dff4fKr |  3  |  TRUE | 135  |\n  \n\n TABLE privileges\n  \n | privilegeID | privilege |\n \n | 1 | edit:read:delete |\n \n | 2  | edit:read |\n \n | 3 | read |\n \n\n Now instead of using roles in sessions we rather want to assign privileges to users\n by means of a DatabaseBased Authentication system.\n Now we can easily assign a user certain privileges for him to access.\n See ""Privilege based authentication"" code example for more information:\n */\n\n class login{\n public function loginUser($username,$password)\n {\n\n //init DB connection\n include(""classes.php"");\n $conn = new database();\n $db = $con>connection();\n\n /*\n You must log invalid user input in order to detect a possible attack on your login form\n In this example the expected input is ""aZ/09 _""\n */\n\n if(preg_match(""/[^azAZ09]/"", $username))\n { \n //Set a log for whenever there is unexpected user input with a threat level\n setLog(""null"",""invalid expected input"", ""FAIL"", date(""dmy""), ""null"", ""HIGH"");\n header(""location:login.php"");\n die();\n }\n\n /*\n We also want to make sure the user access is TRUE, if not, it means the user was blocked\n for attempting to hack the application\n */\n\n //After successful validation we want to log that username was validated successfully:\n setLog($_SESSION['userID'],""Username return true"", ""SUCCESS"", date(ddmmyyyy), $privilege, ""NULL"");\n\n //PDO prepared statement in order to prevent SQL injections\n $stmt = $db>prepare(""\n SELECT a.username, a.password, a.privilegeID, b.privilegeID, b.privilege \n FROM users as a\n JOIN privileges as b\n ON a.projectID = b.projectID\n WHERE a.username = :username and b.access='TRUE'"");\n\n $this>_setSql($sql);\n\n $stmt>execute(array(':page' => $_GET['page'], ':username' => $username));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as $loginUser){\n\n /*\n Than we validate the password, if the validation is true than we set the sessions\n For more detailed information on password validation check please look into the\n Password storage(salting/stretching/hashing) in the knowledgebase for more information.\n */\n if($this>ValidatePassword($loginUser['password'], $password) === true)\n {\n //After successful validation we want to log that Password was validated successfully:\n setLog($_SESSION['userID'],""Password return true"", ""SUCCESS"", date(""dmy""), $privilege, ""NULL"");\n\n session_start();\n\n //Change the session id on login\n session_regenerate_id(true);\n\n //Here we set a session to see if the user is authenticated throughout the system\n $_SESSION['access'] = ""active"";\n\n /*\n The userID in a session variable to use as an identifier to prevent a user reading\n into unauthorized data, See Identifierbased authorization for more information and\n code examples.\n */\n $_SESSION['userID'] = $loginUser['id'];\n\n //The CSRF token is set here by an approved random number generator\n $_SESSION['csrf'] = base64_encode(openssl_random_pseudo_bytes(128));\n\n //if all is ok we return loginUser values\n return $loginUser;\n }\n }\n }\n }\n\n ?>\n"
Give me some sample code of User registration SQL truncation in php ?,"User registration / Sql truncation prevention\n\n\n Example:\n\n\n <?php\n\n /*\n In order to prevent Column truncation sql injection Solution we have to make sure the\n applications structural logic does not mismatches with the database structural logic.\n To achieve this imagine the follow example of a database structure of a users table\n\n TABLE users\n \n |  *Name* | *Type* | *Extra* |\n \n | userID  | Int(11) | AUTO_INCREMENT |\n \n | Username   | char(21) |   |\n \n | Password | Varchar(255) |  |\n \n | PrivilegeID | Int(11) | |\n \n */\n\n class registerUser{\n //First we create a function in order to select all usernames in order to see of they already exists\n public function userCheck($username){\n\n //init DB\n $con = new database();\n $db = $con>connection();\n\n $stmt = $db>prepare(""SELECT * FROM members WHERE username = :input"");\n $stmt>bindParam(':input', $username, PDO::PARAM_STR);\n $stmt>execute();\n\n if($stmt>fetch(PDO::FETCH_OBJ) == False){\n //Return true in order to complete registration\n return true;\n\n }else{\n //The username already exists:\n return false;\n }\n }\n\n public function userRegister($username, $password, $privID){\n\n //init DB\n $con = new database();\n $user = new registerUser();\n $db = $con>connection();\n\n /*\n Whenever the user gains the ability to register himself or change his user\n credentials you must always enforce the application to compare the length of the\n submitted string against the length of the allowed string length in your database\n structure in order to prevent sql column truncation.\n */\n $length = strlen($username);\n\n /*\n We now compare the length of the username against the allowed string length in\n The database structure\n */\n\n if($length >= 21){\n //If length is to large the application must die.\n die(""Username was to long!"");\n }\n\n //If true than register the user! \n if($user>Usercheck($username) === true){\n\n $hash = new passwordHash();\n\n //Than we encrypt the password with the Bcrypt encryption function of PHP\n $hash>createHash($password);\n\n //After successful validation we enter the new user into the database\n $stmt = $db>prepare(\n\n ""INSERT INTO users\n (Username, Password, PrivilegeID)\n VALUES\n (?, ?, ?)"");\n\n $stmt>execute(array($username, $hash, $privilegeID));\n $affected_rows = $stmt>rowCount(); \n }else{\n echo ""Username already existed"";\n }\n }\n }\n\n ?>\n"
Give me some sample code of Encoder in php ?,"Character encoding\n\n\n Example:\n\n\n <?php\n\n /*\n This is the encoder class for whenever you have to allow certain\n possibly dangerous characters into your Give me some sample code of i.e names such as O'Reilly\n */\n\n class encodeInput {\n //As you can see you can specify allowed characters in your function\n public function encoder($allowed, $input, $countLevel){\n\n //create object for logging class\n $logging = new logging();\n\n $return = true;\n\n if(!preg_match(""/^[azAZ09 "".$allowed.""]+$/"", $input)){ \n\n /*\n Set a log for whenever there is unexpected user input with a threat level\n See ""audit logs"" code example for more information:\n */\n $logging>setLog($_SESSION['userID'],""Bad user inputs"", ""FAIL"",\n date(""dmy""), $_SESSION[""privilege""], ""HIGH"");\n\n /*\n Set counter if counter hits 3 the users session must terminated\n After 3 session terminations the user account must be blocked\n See ""audit logs"" code example for more information:\n */ \n $logging>setCounter($countLevel);\n $input = false;\n }\n\n //We also check for the single quote since htmlspecialchar does not encode it\n if(preg_match(""/'/"", $input)){\n $input = preg_replace(""/'/"", ""&39;"", $input);\n }\n\n //We return the input by means of htmlspecialcharacters so it becomes encoded\n return htmlspecialchars($input);\n }\n }//end class\n\n ?>\n"
Give me some sample code of Aggregate user controls in php ?,"Aggregate user controls\n\n\n Example:\n\n\n <?php\n\n /*\n In order to enforce Aggregate access control protection the best method would be to\n define your rules by means of a database structure rather than sessions or log's.\n This is due to the fact that if the user drops his session the rating would start\n al over again.\n\n TABLE users\n  \n | userID | userName | password | privilegeID | access | AggregateControl |\n  \n | 1 | Admin | Csdar323 | 1 | TRUE | 2322  |\n  \n | 2 | User | Adf4fsv | 2 | FALSE | 0 |\n  \n | 3 | Guest | dff4fKr | 3 | TRUE | 125 |\n \n\n TABLE privileges\n  \n | privilegeID | privilege |\n \n | 1 | edit:read:delete |\n \n | 2 | edit:read |\n \n | 3 | read |\n \n */\n\n class aggregateUserControl{\n public function countAccess($count){\n //init DB\n include(""classes.php"");\n $con = new database();\n $logging = new logging();\n $db = $con>connection();\n\n /*\n Each time the user accesses the database we keep track of the number of times he\n connected. Whenever the user passes a reasonable number he should be rejected\n since he could be an attacker scraping your table contents and stealing company information\n You could a CRON job in your mysql system in order to clean the Aggregate column within certain timeframes\n */\n\n //First we log the access\n $logging>setLog($_SESSION['userID'],""User access database "", ""SUCCESS"", date(""dmy""), $privilege, ""NULL"");\n\n //After that we select\n $stmt = $db>prepare(""SELECT AggregateControl FROM members WHERE userID=:id "");\n $stmt>execute(array(':id' => $_SESSION['userID']));\n $row = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n $aggregate = 0;\n\n foreach($row as $rows){\n\n $control = $rows['AggregateControl'];\n }\n\n //We add the count to control variable for the update\n $control += $count;\n\n if($control >= 5000){\n\n //First we log the surpassing of the user control count\n //setLog($_SESSION['userID'],""Aggregate control breach"", ""FAIL"", date(""dmy""), $privilege, ""HIGH"");\n\n /*\n Then we lock out the users account assuming it has been compromised by\n an attacker.\n */\n $access = ""FAIL"";\n $stmt = $db>prepare(""UPDATE members SET access=? WHERE userID=?"");\n $stmt>execute(array($access, $_SESSION['userID']));\n $affected_rows = $stmt>rowCount();\n\n } \n\n //Then we update the users table and count +1 tot the AggregateControl column\n $stmt = $db>prepare(""UPDATE members SET AggregateControl=? WHERE userID=?"");\n $stmt>execute(array($control, $_SESSION['userID']));\n $affected_rows = $stmt>rowCount();\n }\n }\n\n //We use the function as follows:\n countAccess(1);\n\n ?>\n"
Give me some sample code of Password Storage(salting stretching hashing) in php ?,"Password storage(salting/stretching/hashing)\n\n\n Example:\n\n\n <?php\n\n class passwordHash{\n \n public function createHash($pwd){\n\n /*\n For the encryption of passwords we use PHP's BCRYPT encryption method.\n */\n\n //Here we generate a hash with a random salt\n public function HashPassword($password){\n $options = [\n 'cost' => 11,\n 'salt' => mcrypt_create_iv(22, MCRYPT_DEV_URANDOM),\n ];\n\n $hash = password_hash($password, PASSWORD_BCRYPT, $options).""\n"";\n\n return $hash;\n }\n\n //Validate your password\n public function ValidatePassword($correctHash, $password)\n {\n if(password_verify($password, $correctHash))\n {\n //After successful validation we want to log that password was validated successfully:\n setLog($_SESSION['userID'],""Password return true"", ""SUCCESS"", date(ddmmyyyy), $privilege, ""NULL"");\n return true;\n }else{ \n //We log invalid password use\n setLog($_SESSION['userID'],""Password return false"", ""FAIL"", date(ddmmyyyy), $privilege, ""LOW"");\n return false;\n }\n }\n }\n }\n \n ?>\n"
Give me some sample code of Sandboxing in php ?,"Sandboxing\n\n\n Example:\n\n\n <?php\n\n <iframe sandbox=""value"">\n\n /*\n sandbox="""" Applies all restrictions\n allowforms Reenables form submission\n allowpointerlock Reenables APIs\n allowpopups Reenables popups\n allowsameorigin Allows the iframe content to be treated as being from the same origin\n allowscripts Reenables scripts\n allowtopnavigation Allows the iframe content to navigate its toplevel browsing context\n */\n\n ?>\n"
Give me some sample code of Identifier based authorization in php ?,"Identifierbased authorization\n\n\n Example:\n\n\n <?php\n\n class identifierBasedAuth{ \n\n /*\n Define the whitelist pattern and validation type and input parameter like:\n identity(""page1,page2,etc"", ""alphanumeric"", $_GET['page'], ""3"")\n */\n public function identity($whiteListPattern, $validationType, $inputParameter, $countLevel){\n\n //Include the classes of which you want to use objects from\n include_once(""classes.php"");\n\n $validate = new validation();\n $whitelist = new whitelisting();\n $aggregate = new aggregateControl();\n $conn   = new database();\n\n //init DB connection\n $db = $con>connection();\n\n $continue = true;\n\n /*\n First, we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n */\n if($validate>inputValidation($inputParameter, $validationType,\n ""Invalid user input"", ""HIGH"", $countLevel) == false) {$continue = false;}\n\n /*\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n */\n if($whitelist>checkpattern($whiteListPattern, $inputParameter, $countLevel) == false)\n {$continue = false;}\n\n /*\n Whenever you are checking whether a user is restricted to review certain data,\n the access restrictions should be processed server side.\n The userID could be stored inside a session variable on login, and should be used to\n retrieve user data from the database:\n */\n if($continue == true){\n\n /*\n We count the number of connections towards the database,\n See ""aggregate user controls"" code example for more information:\n */\n $aggregate > countConnections(1);\n\n $stmt = $db>prepare(""SELECT * FROM table WHERE id=:userID AND page=:page"");\n $stmt>execute(array(':page' => $_GET['page'], ':id' => $_SESSION['userID']));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n }\n }\n }\n\n ?>\n"
Give me some sample code of PHP Object Injection in php ?,"PHP Object Injection\n\n\n Example:\n\n \n /*\n Vulnerability occur when unsanitized input is passed into the unserialize function\n\n <?php\n\n class foo{\n public $cmd;\n\n function __destruct()\n {\n system($cmd);\n }\n\n }\n\n $data = $_GET['data'];\n\n $obj = unserialize($data);\n\n ?>\n\n In the above example user can control the input to the unserialize function, which can lead to change in the $cmd variable which can even result in taking over the server.\n\n Do not use unserialize() function with usersupplied input, use JSON functions instead.\n We can use json_decode instead of unserialize.\n Otherwise userinput should not be able to control the unserialize function\n \n */\n\n // Secure approach for preventing the PHP object injection\n \n <?php\n\n class foo{\n public $cmd;\n\n function __destruct()\n {\n system($cmd);\n }\n\n }\n\n $data = $_GET['data'];\n $obj = json_decode($data);\n\n ?> \n"
Give me some sample code of Charsets in php ?,"Charsets\n\n\n Example:\n\n\n <?php\n\n //Add the following line of code inside the application header:\n //<meta httpequiv=""ContentType"" content=""text/html; charset=utf8"">\n\n //or:\n header('ContentType: text/html; charset=utf8');\n\n ?>\n"
Give me some sample code of Content type headers in php ?,"Content type headers\n\n\n Example:\n\n\n <?php\n\n //Content type header in php\n header(""ContentType:text/html; charset=UTF8"");\n\n ?>\n"
Give me some sample code of XML Injection Prevention in php ?,"XML Injection Prevention\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever you are using XML parsers you must sanitize or encode al userinput before\n including this input into your XML file.\n\n Some methods like below, the Dom document already encodes the input before storing it\n into the XML. But beware, since this encoded input is still a threat whenever you are\n displaying the this data on screen as HTML Output. This encoded data should be escaped\n at all times before displaying.\n\n Whenever your XML function does not encode your data on the fly, you may want to write\n your own function for achieving this. See the code examples and search for ""Input encoding""\n for more detailed information.\n */\n\n\n //Let us take an easy example where we store your favorite number name into a XML file.\n $doc = new DOMDocument();\n $doc>formatOutput = true;\n\n $r = $doc>createElement( ""employees"" );\n $doc>appendChild( $r );\n\n $b = $doc>createElement( ""employee"" );\n\n $name = $doc>createElement( ""name"" );\n $name>appendChild(\n $doc>createTextNode( $_POST['name'] )\n );\n $b>appendChild( $name );\n\n $r>appendChild( $b );\n\n $doc>save(""test.xml"");\n\n /*\n We will try to insert <script>alert(123);</script> into the XML file,\n Now after inserting the employee name into the XML file it will look like:\n\n\n <?xml version=""1.0""?>\n <employees>\n <employee>\n <name><script>alert(123);</script></name>\n </employee>\n </employees>\n\n As you can see de input has been encoded but still can trigger an XSS whenever we\n extract the data as shown in the example below:\n\n NOTE: if you ever want to include the xml files by means of userselected sources,\n be aware of the fact that an attacker could also include sources from external websites\n and even execute External entity injections on your applications. See the ""XSLT injection prevention""\n code example for more detailed information on how to implement this type of functionality since\n the same principle's apply to both functions.\n */\n\n\n $doc = new DOMDocument();\n $doc>load( 'test.xml' );\n $doc > validateOnParse = true;\n $employees = $doc>getElementsByTagName( ""employee"" );\n\n foreach( $employees as $employee )\n {\n\n $names = $employee>getElementsByTagName( ""name"" );\n $name = $names>item(0)>nodeValue;\n\n //This example is vulnerable to XSS\n echo $name;\n\n //This example is escaped\n $esc = htmlspecialchars($name);\n\n echo $esc;\n\n }\n\n /*\n We recommend to not rely solely on the encoding of the input by the Dom document.\n So before you insert userinput into the XML file you want to have it sanitized.\n See the ""Encoding"" and ""input validation"" code examples for more detailed information\n */\n\n ?>\n"
Give me some sample code of File upload in php ?,"File upload\n\n\n Example:\n\n\n <?php\n\n class fileUpload{\n \n public function Image(){\n\n include('classes.php');\n $validated = new validate();\n $log = new logging();\n\n\n $image = $_FILES['fileToUpload'];\n //File location outside of the root\n $uploaddir = 'assets/uploads/';\n\n //check extensions\n $filetype = explode(""."", $image['name']);\n\n /*\n For uploading out of intended directory we check the filename and verify that it only contains alphanumeric values.\n */\n if($validated > inputValidation($filetype[0], ""alphanumeric"", ""invalid filename"", ""MOD"", 2){\n header('location:/page');\n die();\n }\n\n /*\n We take the last array value to make sure it is the last extension to prevent validating\n .jpg.php in a file name.\n */\n $takeLastValue = count($filetype) 1;\n\n while(($filetype[$takeLastValue] != ""png"") && ($filetype[$takeLastValue] != ""jpg"")){\n\n //Set a log for whenever there is an unexpected user input with a threat level\n $log > setLog($_SESSION['userID'],""Unrestricted image extension upload"",\n ""FAIL"", date(ddmmyyyy), $privilege, ""HIGH"");\n\n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user account should be blocked\n Since the high threat level will lead to immediate session termination\n */\n $log > setCounter(3);\n\n //The die function is to make sure the rest of the php code is not executed beyond this point\n die();\n }\n\n // Check file size\n if($image[""size""] > 500000) {\n header('location:/page');\n die();\n }\n\n // Check if file already exists to prevent overwriting\n if(file_exists('assets/uploads/'.$image['name'])) {\n header('location:/page');\n die();\n } \n\n //if all goes well upload your file, first we want to log the event.\n $log > setLog($_SESSION['userID'],""File upload"", ""SUCCESS"", date(ddmmyyyy),\n $privilege, ""NULL"");\n\n $uploadfile = $uploaddir . basename($image['name']);\n move_uploaded_file($image['tmp_name'], $uploadfile);\n\n //Last mime type check after upload if not correct than delete!\n $finfo = finfo_open(FILEINFO_MIME_TYPE);\n echo $theType = finfo_file($finfo, $uploaddir.$image['name']);\n\n if($theType != ""image/jpeg"" && $theType != ""image/png""){ \n unlink($uploaddir.$image['name']);\n\n //Set a log for whenever there is unexpected user input with a threat level\n $log > setLog($_SESSION['userID'],""invalid image mime type"",\n ""FAIL"", date(ddmmyyyy), $privilege, ""HIGH"");\n\n /* ^^\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user account should be blocked\n since the high threat level can lead to immediate session termination.\n */\n $log > setCounter(3);\n\n //The die function is to make sure the rest of the php code is not executed beyond this point\n die(); \n }\n }\n }\n ?>\n"
Give me some sample code of Privilege based authentication in php ?,"Privilege based authentication\n\n\n Example:\n\n\n <?php\n\n /*\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n TABLE users\n  \n | userID | userName | password | privilegeID | access | AggregateControl |\n  \n | 1 | Admin | Csdar323 |  1 |  TRUE | 2336 |\n   \n | 2 | User  | Adf4fsv |  2 |  FALSE | 0  |\n  \n | 3 | Guest | dff4fKr |  3  |  TRUE | 135   |\n  \n\n TABLE privileges\n  \n | privilegeID | privilege |\n \n | 1  | edit:read:delete |\n \n |  2  | edit:read |\n \n |  3  | read |\n \n\n Now instead of using roles in sessions we rather want to assign privileges to users\n by means of a DatabaseBased Authentication system.\n Now we can easily assign a user certain privileges for him to access.\n */\n\n class privilege{\n\n //Here is the isAuthorized function in which we check whether the user is permitted to do the action\n public function isAuthorized($ispermitted){\n\n //we make object of logging class for our logging methods also for db connection\n include(""classes.php"");\n\n $logging = new logging();\n $con = new database();\n\n $db = $con>connection();\n\n //We select the privilege from the database\n $stmt = $db>prepare(""\n SELECT a.username, a.password, a.privilegeID, b.privilegeID, b.privilege \n FROM users as a\n JOIN privileges as b\n ON a.projectID = b.projectID\n WHERE a.userID = :id and b.access='TRUE'"");\n\n $stmt>execute(array(':id' => $_SESSION['userID']));\n $rows = $stmt>fetchAll(PDO::FETCH_ASSOC);\n\n foreach($rows as value){\n $privilege = $value['privilege'];\n }\n\n //We first explode the value's to see how much parts the arrays consists of\n $permission = explode("":"", $privilege);\n $authorization = explode("":"", $ispermitted); // $ispermitted\n\n //Then we count the authorization array\n $count = count($authorization);\n $counthits = 0;\n\n /*\n We check the permissions against the ispermitted value to see how many times\n they match. whenever they match we count the hits\n */\n foreach($permission as $value){\n if(preg_match('/'.$value.'/', $ispermitted)){\n $counthits++;\n }\n }\n\n /*\n Whenever the counts hits are greater or equal to the needed permissions\n we now know we deserved access to the part of the system.\n */\n if($counthits >= $count){\n\n //Log that the user had sufficient privileges:\n $logging>setLog($_SESSION['userID'],""User was privileged!"", ""SUCCESS"",\n date(""dmy""), $privilege, ""NULL"");\n\n return true;\n }else{\n\n //Log that the user had insufficient privileges:\n $logging>setLog($_SESSION['userID'],""User was not privileged!"", ""FAIL"",\n date(ddmmyyyy), $privilege, ""HIGH"");\n\n /*\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user's account must be blocked.\n Given the high threat level, there will be immediate session termination.\n in this case the user tried to manipulate the application operation in order to do things he is not\n privileged to, immediate session termination will follow!\n */\n\n $logging>setCounter(3);\n\n return false;\n }\n }\n }\n\n /*\n This is how you enforce the permissions in your application\n We define the roles we want the user to suffice\n */\n\n if(isAuthorized(""edit:read:delete"") === true){\n //Do your operation\n }\n\n /*\n if ever there are new 'roles' added to the system you can easily assign them the needed privileges without\n having to add new roles throughout your entire system. This system takes a little more planning up ahead but\n it enforces higher level of security.\n */\n\n ?>\n"
Give me some sample code of HTML Output in php ?,"HTML Output\n\n\n Example:\n\n\n <?php\n\n /*\n Whenever user input is displayed in the application, whether, as content or a parameter value\n submitted towards the url, all user input should be properly escaped to prevent XSS injections.\n */\n\n //For normal output this escaping will do the trick\n $escaped = htmlspecialchars($_POST['value'], ENT_QUOTES, 'UTF8');\n echo $escaped;\n\n //This also applies, for instance, when retrieving content from a database:\n while($row = $stmt>fetch(PDO::FETCH_ASSOC)) {\n echo htmlspecialchars($row['value'], ENT_QUOTES, 'UTF8');\n }\n\n /*\n Security consists of different layers of protection, in order to guarantee the integrity\n of your application. This means that the value submitted from the user should\n already be sanitized before being submitted towards the database in order to prevent XSS.\n As an example, you are expecting only alphanumerical value here:\n */\n\n if(!preg_match(""/^[azAZ09]+$/"", $escaped)){\n die();\n }\n\n /*\n This type of approach should be used whenever you are allowing user input in\n your DOM like for example, let's say a user was allowed to upload an image and\n set an alt text. when you do not sanitize his input a possible attack string could be:\n */\n\n this is an image"" onload=""alert('XSS');""\n\n /*\n whenever this string now is added to the users image this will be the outcome, leading\n to xss:\n */\n\n <img src=""http://image.com/image.jpg"" alt=""this is an image"" onload=""alert('XSS')"""" />\n\n /*\n After this sanitation malicious code can no longer exist in the $_POST['value'] variable.\n\n Another possibility for attackers to execute an XSS injection, is to pass malicious code directly\n into the URL by means of a ""href"", e.g.:\n javascript:alert(document.cookie);\n or\n data:text/html;base64,base64xssinjection\n\n In the following scenario escaping with htmlspecialchars() is not sufficient to block the injection.\n By checking the URL to see if it starts with either http:// or https:// whenever a link has\n been submitted to the web application by a user.\n\n ?>\n"
Give me some sample code of X XSS Protection Header in flask ?,"XXSSProtection header\n\n\n Example:\n\n\n """"""\n In order to set the XXSSProtection header, you'll have to add the following code to the head of your application\n """"""\n\n @app.after_request\n def anti_XSS(response):\n response.headers[""XXSSProtection""] = ""1; mode=block""\n return response\n"
Give me some sample code of Server side template Injection prevention in flask ?,"Server Side Template Injection prevention\n\n\n Example:\n\n \n """"""\n Server Side Template Injection, a frequent critical vulnerability that has high chance of \n mistaken as Cross Site Scripting and miss it entirely. But inline XSS, it can lead attack in \n Web server and may even obtain a RCE. Template Injection occurs when user input is embedded in a template in an unsafe manner. \n """"""\n\n //Vulnerable piece of Code which can lead to SSTI\n @app.errorhandler(404)\n def page_not_found(e):\n  template = '''{%% extends ""layout.html"" %%}\n {%% block body %%}\n  <div class=""centercontent error"">\n <h1>Oops! That page doesn't exist.</h1>\n  <h3>%s</h3>\n  </div>\n {%% endblock %%}\n ''' % (request.url)\n  return render_template_string(template), 404\n\n """"""\n The above code is vulnerable to SSTI,\n If we give http://www.example.com/ss/<script>alert(1)</script>\n This will show an alert box, which means its vulnerable to XSS\n If we give http://www.example.com/ss/{{3*3}}\n This will show an output 9, which further tells us that it is vulnerable to code injection or SSTI\n """"""\n\n //Sanitization of user input can fix the issue\n @app.errorhandler(404)\n def page_not_found(e):\n\n //Initialize\n continue = True\n\n //Escape function would fix the issue\n  url = request.url\n  url = escape(url)\n  \n  //Checking the url\n  p = re.compile(r'(http://www.example.com/(.*))(\?.*)?')\n\n  if inputValidation(url, ""alphanumeric"") or len(url>20) or inputValidation(url, ""alpha""):\n  continue = False\n  \n  if p.match(url) and continue==True:\n\n  template = '''{%% extends ""layout.html"" %%}\n {%% block body %%}\n  <div class=""centercontent error"">\n  <h1>Oops! That page doesn't exist.</h1>\n  <h3>%s</h3>\n  </div>\n {%% endblock %%}\n ''' % (url)\n  \n  return render_template_string(template), 404\n\n"
Give me some sample code of Enforce secure passwords in flask ?,"Enforce secure passwords\n\n\n Example:\n\n\n def checkPassword(pwd):\n  error = []\n  proceed = True\n  //Recommended a longer password for Security\n  if(len(pwd) < 13):\n  error.append(""Password is too Short!!"")\n  proceed = False\n \n //The password should include at least one number, a small letter, a CAPS,\n //Plus a special character as defined in the patterns array:\n \n  if not any(x.isupper() for x in pwd):\n  error.append('Your password needs at least 1 capital letter')\n  if not any(x.islower() for x in pwd):\n  error.append('Your password needs at least 1 small letter')\n  if not any(x.isdigit() for x in pwd):\n  error.append('Your password needs at least 1 digit')\n\n \n //Even though your password is sufficient according to all your standards, the password could still be weak.\n //Just imagine the password ""Password!""; this could easily be guessed by an attacker. To prevent the use of weak passwords we \n //compare the password with a list of top 500 bad passwords and if matched, the password wil be rejected:\n\n  file = open('badpasswords.txt').read()\n  pattern = file.split("","") \n\n  for value in pattern:\n  if value != pwd:\n  pass\n  else:\n  error.append(""Your password was matched with the bad password list, please try again."")\n  proceed = False\n  break\n\n  if proceed == True:\n  flash(""Your password is allowed!"")\n  return True\n else:\n  flash(""Password validation failure(your choice is weak):"")\n  for x in error:\n  print x\n  return False"
Give me some sample code of Re authentication in flask ?,"Reauthentication\n\n\n Example:\n \n\n """"""\n Whenever a user wants to change his credentials or do other important data exchanges such as\n transferring money he should always be challenged to reauthenticate himself before\n allowing them to perform these actions.\n """"""\n \n def reauthenticate(password):\n user = User.query.filter_by(id=session['id']).first()\n\n //Validation of password in bcrypt encryption\n if ValidatePassword(user.password, password):\n \n //After successful validation we will log that password was validated successfully\n setLog(session['id'], ""Password return true"", ""SUCCESS"", str(datetime.utcnow()), session['privilege'], ""NULL"")\n\n //Here we set a session to see if the user is authenticated throughout the system\n session['access'] = 'active'\n\n """"""\n The userID in a session variable to use as an identifier to prevent a user reading\n into unauthorized data, See Identifierbased authorization for more information and\n code examples.\n """"""\n\n //Setting the user Id\n session['id'] = user.id\n\n return True\n\n else:\n\n //The user failed reauthenticating himself\n setLog(session['id'], ""Reauthentication failed"", ""FAIL"", str(datetime.utcnow()), ""null"", ""MOD"")\n //If authentication failed destroyed the session\n session.destroy()\n session.regenerate()\n session['access'] = """"\n\n return False\n\n\n """"""\n Before we let a user perform certain actions he should first be challenged to authenticate\n himself. imagine the following scenario, the user wants to change his email address.\n """"""\n\n if reauthenticate(password) !== True :\n\n return ""<div id='error'>please reauthenticate yourself<div>""\\n  + ""<form method='post'>""\\n  + ""<input type='password' name='password'/>""\\n  + ""<input type='submit' name='authenticate'/>""\\n  + ""</form>""\n\n else:\n  //Do operation for changing the email address\n  return ""<div id='success'>You can now change your email address!</div>"";\n\n"
Give me some sample code of XSL injection prevention in flask ?,"XSL injection prevention\n\n\n Example:\n\n \n """"""\n In order to prevent XSL injections you must enforce strict policy's whenever the\n files are loaded from a source controlled by an possible attacker.\n\n Let's say for example that the user can choose from several XSL files on your application.\n\n ABC.xsl arranges your employee names on alphabetical order\n CBA.xsl does not care and just shows the input by order of your XML file.\n\n Before we want to attach the XSL files to the style sheet we first want to\n do validation on the request to make sure the included file was one of our own pre\n defined files, example:\n including(""file1.xsl,file2.xsl,etc"", filename)\n """"""\n\n\n def including(whiteListing, input):\n\n continue = True\n\n """"""\n First, we want to filter the filenames for expected values. For this example we use only az/09 and .\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n\n if inputValidation(inputParameter, validationType, ""Invalid userinput"", ""HIGH"") == False:\n continue = False\n\n """"""\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n if whitelisting(whiteListing, input, count) == False:\n continue = False\n\n //If all went good we do the function\n if continue == True:\n //Load XML file\n root = etree.parse(""test.xml"")\n\n xslt_root = etree.XML(input)\n transform = etree.XSLT(xslt_root)\n\n //Transform the XML\n result_tree = transform(root)\n\n else: \n\n return False"
Give me some sample code of Session cookies (domain) in flask ?,"Session cookies (domain)\n\n\n Example:\n\n\n """"""\n Whenever a session is started, and you want to share it over different domains,\n the domain value should be set to the specific domain\n """"""\n\n from flask import Flask, session\n\n //Initialize the flask application\n app = Flask(__name__)\n\n //Set the secret key. keep this really secret:\n app.secret_key = open(""/dev/random"",""rb"").read(32) \n\n //Name of the session cookie\n app.config['SESSION_COOKIE_NAME'] = 'hrj'\n //Path for the session cookie\n app.config['SESSION_COOKIE_PATH'] = '/'\n //Domain for the session cookie\n //Configure domains, do not use .yourdomain.com (wildcard)\n //This increases the attack surface!\n app.config['SESSION_COOKIE_DOMAIN'] = 'demo.yourdomain.com'\n //Controls if the cookie should be set with the secure flag\n app.config['SESSION_COOKIE_SECURE'] = True\n //Controls if the cookie should be set with the httponly flag\n app.config['SESSION_COOKIE_HTTPONLY'] = True\n //Lifetime of a permanent session\n app.config['PERMANENT_SESSION_LIFETIME'] = 3600\n\n //Store Value in session\n session['type'] = ""value"""
Give me some sample code of Directory listing in flask ?,"Directory listing\n\n\n Example:\n\n\n """"""\n To disable or prevent directory access, add following line in your .htaccess file. If\n user points the browsers to a directory that does not have an index file, then a\n ""403 Forbidden"" error will be displayed:\n Add this line of code to your .htaccess file:\n """"""\n\n Options Indexes\n\n //Python code to display the files from the uploads folder\n\n @app.route('/uploads/<filename>')\n def uploaded_file(filename):\n  try:\n  return send_from_directory(app.config['UPLOAD_FOLDER'], filename)\n  except Exception as e:\n  return redirect(url_for('upload')) \n\n"
Give me some sample code of RFD and file download injection prevention in flask ?,"Reflective file download and file download injection prevention\n\n\n Example:\n\n \n def downloadUserFiles(fileId):\n \n proceed = True\n\n """"""\n For the sake of example we only allow the users to download their own files\n by identifier based sql query's. As you can see we select the filename\n by its id. in this case we prevent direct user input into the disposition header.\n """"""\n\n if inputValidation(fileId, ""numeric"", ""validate was false"", ""HIGH"", 3) == False:\n proceed = False\n\n if proceed = True:\n file = Download.query.filter_by(fileId=fileId, userId=session['id']).first()\n\n filename = file.fileName\n mimeType = file.mimeType\n\n if filename:\n\n """"""\n We also define the mimetype per download file.\n This is because whenever a user can only download images it is not necessary to set\n an uncommon contenttype header for it.\n NOTE: These mimetypes should not be stored based upon the mimetype which was send\n the response header when the user uploaded the file. This value can be easily\n manipulated with an intercepting proxy. You should get the mimetype from the file\n itself after it was stored on the server.\n """"""\n\n response = Response(open(app.config['UPLOAD_FOLDER'] + filename).read())\n response.headers[""ContentDescription""] = ""File Transfer""\n response.headers[""Contenttype""] = mimeType\n response.headers[""ContentDisposition""] = ""attachment; filename="" + filename\n response.headers[""Expires""] = 0\n response.headers[""CacheControl""] = ""nostore, nocache, mustrevalidate, maxage=0""\n response.headers[""CacheControl""] = ""postcheck=0, precheck=0"", false\n\n if os.path.exists(app.config['UPLOAD_FOLDER'] + filename):\n  return response\n\n """"""\n The second example is for whenever you are providing users with fixed downloads\n such as manuals etc. We do not only check if the file just exists, because that would\n allow an attacker to also download important other files from your server, so instead\n we whitelist them.\n """"""\n \n def downloadStored(filename):\n\n response = Response(open(app.config['UPLOAD_FOLDER'] + filename).read())\n\n if whitelisting(""file1.txt,file2.txt"", $filename) != False:\n response.headers[""ContentDescription""] = ""File Transfer""\n response.headers[""Contenttype""] = 'text/plain'\n response.headers[""ContentDisposition""] = ""attachment; filename="" + filename\n response.headers[""Expires""] = 0\n response.headers[""CacheControl""] = ""nostore, nocache, mustrevalidate, maxage=0""\n response.headers[""CacheControl""] = ""postcheck=0, precheck=0"", false\n response.headers[""ContentLength""] = os.path.getsize(filename)\n\n if os.path.exists(app.config['UPLOAD_FOLDER'] + filename):\n  return response\n"
Give me some sample code of X Content Type Options header in flask ?,"XContentTypeOptions header\n\n\n Example:\n\n\n """"""\n In order to set the ""XContentTypeOptions"" header you'll have to add the following code to the head of your application\n """"""\n\n @app.after_request\n def anti_ContentType(response):\n response.headers[""XContentTypeOptions""] = ""nosniff""\n return response\n"
Give me some sample code of Audit logs in flask ?,"Audit logs\n\n\n Example:\n\n\n """"""\n The log function does not have to be complicated as long as you log at least these 6 values\n\n Whenever a user is registered or added to your system, the application must also\n automatically generate a table for this user which contains his userID, counter and blocker\n variable in order to keep track of his behavior.\n """"""\n\n def setLog(userId, error, value, date, threat):\n\n """"""\n There are different threats : LOW, MEDIUM, HIGH\n\n NULL if the operation is success\n\n LOW threats are debugging logs or information logs when it goes wrong\n\n MEDIUM threats can be failure of validation check, whitelisting checks failure\n\n HIGH threats can even result in ban of users, security testing and maximum number of tries\n """"""\n \n //Take the client's IP address\n ip = request.remote_addr\n\n //Save log file in a directory which has restrictions in place so no one can \n file = ""restrictedfolder/logfile.txt""\n f = open(file, 'w+')\n \n //Notice how we user the userID instead of the actual username in order to prevent the integrity of these usernames\n f.write(date + str(userId) + error + value + threat + ""Ip : "" + str(ip))\n f.close()\n\n\n class Counter(db.Model):\n __tablename__ = ""counter""\n count = db.Column(db.Integer, nullable=False)\n blocker = db.Column(db.Integer, nullable=False)\n userID = db.Column('userID', db.Integer, db.ForeignKey('users.user_id'), primary_key=True)\n\n def __init__(self, count, blocker, userID):\n self.count = count \n self.blocker = blocker\n self.userID = userID\n\n def increment(self, count):\n self.count+= count\n self.blocker+= count\n\n if self.counter >= 3:\n setLog(self.userId,""The users session was terminated"", ""SUCCESS"", datetime.utcnow(), ""NULL"")\n //After the counter has terminated a session he should be set to zero again\n self.count = 0\n //Log that the users sessions have been terminated\n logout()\n\n if self.blocker >= 12:\n //If the blocker was bigger than 12 it means the user has made three strikes and his account should blocked\n setLog(self.userId,""The users is denied access to system"", ""SUCCESS"", datetime.utcnow(), ""NULL"")\n user = User.query.filter_by(id=self.userID).first()\n user.status = 'Blocked'"
Give me some sample code of CSRF Token in flask ?,"CSRF Token\n\n\n Example:\n\n\n //The random CSRF token generated need to be send to the server with every form submission. \n //We are using FlaskWTF, for installing that: \n //pip install U FlaskWTF\n //In HTML Forms, for specifying the CSRF we can use the below code\n\n <form method=""post"">\n <input type=""hidden"" name=""csrf_token"" value=""{{ csrf_token() }}""/>\n </form>\n\n //For ajax requests, we can use the below code\n\n <script type=""text/javascript"">\n var csrf_token = ""{{ csrf_token() }}"";\n\n $.ajaxSetup({\n beforeSend: function(xhr, settings) {\n if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {\n xhr.setRequestHeader(""XCSRFToken"", csrf_token);\n }\n }\n });\n </script>\n\n //For configuring in the backend, you can use the below code\n import base64\n from OpenSSL import SSL, rand\n from werkzeug.utils import secure_filename\n from flask_wtf.csrf import CSRFProtect, CSRFError\n\n //Initialize the flask application \n app = Flask(__name__)\n\n //To Register CSRF protection globally for the app \n csrf = CSRFProtect()\n csrf.init_app(app)\n\n //Configurations \n //Strictly protection on SSL, Referrer \n app.config['WTF_CSRF_SSL_STRICT'] = True \n\n \n //Always use a WTF_CSRF_SECRET_KEY otherwise by default this will use the Flask app's \n //SECRET_KEY. So if user didn't WTF_CSRF_SECRET_KEY it will choose SECRET_KEY, \n //Which may impact the secret key\n\n //Random string for generating CSRF token\n app.config['WTF_CSRF_SECRET_KEY'] = base64.b64encode(rand.bytes(128)) \n\n //Function which is called when CSRF error happens\n @app.errorhandler(CSRFError)\n def handle_csrf_error(e):\n return render_template('csrf_error.html', reason=e.description), 400\n"
Give me some sample code of Logout function in flask ?,"Logout function\n\n\n Example:\n\n\n from flask_login import login_user, LoginManager, UserMixin, logout_user, login_required\n\n """"""\n This way, the logout functionality will revoke the complete session:\n """"""\n \n @app.route(""/logout"")\n @login_required\n def logout():\n logout_user()\n setLog(self.userId,""Logout User"", ""SUCCESS"", datetime.utcnow(), ""NULL"")\n return render_template('index.html')"
Give me some sample code of White listing in flask ?,"Whitelisting\n\n\n Example:\n\n\n """"""\n First we create a function which checks the allowed patterns:\n whitelisting(""value1,value2,value3"" , input)\n Whitelisting is checking if a value is identically the same as the whitelist we created. Please rewrite the below part to reflect this.\n """"""\n\n def whitelisting(allowed, input):\n result = allowed.split(',')\n flag = False\n for x in result:\n if x == match:\n \n //If the value is valid we send a log to the logging file\n setLog(session[""id""], ""Good whitelist validation"", ""SUCCESS"", datetime.utcnow(),""HIGH"")\n flag = True\n //Whenever there was a valid match we return true\n return True\n \n //Check for a false in order to send error to log and counter the user\n if flag == False:\n \n //If the whitelist is bad log the validation \n setLog(session[""id""], ""Bad whitelist validation"", ""FAIL"", datetime.utcnow(), ""HIGH"") \n counter.increment()\n return False \n"
Give me some sample code of Session hijacking and fixation in flask ?,"Session hijacking and fixation\n\n\n Example:\n\n\n """"""\n As soon as a user logs into your application you must store his session id as well as his\n IP address along with his userID. This information will be used later on in your application in order to identify possible session hijacking.\n\n TABLE track_sessions\n \n | TrackID | userID |    SESSION  | Ip address  |\n \n | 1 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.89 | \n \n | 2 | 1 | 79dcd529c0f5e01a9bfb2425c52036c6 | 123.45.67.81 |\n \n | 3 | 2 | c80959d3ea4c166413774e45375ac2a1 | 987.65.43.21 |\n \n\n In order to prevent session hijacking there are a couple of defense strategies\n which combined are a hardened defense. \n """"""\n\n """"""\n First we implement the strict transport security header, this is in order to prevent\n users from accessing your application over an unprotected connection.\n """"""\n\n //Example of the strict transport security header:\n response.headers[""StrictTransportSecurity""] = ""maxage=31536000""\n\n //If all present and future subdomains will be HTTPS:\n response.headers[""StrictTransportSecurity""] = ""maxage=31536000; includeSubDomains"" \n\n """"""\n Recommended: If the site owner would like their domain to be included in the HSTS preload\n list maintained by Chrome (and used by Firefox and Safari), then use:\n """"""\n\n response.headers[""StrictTransportSecurity""] = ""maxage=31536000; includeSubDomains; preload"" \n\n """"""\n The `preload` flag indicates the site owner's consent to have their domain preloaded.\n The site owner still needs to then go and submit the domain to the list. the preload list\n enforces the browser to always present your application on HTTPS even on the first time\n the user hits your application\n """"""\n\n """"""\n Then we set the httpOnly flag\n (see ""HttpOnly"" in the code examples for more details about implementation)\n """"""\n  \n app.config['SESSION_COOKIE_HTTPONLY'] = True\n\n """"""\n Then we set the flag for session timeout\n (see ""Timeout"" in the code examples for more details about implementation)\n """"""\n  \n app.config['PERMANENT_SESSION_LIFETIME'] = 3600\n\n """"""\n Then we set the session secure flag\n (see ""Secure flag"" in the code examples for more details about implementation)\n """"""\n app.config['SESSION_COOKIE_SECURE'] = True\n\n """"""\n On login we change the session id in order to prevent session fixation\n (see ""Login functionality"" in the code examples for more details about implementation)\n """"""\n \n //In header we should include this\n from flask_kvsession import KVSessionExtension\n \n //Call for session regenerate to prevent session fixation\n session.regenerate()\n\n """"""\n NOTE: On applications that require high level security, there should never be an\n remember me functionality implemented.\n """"""\n\n\n """"""\n Now imagine the scenario after the login of the user (see the ""login functionality"" in\n the code examples for more details). Whenever the user is logged in, the users IP address\n and session id are also stored in the database these values are used in order to verify\n if there are multiple users active on the same session.\n If so, we can let the user decide to terminate the session and terminate the\n other assigned sessions.\n """"""\n\n def checkSession():\n //To check whether the user is active\n if session['status'] != ""active"" or session['status'] == """":\n return redirect(url_for('login'))\n\n """"""\n Then we start the rest of the function where we will check if there are multiple\n users/IP addresses using the same session id\n """"""\n \n //Store the current session\n session = request.cookies.get('session')\n\n //Get user ip address\n ipaddress = request.remote_addr\n\n trackSession = track_sessions.query.filter_by(ipaddress = ipaddress).first()\n if trackSession.session == ipaddress:\n return """"""<div style='borderstyle:solid; bordercolor:black; color:white; backgroundcolor:red; float:left;'>\n <p>There are other active sessions on other IPaddresses.<br/>\n Your session could be hijacked press logout in order to authenticate again\n for security reasons!\n <br/><br/>\n <a href='/logout'>Terminate sessions</a>\n <br/>\n <a href='/Proceed'>Proceed anyway</a>\n </p>\n </div>""""""\n\n """"""\n The only thing left to do now is to update your track_sessions table by inserting\n the IP address, sessionID and userID if you want to accept the other sessions as valid.\n Otherwise the user just has to terminate his current session in order to lock out the\n other sessions.\n """""""
Give me some sample code of Random password token generation in flask ?,"Random password/token generation\n\n\n Example:\n\n\n """"""\n When needing to generate random numbers, always use proven methods \n instead of writing your own.\n """"""\n \n //Return a 50 character random string usable as a SECRET_KEY setting value.\n from django.core.management.utils import get_random_secret_key\n SECRET_KEY = get_random_secret_key()\n \n //Generate an even longer random string usable as a SECRET_KEY setting\n from django.utils.crypto import get_random_string\n chars = 'abcdefghijklmnopqrstuvwxyz0123456789!@$%^&*(_=+)'\n SECRET_KEY = get_random_string(100, chars)\n \n"
Give me some sample code of Password storage (salting stretching hashing) in flask ?,"Password storage (salting/stretching/hashing)\n\n\n Example:\n\n\n from flask.ext.bcrypt import Bcrypt\n\n //Initialize the application with Bcrypt\n app = Flask(__name__)\n bcrypt = Bcrypt(app)\n\n //For the encryption of passwords we use BCRYPT encryption method.\n\n def createHash(pwd):\n setLog(0, ""Create password Hash"", ""SUCCESS"", str(datetime.utcnow()), ""HIGH"")\n return bcrypt.generate_password_hash(pwd)\n\n //Validate your password\n\n def ValidatePassword(pwd_hash, pwd):\n setLog(0, ""Start ValidatePassword"", ""SUCCESS"", str(datetime.utcnow()), ""HIGH"")\n try:\n return bcrypt.check_password_hash(pwd_hash, pwd)\n setLog(0, ""ValidatePassword correct password"", ""SUCCESS"", str(datetime.utcnow()), ""HIGH"")\n except ValueError:\n return False\n setLog(0, ""ValidatePassword incorrect password"", ""FAIL"", str(datetime.utcnow()), ""HIGH"")\n\n"
Give me some sample code of Directory path traversal in flask ?,"Directory/path traversal\n\n\n Example:\n\n\n //Define the whitelist pattern and validation type and input parameter like:\n //getFiles(""images,css,js"", 'alphanumeric', foldername)\n\n def getFiles(whiteListPattern, validationType, inputParameter):\n \n continue = True\n\n //First, we want to filter the filenames for expected values. For this example we use only az/09 and .\n //Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n //For more information about validation see ""input validations"" in the code examples:\n\n if inputValidation(inputParameter, validationType, ""Invalid userinput"", ""HIGH"") == False:\n continue = False\n\n //Second, we want to whitelist the filenames for expected values, in this example they are,\n //page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n\n //Check for filename Whitelisting\n if whitelisting(whiteListPattern, inputParameter):\n continue = False\n\n if continue == True:\n //Create Path\n path = os.path.join(app.config['UPLOAD_FOLDER'], inputParameter) \n images = []\n \n //List all the URL\n for f in os.listdir(path):\n  if f.endswith(""jpg"") or f.endswith(""png""):\n  images.append(""%s%s/%s"" % (app.config['UPLOAD_FOLDER'], inputParameter, f))\n\n return render_to_response('gallery.html', {'images': images})\n\n else:\n\n return render_to_response('gallery.html', {'images' : ''})\n\n //gallery.html\n\n {% for image in images %}\n <img src='{{image}}' />\n {% endfor %}\n"
Give me some sample code of Input validation in flask ?,"Input validation\n\n\n Example:\n\n \n """"""\n This function is where you store all your input validation controls. \n It makes it easy to maintain whenever you want to apply changes for \n certain input validation roles and reduces the chance of mistakes in your regexes.\n """"""\n\n def isAlphanumeric(str):\n match = re.findall(""^[azAZ09]+$"" , str)\n //Check for alphanumeric\n if match:\n return True\n else:\n return False\n\n def isAlpha(str):\n match = re.findall(""^[azAZ]+$"" , str)\n //Check for alpha\n if match:\n return True\n else:\n return False\n\n def isDigit(str):\n match = re.findall(""^[09]+$"" , str)\n //Check for isDigit\n if match:\n return True\n else:\n return False \n\n def isBool(str):\n  match = re.findall(""^(True|False)+$"" , str)\n if match:\n  return True\n  else:\n return False \n \n def inputValidation(input, type):\n  if type == alphanumeric:\n   //Set the audit log\n   setLog(session[""id""], ""Alphanumeric matched"", ""Success"", str(datetime.utcnow()), session['privilege'])\n   return isAlphanumeric(input)\n   elif type == numeric:\n   //Set the audit log\n   setLog(session[""id""], ""Numeric matched"", ""Success"", str(datetime.utcnow()), session['privilege'])\n   return isDigit(input)\n   elif type == alpha:\n   //Set the audit log\n   setLog(session[""id""], ""Alphabet matched"", ""Success"", str(datetime.utcnow()), session['privilege'])\n   return isAlpha(input)\n   elif type == bool:\n   //Set the audit log\n   setLog(session[""id""], ""Bool matched"", ""Success"", str(datetime.utcnow()), session['privilege'])\n   return isBool(input)\n   else:\n   //Set the audit log\n   setLog(session[""id""], ""FAIL"", str(datetime.utcnow()), session['privilege'])\n   //Increment the counter\n   counter.increment(1)\n   return False\n"
Give me some sample code of Enforce sequential step order shopping in flask ?,"Enforce sequential step order (Shopping)\n\n\n Example:\n\n\n """"""\n Whenever an functionality consists out of following several steps to achieve some goal i.e,\n ""User adds items to chart"", ""User enters shipping information"", ""User pays for goods"",\n ""Items will be shipped."" You want to make sure the user can not skip the payment step in\n order to receive his goods.\n\n\n   \n | Items | | Cart | |checkout | | CostumerInfo |\n    \n |itemID | |cartID | |PaymentID| |ConsumerID |\n |price | |itemID | |itemID | |name |\n |name  | |sessionID| |Token | |address  |\n   |sessionID| |sessionID  |\n |Verified | |consumerToken |\n  \n\n As you can see above we have a very simplified database structure for your average\n web shop. Now we can walk through the different steps needed to enforce the user to take\n all steps before payment.\n\n We wont cover the entire shopping cart functions since that would become a rather big\n example so let's cover the basics of enforcing the sequential steps.\n\n Step1: would be, the user adding items to his cart.\n\n Step2: would be, the user adding his items to checkout. Whenever he is done shopping\n ""add to checkout"" generates a random token for the added items which\n are inserted into the payment table in the database\n\n """"""\n\n def checkTokens():\n\n //First we build the checktokens function because we want to check the checkout tokens\n //Multiple times throughout the steps\n \n rows = checkout.query.filter_by(sessionID=session['id']).all()\n for x in rows:\n\n //Here we check for a different token or new session token\n if x.token == session['token']:\n\n customerinfo.query.filter_by(sessionID=session['id']).delete()\n db.session.commit()\n\n checkout.query.filter_by(sessionID=session['id']).delete()\n db.session.commit()\n\n return redirect(url_for('checkout'))\n\n //As soon as the user visits your website you start sessions in order to assign sessionId\n\n """"""\n On submit we send al the shopping cart data to another table in the database, but\n this time al the items also contain the same random token. Now an attacker cannot sneak\n in new items since these tokens will be evaluated on the payment page.\n\n next, the user lands on a page where he has to fill in his customer info:\n\n NOTE: do not forget the CSRF token in order to prevent attackers from changing his\n shipping info.\n """"""\n\n //Then we proceed to check if the post values where not empty\n  \n check = True\n error = """"\n\n if request.method == 'POST':\n if request.form['customerName'] == """" : \n check = False\n error += ""Customer name is required""\n\n if request.form['customerAddress'] == """":\n check = False\n error += ""Customer address is required""\n\n if check != True:\n return error\n else:\n return redirect(url_for('summary'))\n //In this step we also insert at the customer data into the database\n\n """""" \n Then we select al the customer info and shopping items on sessionID from the\n database and display it on screen in order for the user to verify if all the\n information displayed is correct.\n """"""\n\n //When the user has verified we again check the checkout tokens to see if no new items where added\n checkTokens() \n\n """"""\n After that the user verifies this information then he will be redirected to the payment\n page like ideal, Paypal etc.\n\n Whenever the payment returns true you set the ""verified"" column on the checkout\n table to TRUE and you send the customer the invoice and send him his items.\n """"""\n\n verified = True\n\n data = checkout.query.filter_by(sessionID=session['id']).first()\n data.verified = verified\n db.session.commit()\n\n customer = customer.query.filter_by(sessionID=session['id']).delete()\n db.session.commit()\n\n checkout = checkout.query.filter_by(sessionID=session['id']).delete()\n db.session.commit()\n\n cart = cart.query.filter_by(sessionID=session['id']).delete()\n db.session.commit()\n\n"
Give me some sample code of System commands in flask ?,"System commands\n\n\n Example:\n\n\n """"""\n Define the whitelist pattern and validation type and input parameter like:\n command(""data.txt,users.txt"", ""filename"", filename)\n """"""\n\n def command(whiteListPattern, validationType, inputParameter){\n\n continue = True\n\n """"""\n Whenever a system command is finished, you should properly sanitize and escape this user input.\n System command functions examples are: system(), eval(), exec()\n\n First, we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n\n if inputValidation(inputParameter, validationType) == False:\n continue = False\n\n """"""\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n if whitelisting(whiteListPattern, inputParameter) == False:\n continue = False\n\n //If all went good we include the filename\n if continue == True:\n\n //Even though there is match we still escape the shelx.quote():\n command = './configure {}' .format(quote(inputParameter))\n os.system(command)\n\n else:\n\n return False"
Give me some sample code of Session cookies HttpOnly in flask ?,"Session cookies HttpOnly\n\n\n Example:\n\n\n """"""\n Whenever a session is started, the ""httpOnly"" option should always be set to ""true"" or ""1"":\n """"""\n \n from flask import Flask, session\n\n //Initialize the flask application\n app = Flask(__name__)\n\n //Name of the session cookie\n app.config['SESSION_COOKIE_NAME'] = 'hrj'\n\n //Path for the session cookie\n app.config['SESSION_COOKIE_PATH'] = '/'\n \n //Domain for the session cookie\n //Configure domains, do not use .yourdomain.com (wildcard)\n //This increases the attack surface!\n app.config['SESSION_COOKIE_DOMAIN'] = 'demo.yourdomain.com'\n \n //Controls if the cookie should be set with the secure flag\n app.config['SESSION_COOKIE_SECURE'] = True\n \n //Controls if the cookie should be set with the httponly flag\n app.config['SESSION_COOKIE_HTTPONLY'] = True\n \n //Lifetime of a permanent session\n app.config['PERMANENT_SESSION_LIFETIME'] = 3600\n\n //Store Value in session\n session['type'] = ""value""\n"
Give me some sample code of SQL query in flask ?,"SQL query\n\n\n Example:\n\n\n """"""\n SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL.\n """"""\n\n from flask_sqlalchemy import SQLAlchemy\n \n //Will track modifications of objects and emit signals\n app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True\n //Database URI is used for connection\n app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///test.db'\n //Create object of SQL Alchemy\n db = SQLAlchemy(app)\n\n //Class Model that is a declarative base which can be used to declare models\n class User(db.Model):\n  id = db.Column(db.Integer, primary_key=True)\n  username = db.Column(db.String(80), unique=True, nullable=False)\n  password = db.Column(db.String(120), unique=True, nullable=False)\n\n  def __repr__(self): \n  return '<User %r>' % self.username\n\n \n //create the tables and database\n from yourapplication import db\n db.create_all()\n\n //Inserting data into the database create, add and commit\n admin = User(username='admin', password='9u3$$_m3_1f_y0u_C@n')\n db.session.add(admin)\n db.session.commit()\n\n //Delete entries from the table\n db.session.delete(admin)\n db.session.commit()\n\n //Querying Records\n //Retrieve the user with username\n admin = User.query.filter_by(username='admin').first()\n admin.id\n\n //SQL raw string approach\n\n from sqlalchemy import text\n\n if inputValidation(inputParameter, 'alphanumeric') == False:\n //Protection from string interpolation attack\n sql = text(""select name from penguins where id =%s"" % (inputParameter,) )\n \n result = db.engine.execute(sql)\n print result[0]"
Give me some sample code of Open forwards & redirects in flask ?,"Open forwards & redirects\n\n\n Example:\n\n \n """"""\n When using forwards & redirects you should make sure the URL is being explicitly\n declared in the code and cannot be manipulated by an attacker like example.com?page=dashboard :\n """"""\n\n redirect(url_for('dashboard'))\n\n """"""\n Generally you should avoid getting input into the redirect which could contain\n userinput by any means. if for any reason this may not be feasible than you\n should make a whitelist input validation for the redirect like so:\n\n Example : \n If the whitelisting list is home, upload and redirectParam is home \n\n redirectParam = home\n redirecting(""home,upload"", redirectParam, ""3"")\n """"""\n\n\n def redirecting(whitelisting, input, count):\n \n """"""\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" \n in the code examples:\n """"""\n\n if whitelisting(whitelisting, input, count) == True:\n //Redirect the Input if whitelisting is correct\n redirect(url_for(input))\n\n\n"
Give me some sample code of X Path query in flask ?,"Xpath query\n\n\n Example:\n\n\n """"""\n Define the allowed characters and input parameter and count level for the\n user lockout like:\n controller(""<'>&"", $_GET['filename'], ""3"")\n \n In order to prevent xpath injections we have to treat these query's similar as \n to the sql query's. \n """"""\n \n def controller(allowed, input, count):\n \n """"""\n First we build our encoding method, see ""input validation"" code example for\n more detailed information about encoding and escaping.\n """"""\n \n return = encoder(allowed, input, count)\n\n //If the encoder came back false we do not process the function!\n\n if return != False:\n\n //Parse the register.xml\n root = etree.parse(""register.xml"")\n\n //Extract the id from the XML using XPath\n find = etree.XPath('/Employees/Employee[ID=' + return + ']')\n\n for x in find(root):\n print x.text\n"
Give me some sample code of Anti caching headers in flask ?,"Anticaching headers\n\n\n Example:\n\n\n """"""\n Add the following headers to your application head in order to prevent the browser from caching\n """"""\n\n @app.after_request\n def antiCaching(response):\n response.headers[""CacheControl""] = ""nostore, nocache, mustrevalidate"" HTTP/1.1\n response.headers[""CacheControl""] = ""postcheck=0, precheck=0, false""\n response.headers[""Pragma""] = ""nocache"" HTTP/1.0\n return response\n"
Give me some sample code of Secure Session Cookies in flask ?,"Secure Session Cookies\n\n\n Example:\n\n\n """"""\n If you use SLL you can also make your cookies secure (encrypted) to \n avoid ""maninthemiddle"" cookies reading\n """"""\n\n from flask import Flask, session\n\n //Initialize the flask application\n app = Flask(__name__)\n\n //Set the secret key. keep this really secret:\n app.secret_key = open(""/dev/random"",""rb"").read(32) \n\n //Name of the session cookie\n app.config['SESSION_COOKIE_NAME'] = 'hrj'\n \n //Path for the session cookie\n app.config['SESSION_COOKIE_PATH'] = '/'\n \n //Domain for the session cookie\n //Configure domains, do not use .yourdomain.com (wildcard)\n //This increases the attack surface!\n app.config['SESSION_COOKIE_DOMAIN'] = 'demo.yourdomain.com'\n \n //Controls if the cookie should be set with the secure flag\n app.config['SESSION_COOKIE_SECURE'] = True\n \n //Controls if the cookie should be set with the httponly flag\n app.config['SESSION_COOKIE_HTTPONLY'] = True\n \n //Lifetime of a permanent session\n app.config['PERMANENT_SESSION_LIFETIME'] = 3600\n\n //Store Value in session\n session['type'] = ""value""\n"
Give me some sample code of Crossdomain XML  in flask ?,"Crossdomain XML\n\n\n Example:\n\n\n A bad example of a Crossdomain XML would be:\n\n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n //Because it allows access from all other domains.\n //Instead of this approach you might want to use the following restrictions.\n //Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>\n"
Give me some sample code of Password forget and disallow old passwords in flask ?,"Password forget & Disallow old passwords\n\n\n Example:\n\n\n """"""\n Whenever you are developing a password forget function, these are the steps to follow\n in order to create hardened defenses.\n\n TABLE users\n \n | userID | userName | password | EmailAddress | access |\n \n | 1  | Admin  | Csdar323 | info@admin.com | True |\n  \n |  2  | User  | Adf4fsv | info@user.com | False |\n \n |  3  | Guest  | dff4fKr | info@guest.com | True |\n \n\n\n TABLE passwordForget\n \n | forgotPasswordID | Token  | UserID | Active |  olPasswords  |\n \n | 1   | c3ab8ff13720e.... |  1  | True |  Csdar323   |\n \n |  2  | 7dd39466b3c89.... |  1  | False | ef0c4f2 |\n \n |  3  | 83d4a3960714c.... |  3  | True | dff4fKr  |\n \n\n\n As you can see we also store the old passwords into the password forget table, this\n we do in order to prevent the user from using old passwords later on in the process.\n\n Also use a cron job to make sure the generated tokens for the password reset are\n expire after a certain amount of time like 20 minutes.\n\n """"""\n\n def checkValidity(email):\n\n user = Members.query.filter_by(email=email).first()\n\n //Here we select the old password as well as the userid from the members table\n password = user.password\n userID = user.id\n email = user.email\n\n //If the select was not empty we will be sending an email to the user as well as \n //Preparing the password forget function\n\n if user is None:\n """"""\n We show the user the same message in order to prevent the enumeration of\n valid email addresses.\n """"""\n return ""An email was sent to your email for password reset""\n\n else:\n\n """"""\n Before we do anything we first set all other possible active statuses to NO\n in order to prevent an attacker creating a whole lot of tokens and than fuzz\n the password reset token.\n """"""\n\n active = False\n\n user.active = active\n db.session.commit()\n\n //Here we generate the password forget token\n token = base64.b64encode(rand.bytes(128))\n\n passwordChange = forgetPassword(token=token, userID=userID, active=active, oldPasswords=password)\n db.session.add(passwordChange)\n db.session.commit() \n\n\n  //Here we send an email to the user with the needed reset function\n  msg = ""follow this link to reset your password http://example.com/reset/"""" + ""token""\n  mail(email,""Password reset"", msg)\n\n\n def resetPassword(resetLink, password): \n\n  """"""\n  Imagine the user clicked on his link with the token included and is redirected towards\n  the page where he can enter his new password.\n\n  Now we select the information from the forgot password function where the\n  forgot tokens matches the token in the database.\n  """"""\n\n  active = True\n\n data = forgetPassword.query.join(members, forgetPassword.userID==members.userID).filter_by(token=resetLink,Active=active).all()\n\n //We select token and users id\n token = data.token\n userID = data.userID\n\n if token == resetLink:\n \n """"""\n First we pull the password through our function which enforces the input of\n secure passwords.(see ""Enforce secure passwords"" in code examples for more\n detailed information)\n """"""\n\n if checkPassword(password) == True:\n\n """"""\n Than we encrypt our password\n (see ""Password storage"" in code examples for more\n detailed information) \n """"""\n\n newPassword = createHash(password)\n  \n """"""\n Finally we compare the password against other old passwords from the\n password reset database in order to prevent the user from using old passwords\n which could already be compromised by any means.\n """"""\n  \n user = forgetPassword.query.filter_by(userID=userID).first()\n\n if newPassword == user.oldPasswords:\n\n return ""This was an old password please do not use this password""\n\n else:\n \n //First we update the new password for the user\n active = False\n\n //Update the details\n newUser = members.query.filter_by(userID=userID).first()\n newUser.password = newPassword\n db.session.commit()\n user.active = active\n user.userID = userID\n  db.session.commit()\n"
Give me some sample code of XML External entities in flask ?,"XML External entities\n\n\n Example:\n\n\n """"""\n The overall prevention method for loading external entities is adding the following line of code:\n To be safe from loading external entities you have to turn off the entities in the parser.\n """"""\n \n //If you are using lxml \n\n content = '''<?xml version=""1.0"" encoding=""UTF8""?>\\n <!DOCTYPE title [ <!ELEMENT title ANY >\\n <!ENTITY xxe SYSTEM ""file:///etc/passwd"" >]>'''\n\n """"""\n If the dtd_validation = True and resolve_entities=True and if the attacker can control the\n XML file which is taken in the parser, he can read any file using the file protocol file:/// or use some other protocols like expect://, gopher:// to even get a shell \n """"""\n\n from lxml import etree\n \n //Both the entities and DTD are turned off\n parser = etree.XMLParser(dtd_validation=False ,resolve_entities=False)\n root = etree.XML(""<root><a/><b></b></root>"", parser)\n \n\n  \n\n\n  \n\n\n\n\n\n \n"
Give me some sample code of Anti clickjacking headers in flask ?,"Anti clickjacking headers\n\n\n Example:\n\n \n """"""\n One way to defend against clickjacking is to include a 'framebreaker' script in each\n page that should not be framed. The following methodology will prevent a webpage from\n being framed even in legacy browsers, that do not support the XFrameOptionsHeader.\n In the document HEAD element, add the following:\n First apply an ID to the style element itself:\n """"""\n\n <style id=""antiClickjack"">body{display:none !important;}</style>\n <! And then delete that style by its ID immediately after in the script >\n <script type=""text/javascript"">\n if (self === top) {\n var antiClickjack = document.getElementById(""antiClickjack"");\n antiClickjack.parentNode.removeChild(antiClickjack);\n } else {\n top.location = self.location;\n }\n </script>\n\n @app.after_request\n def clickjacking_Protection(response):\n """"""\n The second option is to use 'security headers'.\n There are two options for setting the 'anticlickjacking' headers in\n your application:\n """"""\n\n //This will completely prevent your page from being displayed in an iframe \n response.headers[""XFrameOptions""] = ""DENY""\n\n //This will completely prevent your page from being displayed in an iframe on other sites \n response.headers[""XFrameOptions""] = ""SAMEORIGIN""\n return response\n"
Give me some sample code of Debug enabling in flask ?,"Debug Enabling\n\n\n Example:\n\n \n """"""\n Debug mode makes it a major security risk and therefore it must never be used on production machines. It may even lead to execution of arbitrary code.\n """"""\n\n //In Linux machines, never export the environment variable FLASK_DEBUG to 1\n $ export FLASK_DEBUG=0\n $ flask run\n\n //On Windows you need to use set instead of export\n $ set FLASK_DEBUG=0\n\n //Even with python you can enable debug mode\n app.debug = False\n\n //By default it is False\n app.run()"
Give me some sample code of Login functionality in flask ?,"Login functionality\n\n\n Example:\n\n\n """"""\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n TABLE users\n \n | userID | userName | password | privilegeID | access | \n \n | 1 | Admin  | Csdar323 |  1  |  TRUE |\n  \n | 2  | User  | Adf4fsv |  2  |  FALSE |\n \n | 3  | Guest  | dff4fKr |  3  |  TRUE |\n \n\n TABLE privileges\n \n | privilegeID | privilege |\n \n | 1 | edit:read:delete |\n \n |  2  | edit:read |\n \n |  3  | read  |\n \n\n Now instead of using roles in sessions we rather want to assign privileges to users\n by means of a DatabaseBased Authentication system.\n Now we can easily assign a user certain privileges for him to access.\n See ""Privilege based authentication"" code example for more information:\n We will be using flask_login module for login\n """"""\n\n from flask_login import login_user, LoginManager, UserMixin, logout_user, login_required\n\n //Instantiating Flask Login\n login_manager = LoginManager()\n login_manager.init_app(app)\n\n\n //Database model for User\n class User(db.Model):\n __tablename__ = ""users""\n id = db.Column('user_id',db.Integer , primary_key=True)\n username = db.Column('username', db.String(20), unique=True , index=True)\n password = db.Column('password' , db.String(10))\n email = db.Column('email',db.String(50),unique=True , index=True)\n status = db.Column('status', db.String(50), index=True)\n registered_on = db.Column('registered_on' , db.DateTime)\n privilegeID = db.Column('privilegeID', db.Integer, db.ForeignKey('privileges.id'))\n\n def __init__(self , username ,password , email, privilegeID, status):\n self.username = username\n self.password = password\n self.email = email\n self.registered_on = datetime.utcnow()\n self.privilegeID = privilegeID\n self.status = status\n\n\n //Login a user\n @app.route('/login', methods=['GET', 'POST'])\n def login():\n //Redirect to login page in GET request\n if request.method == 'GET':\n return render_template('login.html')\n \n //Initializing username and password\n username = request.form['inputName']\n password = request.form['inputPassword']\n\n //Check whether the username is alphanumeric\n if inputValidation('alphanumeric', username) != True:\n setLog(0, ""invalid expected input"", ""FAIL"", str(datetime.utcnow()), ""HIGH"")\n return redirect(url_for('login'))\n\n //Username and password check \n registered_user = User.query.filter_by(username=username).first()\n if registered_user is None:\n flash('Username or Password is invalid' , 'error')\n return redirect(url_for('login'))\n\n //Validate the password hash on bycrypt\n elif ValidatePassword(registered_user.password, password):\n //Logged In successfully\n login_user(registered_user)\n flash('Logged in successfully')\n \n return render_template('home.html', user=request.form['inputName'])\n"
Give me some sample code of User registration SQL truncation in flask ?,"User registration / Sql truncation prevention\n\n\n Example:\n\n\n """"""\n In order to prevent Column truncation sql injection Solution we have to make sure the\n applications structural logic does not mismatches with the database structural logic.\n To achieve this imagine the follow example of a database structure of a users table\n\n TABLE users\n \n |  *Name*  | *Type*  | *Extra* |\n \n | userID  | Int(11) | AUTO_INCREMENT |\n \n | Username   | char(21) |   |\n \n | Password | Varchar(255) |  |\n \n | PrivilegeID | Int(11) |    |\n \n | Status | Varchar(200) | |\n \n """"""\n\n class User(db.Model):\n __tablename__ = ""users""\n id = db.Column('user_id',db.Integer , primary_key=True)\n username = db.Column('username', db.String(20), unique=True , index=True)\n password = db.Column('password' , db.String(10))\n email = db.Column('email',db.String(50),unique=True , index=True)\n status = db.Column('status', db.String(50), index=True)\n registered_on = db.Column('registered_on' , db.DateTime)\n privilegeID = db.Column('privilegeID', db.Integer, db.ForeignKey('privileges.id'))\n \n def __init__(self , username ,password , email, privilegeID, status):\n self.username = username\n self.password = password\n self.email = email\n self.registered_on = datetime.utcnow()\n self.privilegeID = privilegeID\n self.status = status\n\n //Function to add the details to database\n def userRegister(username, password, email, privilegeID, status):\n user = User(username, password, email, privilegeID, status)\n db.session.add(user)\n db.session.commit()\n\n //Register user \n @app.route('/register' , methods=['GET','POST'])\n def register():\n if request.method == 'GET':\n return render_template('signup.html')\n //Ensure the username is not long\n if len(request.form['inputName'] >= 21):\n raise Exception(""Long username"")\n //Create password hash\n password = passwordHash(request.form['inputPassword'])\n userRegister(request.form['inputName'], password, request.form['inputEmail'], 3, ""Active"")\n flash('User successfully registered')\n return redirect(url_for('login')) \n"
Give me some sample code of Encoder in flask ?,"Character encoding\n\n\n Example:\n\n \n """"""\n This is the encoder class for whenever you have to allow certain\n possibly dangerous characters into your Give me some sample code of i.e names such as O'Reilly\n """"""\n\n def encoder(allowed, input, count):\n  \n  """"""\n  As you can see you can specify allowed characters in your function\n  """"""\n  \n  flag = True\n  match = re.findall(""/^[azAZ09 "" + allowed+""]+$/"", input)\n\n  if match:\n\n  """"""\n  Set a log for whenever there is unexpected userinput with a threat level\n  See ""audit logs"" code example for more information:\n  """"""\n\n  setLog(session['id'], ""Bad userinputs"", ""FAIL"", datetime.utcnow(), ""HIGH"")\n  \n  """"""\n  Set counter if counter hits 3 the users session must terminated\n  After 3 session terminations the user account must be blocked\n  See ""audit logs"" code example for more information:\n  """"""\n  \n  counter.increment()\n  flag = False\n\n  //Remove Dangerous Characters\n  wordDict = {'&': '&', '<' : '<', '>' : '>' , '""' : '""', ""'"" : '&x27;', '/' : &x2F;, '\' : '\\'}\n\n  for key in wordDict:\n   input = input.replace(key, wordDict[key])\n\n  return input\n"
Give me some sample code of Aggregate user controls in flask ?,"Aggregate user controls\n\n\n Example:\n\n \n """"""\n In order to enforce Aggregate access control protection the best method would be to\n define your rules by means of a database structure rather than sessions or log's.\n This is due to the fact that if the user drops his session the rating would start\n al over again.\n\n TABLE users\n \n | userID | userName | password | privilegeID | access | AggregateControl |\n \n | 1 | Admin | Csdar323 | 1 | TRUE |  2322   |\n \n | 2 | User | Adf4fsv | 2 | FALSE |  0 |\n \n | 3 | Guest | dff4fKr | 3 | TRUE |  125 |\n \n\n TABLE privileges\n \n | privilegeID | privilege |\n \n | 1 | edit:read:delete |\n \n | 2 | edit:read |\n \n | 3 | read |\n \n """"""\n\n def countAccess(count):\n \n """"""\n Each time the user accesses the database we keep track of the number of times he\n connected. Whenever the user passes a reasonable number he should be rejected\n since he could be an attacker scraping your table contents and stealing company information\n You could a CRON job in your mysql system in order to clean the Aggregate column within certain timeframes\n """"""\n \n setLog(session['id'], ""User access database "", ""SUCCESS"", datetime.utcnow(), ""NULL"")\n registered_user = User.query.filter_by(id=session['id']).first()\n \n //We add the count to control variable for the update\n control = registered_user.AggregateControl + count\n \n //Check the aggregate\n if control > 5000:\n setLog(session['id'], ""Aggregate control breach"", ""FAIL"", date(""dmy""), ""HIGH"")\n \n """"""\n Then we lock out the users account assuming it has been compromised by\n an attacker\n """"""\n \n access = ""Fail""\n registered_user.status = access\n \n //we update the users table and count +1 tot the AggregateControl column\n registered_user.AggregateControl = control\n\n db.session.commit()"
Give me some sample code of Absolute timeout of a session in flask ?,"Absolute time out of a session\n\n\n Example:\n \n \n """"""\n Whenever a session is started, absolute time out (lifetime) of a session should be set in seconds\n """"""\n\n from flask import Flask, session\n\n //Initialize the flask application\n app = Flask(__name__)\n\n //Set the secret key. keep this really secret:\n app.secret_key = open(""/dev/random"",""rb"").read(32) \n\n Name of the session cookie\n app.config['SESSION_COOKIE_NAME'] = 'hrj'\n\n Path for the session cookie\n app.config['SESSION_COOKIE_PATH'] = '/'\n \n //Domain for the session cookie\n //Configure domains, do not use .yourdomain.com (wildcard)\n //This increases the attack surface!\n app.config['SESSION_COOKIE_DOMAIN'] = 'demo.yourdomain.com'\n \n //Controls if the cookie should be set with the secure flag\n app.config['SESSION_COOKIE_SECURE'] = True\n \n //Controls if the cookie should be set with the httponly flag\n app.config['SESSION_COOKIE_HTTPONLY'] = True\n \n //Lifetime of a permanent session\n app.config['PERMANENT_SESSION_LIFETIME'] = 3600\n\n //Store Value in session\n session['type'] = ""value""\n"
Give me some sample code of Sandboxing in flask ?,"Sandboxing\n\n\n Example:\n\n\n <iframe sandbox=""value"">\n /*\n sandbox="""" Applies all restrictions\n allowforms Reenables form submission\n allowpointerlock Reenables APIs\n allowpopups Reenables popups\n allowsameorigin Allows the iframe content to be treated as being from the same origin\n allowscripts Reenables scripts\n allowtopnavigation Allows the iframe content to navigate its toplevel browsing context\n */\n </iframe>\n\n"
Give me some sample code of Identifier based authorization in flask ?,"Identifierbased authorization\n\n\n Example:\n\n\n """"""\n Define the whitelist pattern and validation type and input parameter like:\n identity(""page1,page2"", ""alphanumeric"", page)\n """"""\n\n def identity(whiteListPattern, validationType, inputParameter):\n\n  continue = True\n\n  """"""\n  First, we want to filter the filenames for expected values. For this example we use only az/09\n  Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n  for more information about validation see ""input validations"" in the code examples:\n  """"""\n\n  if inputValidation(inputParameter, validationType, ""Invalid userinput"", ""HIGH"", countLevel) == False:\n continue = False\n\n  """"""\n  Second, we want to whitelist the filenames for expected values, in this example they are,\n  page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n  """"""\n\n  if whitelisting(whiteListPattern, inputParameter) == False:\n continue = False\n\n  """"""\n  Whenever you are checking whether a user is restricted to review certain data,\n  the access restrictions should be processed server side.\n  The userID could be stored inside a session variable on login, and should be used to\n  retrieve user data from the database:\n  """"""\n  \n if continue == True : \n\n  """"""\n  We count the number of connections towards the database,\n  See ""aggregate user controls"" code example for more information:\n  """"""\n\n countAccess(1)\n data = Table.query.filter_by(id=session['id'], page=inputParameter).first()\n\n return data\n\n else:\n\n return False"
Give me some sample code of Charsets in flask ?,"Charsets\n\n\n Example:\n\n\n """"""\n In order to set the ""Charsets"" header you'll have to add the following code to the head of your application, the following code could be used in your controller: For Example, text/html\n """"""\n\n //You add directly into the HTML markup\n <meta httpequiv=""ContentType"" content=""text/html; charset=utf8"">\n\n @app.after_request\n def content_Type_Charset(response):\n response.headers[""ContentType""] = ""text/html; charset=utf8""\n return response\n"
Give me some sample code of Content type headers in flask ?,"Content type headers\n\n\n Example:\n\n\n //Content Type Header for HTML pages\n response.headers[""ContentType""] = ""text/html; charset=UTF8""\n return response\n\n //Content Type Header for JSON objects\n response.headers[""ContentType""] = ""application/json""\n return response \n"
Give me some sample code of XML Injection Prevention in flask ?,"XML Injection Prevention\n\n\n Example:\n\n\n """"""\n Whenever you are using XML parsers you must sanitize or encode al userinput before\n including this input into your XML file.\n\n Some methods like below, the Dom document already encodes the input before storing it\n into the XML. But beware, since this encoded input is still a threat whenever you are\n displaying the this data on screen as HTML Output. This encoded data should be escaped\n at all times before displaying.\n\n Whenever your XML function does not encode your data on the fly, you may want to write\n your own function for achieving this. See the code examples and search for ""Input encoding""\n for more detailed information.\n """"""\n\n\n //Let us take an easy example where we store your favorite number name into a XML file.\n from lxml import etree\n\n //Create Root Element employees\n\n root = etree.Element(""employees"")\n \n //Create child Element for employees\n employee = etree.SubElement(root, ""employee"")\n name = etree.SubElement(employee, ""name"")\n \n //Insert the text in name tag\n name.text = request.form['name']\n\n //Save it in xml file\n with open(""test.xml"", ""w"") as f:\n f.write(etree.tostring(root, pretty_print=True))\n\n """"""\n We will try to insert <script>alert(123);</script> into the XML file,\n Now after inserting the employee name into the XML file it will look like:\n\n <?xml version=""1.0""?>\n <employees>\n <employee>\n <name><script>alert(123);</script></name>\n </employee>\n </employees>\n\n As you can see de input has been encoded but still can trigger an XSS whenever we\n extract the data as shown in the example below:\n\n NOTE: if you ever want to include the xml files by means of userselected sources,\n be aware of the fact that an attacker could also include sources from external websites\n and even execute External entity injections on your applications. See the ""XSLT injection prevention""\n code example for more detailed information on how to implement this type of functionality since\n the same principle's apply to both functions.\n """"""\n \n //Read from a XML file\n x = etree.parse(""test.xml"")\n\n\n for element in x.iter(""name""):\n  //This example is vulnerable to XSS\n  print element.text\n\n  //This example is escaped\n  print escape(element.text)\n\n """"""\n We recommend to not rely solely on the encoding of the input by the Dom document.\n So before you insert userinput into the XML file you want to have it sanitized.\n See the ""Encoding"" and ""input validation"" code examples for more detailed information\n """"""\n\n \n"
Give me some sample code of File upload in flask ?,"File upload\n\n\n Example:\n\n \n import os\n from flask import render_template, flash\n from flask import Flask, render_template,request, redirect\n from flask import url_for,send_from_directory\n from werkzeug.utils import secure_filename\n\n """"""\n Always store the uploaded files in a directory somewhere outside the document root or that is not \n accessible from the web. Because there is chance that attacker could upload malicious file and \n later access it via the web server. \n """"""\n \n //Path to the upload directory\n app.config['UPLOAD_FOLDER'] = '~/uploads/'\n \n //Extensions which are accepted to be uploaded\n app.config['ALLOWED_EXTENSIONS'] = set(['png', 'jpg', 'jpeg', 'pdf'])\n \n //Check whether the file can be uploaded\n def allowed_file(filename):\n  return '.' in filename and \\n  filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']\n\n //File upload route\n @app.route('/upload', methods=['POST'])\n def upload_file():\n setLog(0, ""Upload function has started"", ""SUCCESS"", str(datetime.utcnow()), ""HIGH"")\n\n  //Check if the post request has the file part\n  if 'file' not in request.files:\n  flash('No file part')\n  return redirect(request.url)\n  \n  //Get the name of the uploaded file\n  file = request.files['file']\n\n  //Submit a empty part without filename\n  if file.filename == '':\n  flash('No selected file')\n  setLog(0, ""No File was selected"", ""FAIL"", str(datetime.utcnow()), ""HIGH"")\n  return redirect(request.url)\n  \n  //Check if the file is one of the allowed types/extensions\n  if file and allowed_file(file.filename):\n  \n  //Make the filename safe, remove unsupported chars\n  filename = secure_filename(file.filename)\n \n  //Remove the input when filename contains more than single dot\n  if len(filename.split('.')) > 1:\n   return redirect(request.url)\n\n  //Move the file form the temporal folder to the upload folder we setup\n  file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))\n\n  //Redirect the user to the uploaded_file route, which will basically show on the browser the uploaded file\n  setLog(0, ""Upload was successful"", ""SUCCESS"", str(datetime.utcnow()), ""HIGH"")\n  return redirect(url_for('uploaded_file', filename=filename))\n  \n  else:\n  flash('Not allowed extensions') \n  //Log the unsuccessful upload\n  setLog(0, ""Upload was not successful, not allowed extensions"", ""FAIL"", str(datetime.utcnow()), ""HIGH"")\n  return redirect(request.url)\n\n @app.route('/uploads/<filename>')\n def uploaded_file(filename):\n  return send_from_directory(app.config['UPLOAD_FOLDER'], filename)\n \n"
Give me some sample code of Privilege based authentication in flask ?,"Privilege based authentication\n\n\n Example:\n\n \n """"""\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n TABLE users\n \n | userID | userName | password | privilegeID | access | AggregateControl  |\n \n | 1  | Admin  | Csdar323 |  1  |  TRUE | 2336  |\n  \n | 2  | User  | Adf4fsv |  2  |  FALSE | 0    |\n \n | 3  | Guest  | dff4fKr |  3  |  TRUE | 135    |\n \n\n TABLE privileges\n \n | privilegeID | privilege  |\n \n | 1  | edit:read:delete |\n \n |  2  | edit:read  |\n \n |  3  | read  |\n \n\n Now instead of using roles in sessions we rather want to assign privileges to users\n by means of a DatabaseBased Authentication system.\n Now we can easily assign a user certain privileges for him to access.\n\n Here is the isAuthorized function in which we check whether the user is permitted to do the action\n """"""\n\n def isAuthorized(ispermitted):\n\n //Select Privilege from the database\n data = Users.query.join(privileges, Users.projectID==privileges.projectID).filter_by(Users.userId==session['id'], privileges.access='TRUE').all()\n\n privilege = data.privilege\n\n //We first explode the value's to see how much parts the arrays consists of\n permission = privilege.split(':')\n authorization = ispermitted.split(':')\n\n //Then we count the authorization array\n count = len(authorization)\n counthits = 0\n\n """"""\n We check the permissions against the ispermitted value to see how many times\n they match. whenever they match we count the hits\n """"""\n\n for value in permission:\n if value == ispermitted:\n counthits = countshits + 1\n\n """"""\n Whenever the counts hits are greater or equal to the needed permissions\n we now know we deserved access to the part of the system.\n """"""\n\n if counthits > count:\n //Log that the user had sufficient privileges:\n setLog(session['id'], ""User was privileged!"", ""SUCCESS"", str(datetime.utcnow()), privilege, ""NULL"")\n return True\n else:\n //Log that the user had sufficient privileges:\n setLog(session['id'], ""User was not privileged!"", ""FAIL"", str(datetime.utcnow()), privilege, ""HIGH"")\n\n """"""\n Set counter; if counter hits 3, the user's session must be terminated.\n After 3 session terminations the user's account must be blocked.\n Given the high threat level, there will be immediate session termination.\n in this case the user tried to manipulate the application operation in order to do things he is not\n privileged to, immediate session termination will follow!\n """"""\n\n Counter.increment(3)\n return False\n"
Give me some sample code of HTML Output in flask ?,"HTML Output\n\n\n Example:\n\n\n """"""\n Whenever user input is displayed in the application, whether, as content or a parameter value\n submitted towards the url, all user input should be properly escaped to prevent XSS injections.\n """"""\n\n For normal output this escaping will do the trick\n from flask import escape\n @app.route('/', methods=['GET', 'POST'])\n def index():\n return escape(request.form['name'])\n\n This also applies, for instance, when retrieving content from a database:\n @app.route('/')\n admin = User.query.filter_by(username='admin').first()\n return escape(admin.email)\n \n For removing dangerous characters : \n\n wordDict = {'&': '&', '<' : '<', '>' : '>' , '""' : '""', ""'"" : '&x27;', '/' : &x2F;, '\' : '\\'}\n\n for key in wordDict:\n input = input.replace(key, wordDict[key])\n\n For UNTRUSTED DATA in <a href=""/site/search?value=UNTRUSTED DATA"">clickme</a>\n URL Encoding for defense\n\n import urllib\n input = urllib.quote_plus(input)\n\n """"""\n Security consists of different layers of protection, in order to guarantee the integrity\n of your application. This means that the value submitted from the user should\n already be sanitized before being submitted towards the database in order to prevent XSS.\n As an example, you are expecting only alphanumerical value here:\n """"""\n match = re.findall(""^[azAZ09]+$"", value)\n if match:\n return True\n else:\n raise Exception(""User supplied value not in the range "" + range)\n\n """"""\n This type of approach should be used whenever you are allowing userinput in\n your DOM like for example, let's say a user was allowed to upload an image and\n set an alt text. when you do not sanitize his input a possible attack string could be:\n """"""\n \n this is an image"" onload=""alert('XSS');""\n\n """"""\n whenever this string now is added to the users image this will be the outcome, leading\n to xss:\n """"""\n\n <img src=""http://image.com/image.jpg"" alt=""this is an image"" onload=""alert('XSS')"""" />\n\n """"""\n After this sanitation malicious code can no longer exist in the $_POST['value'] variable.\n\n Another possibility for attackers to execute an XSS injection, is to pass malicious code directly\n into the URL by means of a ""href"", e.g.:\n javascript:alert(document.cookie);\n or\n data:text/html;base64,base64xssinjection\n\n In the following scenario escaping with htmlspecialchars() is not sufficient to block the injection.\n By checking the URL to see if it starts with either http:// or https:// whenever a link has\n been submitted to the web application by a user.\n\n def before_request(url):\n if url.startswith('http://') or url.startswith('https://'):\n return True\n else:\n raise Exception(""Not a valid URL : "" + url)\n\n \n\n \n"
Give me some sample code of X XSS Protection Header in django ?,"XXSSProtection header\n\n\n Example:\n\n \n """"""\n In order to set the XXSSProtection header, you'll have to add the following code to the head of your application\n\n For adding XXSS Protection in every page we have to add a middleware\n Make a middleware in yourapp/middleware.py\n """"""\n\n class MyMiddleware:\n\n  def __init__(self, get_response):\n  self.get_response = get_response\n\n  def __call__(self, request):\n  response = self.get_response(request)\n  response['XXSSProtection'] = ""1; mode=block""\n  return response\n  \n  //For adding middleware in the project, add in yourproject/settings.py\n  MIDDLEWARE = [\n  ...,\n  'yourapp.middleware.MyMiddleware',\n  ...,\n ] \n\n //For adding in the individual response page using render_to_response\n response = render_to_response(""template.html"", {})\n response['XXSSProtection'] = '1; mode=block'\n\n return response\n\n //For adding in the individual response page using render\n response = render(request, ""template.html"", {})\n response['XXSSProtection'] = '1; mode=block'\n\n return response"
Give me some sample code of Enforce secure passwords in django ?,"Enforce secure passwords\n\n\n Example:\n\n \n def checkPassword(pwd):\n  error = []\n  proceed = True\n\n  //Recommended a longer password for Security\n  if(len(pwd) < 13):\n  error.append(""Password is too Short!!"")\n  proceed = False\n \n """"""\n The password should include at least one number, a small letter, a CAPS,\n and a special character as defined in the patterns array:\n """"""\n \n  if not any(x.isupper() for x in pwd):\n  error.append('Your password needs at least 1 capital letter')\n  if not any(x.islower() for x in pwd):\n  error.append('Your password needs at least 1 small letter')\n  if not any(x.isdigit() for x in pwd):\n  error.append('Your password needs at least 1 digit')\n\n """"""\n Even though your password is sufficient according to all your standards, the password could still be weak.\n Just imagine the password ""Password!""; this could easily be guessed by an attacker. To prevent the use of weak passwords we \n compare the password with a list of top 500 bad passwords and if matched, the password wil be rejected:\n """"""\n\n  file = open('badpasswords.txt').read()\n  pattern = file.split("","") \n\n  for value in pattern:\n  if value != pwd:\n  pass\n  else:\n  error.append(""Your password was matched with the bad password list, please try again."")\n  proceed = False\n  break\n  if proceed == True:\n  flash(""Your password is allowed!"")\n  return True\n else:\n  flash(""Password validation failure(your choice is weak):"")\n  for x in error:\n  print x\n  return False"
Give me some sample code of Re authentication in django ?,"Reauthentication\n\n\n Example:\n\n\n """"""\n Whenever a user wants to change his credentials or do other important data exchanges such as\n transferring money he should always be challenged to reauthenticate himself before\n allowing them to perform these actions.\n """"""\n \n from django.contrib.auth import authenticate, login\n\n def reauthenticate(request, password):\n //Access current_user\n current_user = request.user\n username = current_user.username\n //Authenticate user\n user = authenticate(request, username=username, password=password)\n //Validation of password \n if user is not None:\n //After successful validation we will log that password was validated successfully\n log.info('Successful reauthentication user : {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n\n //Flush Session token \n request.session.flush()\n //Make the current_user active\n current_user.is_active = 1\n //Save the session ID \n login(request, user)\n //Success page \n return render(request, 'polls/home.html')\n else:\n //The user failed reauthenticating himself\n log.warning('Reauthentication Failed!! user : {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n //If authentication failed destroyed the session\n request.session.flush()\n return render(request, 'polls/login.html')\n\n """"""\n Before we let a user perform certain actions he should first be challenged to authenticate\n himself. imagine the following scenario, the user wants to change his email address.\n """"""\n\n //Usage Example\n reauthenticate(password)"
Give me some sample code of XSL injection prevention in django ?,"XSL injection prevention\n\n\n\n Example:\n\n\n """"""\n In order to prevent XSL injections you must enforce strict policy's whenever the\n files are loaded from a source controlled by an possible attacker.\n\n Let's say for example that the user can choose from several XSL files on your application.\n\n ABC.xsl arranges your employee names on alphabetical order\n CBA.xsl does not care and just shows the input by order of your XML file.\n\n Before we want to attach the XSL files to the style sheet we first want to\n do validation on the request to make sure the included file was one of our own pre\n defined files, example:\n including(""file1.xsl,file2.xsl,etc"", 'filename' , $_GET['xslfile'])\n """"""\n\n def including(whiteListing, validation ,input, count):\n\n continue = True\n\n """"""\n First, we want to filter the filenames for expected values. For this example we use only az/09 and .\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n\n if inputValidation(inputParameter, validationType, ""Invalid userinput"", ""HIGH"") == False:\n continue = False\n\n """"""\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n if whitelisting(whiteListing, input, count) == False:\n continue = False\n\n //If all went good we do the function\n if continue == True:\n //Load XML file\n root = etree.parse(""test.xml"")\n\n xslt_root = etree.XML(input)\n transform = etree.XSLT(xslt_root)\n\n //Transform the XML\n result_tree = transform(root)\n else: \n return False"
Give me some sample code of Session cookies (domain) in django ?,"Session cookies (domain)\n\n\n Example:\n\n\n """"""\n Whenever a session is started, and you want to share it over different domains,\n the domain value should be set to the specific domain\n\n For using sessions edit the middleware and make sure it contains 'django.contrib.sessions.middleware.SessionMiddleware'\n\n For adding HTTPONLY Cookies, we have to add the line in settings.py\n SESSION_COOKIE_HTTPONLY = True\n\n For adding Session Cookie age, we have to add the line in settings.py\n SESSION_COOKIE_AGE = 60000\n\n For setting session cookie domain, we have to add the line in settings.py\n SESSION_COOKIE_DOMAIN = 'demo.yourdomain.com'\n\n For setting session cookie name, we have to add the line in settings.py\n SESSION_COOKIE_NAME = 'demo' \n \n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_PATH = '/'\n\n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_SECURE = True\n """"""\n\n //For adding session cookie\n request.session['test'] = 'test'"
Give me some sample code of Directory listing in django ?,"Directory listing\n\n\n Example:\n\n\n """"""\n To disable or prevent directory access, add following line in your .htaccess file. If\n user points the browsers to a directory that does not have an index file, then a\n ""403 Forbidden"" error will be displayed:\n\n Add this line of code to your .htaccess file:\n """"""\n\n Options Indexes\n\n """"""\n Python code to display the files from the uploads folder\n """"""\n\n //Views.py\n\n def getFiles(request, whiteListPattern, validationType, inputParameter):\n\n continue = True\n \n """"""\n First, we want to filter the filenames for expected values. For this example we use only az/09 alphanumeric\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n \n if inputValidation(inputParameter, validationType) == False:\n continue = False\n\n """"""\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n //Check for filename Whitelisting\n if whitelisting(whiteListPattern, inputParameter) == False:\n continue = False\n\n if continue == True:\n //Create Path\n path = os.path.join(settings.MEDIA_ROOT, inputParameter) \n images = []\n\n //List all the URL\n for f in os.listdir(path):\n if f.endswith(""jpg"") or f.endswith(""png""):\n images.append(""%s%s/%s"" % (settings.MEDIA_URL, inputParameter, f))\n return render_to_response('gallery.html', {'images': images})\n else:\n return render_to_response('gallery.html', {'images': ''}) \n\n //gallery.html\n {% for image in images %}\n <img src='{{image}}' />\n {% endfor %}"
Give me some sample code of RFD and file download injection prevention in django ?,"Reflective file download and file download injection prevention\n\n\n Example:\n\n\n import os\n from django.conf import settings\n from django.http import HttpResponse\n\n def downloadUserFiles(request, fileId):\n \n //Current_user\n current_user = request.user\n proceed = True\n\n """"""\n For the sake of example we only allow the users to download their own files\n by identifier based sql query's. As you can see we select the filename\n by its id. in this case we prevent direct userinput into the disposition header.\n """"""\n\n if inputValidation(fileId, ""numeric"", ""validate was false"", ""HIGH"", 3) == False:\n proceed = False\n\n if proceed = True:\n file = Download.objects.filter(fileId=password, userId=current_user.id).first()\n filename = file.fileName\n mimeType = file.mimeType\n\n if filename:\n\n """"""\n We also define the mimetype per download file.\n This is because whenever a user can only download images it is not necessary to set\n an uncommon contenttype header for it.\n NOTE: These mimetypes should not be stored based upon the mimetype which was send\n the response header when the user uploaded the file. This value can be easily\n manipulated with an intercepting proxy. You should get the mimetype from the file\n itself after it was stored on the server.\n """"""\n\n file_path = os.path.join(settings.MEDIA_ROOT, filename)\n if os.path.exists(file_path):\n with open(file_path, 'rb') as fh:\n response = HttpResponse(fh.read(), content_type=mimeType)\n response[""ContentDescription""] = ""File Transfer""\n response[""ContentDisposition""] = ""attachment; filename="" + filename\n response[""Expires""] = 0\n response[""CacheControl""] = ""nostore, nocache, mustrevalidate, maxage=0""\n response[""CacheControl""] = ""postcheck=0, precheck=0"", false\n return response\n raise Http404\n\n """"""\n The second example is for whenever you are providing users with fixed downloads\n such as manuals etc. We do not only check if the file just exists, because that would\n allow an attacker to also download important other files from your server, so instead\n we whitelist them.\n """"""\n \n def downloadStored(filename):\n if os.path.exists(file_path):\n with open(file_path, 'rb') as fh:\n if whitelisting(""file1.txt,file2.txt"", $filename) != False:\n response = HttpResponse(fh.read(), content_type='text/plain')\n response.headers[""ContentDescription""] = ""File Transfer""\n response.headers[""ContentDisposition""] = ""attachment; filename="" + filename\n response.headers[""Expires""] = 0\n response.headers[""CacheControl""] = ""nostore, nocache, mustrevalidate, maxage=0""\n response.headers[""CacheControl""] = ""postcheck=0, precheck=0"", false\n response.headers[""ContentLength""] = os.path.getsize(filename)\n return response\nraise HTTP404"
Give me some sample code of X Content Type Options header in django ?,"XContentTypeOptions header\n\n\n\n Example:\n\n """"""\n In order to set the ""XContentTypeOptions"" header you'll have to add the following code to the head of your application\n\n For adding XContentTypeOptions in every page we have to add a middleware\n Make a middleware in yourapp/middleware.py\n """"""\n\n class MyMiddleware:\n\n  def __init__(self, get_response):\n  self.get_response = get_response\n\n  def __call__(self, request):\n  response = self.get_response(request)\n  response['XContentTypeOptions'] = ""nosniff""\n  return response\n  \n  //For adding middleware in the project, add in yourproject/settings.py\n  MIDDLEWARE = [\n  ...,\n  'yourapp.middleware.MyMiddleware',\n  ...,\n ] \n\n //For adding in the individual response page using render_to_response\n response = render_to_response(""template.html"", {})\n response['XContentTypeOptions'] = 'nosniff'\n\n return response\n\n //For adding in the individual response page using render\n response = render(request, ""template.html"", {})\n response['XContentTypeOptions'] = 'nosniff'\n \n return response\n"
Give me some sample code of Audit logs in django ?,"Audit logs\n\n\n Example:\n\n\n """"""\n Django uses Python’s builtin logging module to perform system logging. \n\n Methods which should be logged : \n Data Addition\n Data modification\n Data deletion\n Data Exports\n Identifying security incidents\n Perfomance monitoring etc\n\n Python logging configurations consists of four parts:\n\n Loggers : is configured to have log level. Different log levels are DEBUG, INFO, \n WARNING, ERROR, CRITICAL. Each message that is written to the logger is a Log Record.\n Handlers : It describes particular logging behavior such as writing message on the screen, a file or to network socket. \n Filters : We can place an additional criteria for logging process.\n Formatters : Formatters describe the exact format of that text.\n\n The logger module is inbuilt class in django for logging system information into files or sending logs through network.\n\n Different logging calls or mehtods : \n logger.debug()\n logger.info()\n logger.warning()\n logger.error()\n logger.critical()\n logger.log()\n logger.exception()\n """"""\n\n //Configuring loggers with app in SETTINGS.PY\n """"""\n This creates polls app log file polls.log\n """"""\n LOGGING = {\n 'version': 1,\n 'disable_existing_loggers': False,\n 'handlers': {\n 'file': {\n 'level': 'DEBUG',\n 'class': 'logging.FileHandler',\n 'filename': 'debug.log',\n },\n 'applogfile': {\n 'level':'DEBUG',\n 'class':'logging.handlers.RotatingFileHandler',\n 'filename': os.path.join(DJANGO_ROOT, 'polls.log'),\n 'maxBytes': 1024*1024*15, 15MB\n 'backupCount': 10,\n },\n },\n 'loggers': {\n 'django': {\n 'handlers': ['file'],\n 'level': 'DEBUG',\n 'propagate': True,\n },\n 'polls': {\n 'handlers': ['applogfile',],\n 'level': 'DEBUG',\n },\n },\n }\n\n //Get Client IP\n\n def get_client_ip(request):\n x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')\n if x_forwarded_for:\n ip = x_forwarded_for.split(',')[0]\n else:\n ip = request.META.get('REMOTE_ADDR')\n return ip\n\n //Example for logging error\n import logging\n\n //Get an instance of a logger\n logger = logging.getLogger(__name__)\n\n def my_view(request, arg1, arg):\n ...\n if bad_mojo:\n //Log an error message\n logger.error('Something went wrong!' + get_client_ip(request)) \n\n\n //Example for logging critical\n import logging\n\n //Get an instance of a logger\n logger = logging.getLogger(__name__)\n\n def my_view(request, arg1, arg):\n ...\n if security_violation:\n //Log an critical message\n logger.critical('Security violation!' + get_client_ip(request))"
Give me some sample code of CSRF Token in django ?,"CSRF Token\n\n\n Example:\n\n \n """"""\n The random CSRF token generated need to be send to the server with every form submission. \n\n The CSRF middleware and template tag provides easytouse protection against Cross Site Request Forgeries.\n The CSRF middleware is activated by default in the MIDDLEWARE setting.\n """"""\n\n """"""\n In HTML Forms, for specifying the CSRF we can use the below code\n """"""\n\n <form method=""post"">\n  {% csrf_token %}\n </form>\n\n """"""\n For the AJAX POST requests, ou have to remember to pass the CSRF token in as POST data with every POST request. For this reason, there is an alternative method: on each XMLHttpRequest, set a custom XCSRFToken header to the value of the CSRF token.\n\n The CSRF token cookie is named csrftoken by default, but you can control the cookie name via the CSRF_COOKIE_NAME setting.\n\n The CSRF header name is HTTP_X_CSRFTOKEN by default, but you can customize it using the CSRF_HEADER_NAME setting.\n """"""\n\n <script type=""text/javascript"">\n \n // using jQuery\n function getCookie(name) {\n var cookieValue = null;\n if (document.cookie && document.cookie !== '') {\n var cookies = document.cookie.split(';');\n for (var i = 0; i < cookies.length; i++) {\n var cookie = jQuery.trim(cookies[i]);\n // Does this cookie string begin with the name we want?\n if (cookie.substring(0, name.length + 1) === (name + '=')) {\n cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n break;\n }\n }\n }\n return cookieValue;\n }\n\n $.ajaxSetup({\n beforeSend: function(xhr, settings) {\n if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {\n xhr.setRequestHeader(""XCSRFToken"", getCookie('csrftoken'));\n }\n }\n });\n </script>\n\n //Using CSRF in Jinja Templates\n <form action="""" method=""post"">{{ csrf_input }}"
Give me some sample code of Logout function in django ?,"Logout function\n\n\n Example:\n\n\n """"""\n This way, the logout functionality will revoke the complete session:\n """"""\n \n from django.contrib.auth import logout\n\n def logout_view(request): \n //Logging logout\n log.info('Logout Successful : {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n logout(request)\n //Redirect to a success page.\n return redirect('login')\n\n """"""\n Django has inbuilt logout functionality\n """"""\n\n //Adding urls.py \n from django.conf.urls import url\n from django.conf import settings\n from django.contrib.auth.views import logout\n\n urlpatterns = [\n url(r'^logout/$', logout, {'next_page': settings.LOGOUT_REDIRECT_URL}, name='logout')\n ]\n\n //Add URI in Settings.py\n LOGOUT_REDIRECT_URL = '/login'\n"
Give me some sample code of White listing in django ?,"Whitelisting\n\n\n Example:\n\n\n """"""\n First we create a function which checks the allowed patterns:\n whitelisting(""value1,value2,value3"" , input)\n Whitelisting is checking if a value is identically the same as the whitelist we created. Please rewrite the below part to reflect this.\n """"""\n\n def whitelisting(allowed, input):\n result = allowed.split(',')\n flag = False\n for x in result:\n if x == match:\n //If the value is valid we send a log to the logging file\n setLog(session[""id""], ""Good whitelist validation"", ""SUCCESS"", datetime.utcnow(),""HIGH"")\n flag = True\n //Whenever there was a valid match we return true\n return True\n \n //Check for a false in order to send error to log and counter the user\n if flag == False:\n //If the whitelist is bad log the validation \n setLog(session[""id""], ""Bad whitelist validation"", ""FAIL"", datetime.utcnow(), ""HIGH"") \n counter.increment()\n return False \n"
Give me some sample code of Session hijacking and fixation in django ?,"Session hijacking and fixation\n\n\n Example:\n\n \n """"""\n Session hijacking and Session fixation are attempts to gain access to another user. \n We Should never put session IDS in the URL, use SSL and secure connection and HTTP only\n Cookies.\n\n We should regenerate a SESSION ID when someone logs in. But Django does regenerating \n Session ID automatically. \n\n First we implement the strict transport security header, this is in order to prevent\n users from accessing your application over an unprotected connection.\n """"""\n\n //Example of the strict transport security header:\n response['StrictTransportSecurity'] = ""maxage=31536000""\n //If all present and future subdomains will be HTTPS:\n response['StrictTransportSecurity'] = ""maxage=31536000; includeSubDomains"" \n\n """"""\n Recommended: If the site owner would like their domain to be included in the HSTS preload\n list maintained by Chrome (and used by Firefox and Safari), then use:\n """"""\n\n response['StrictTransportSecurity'] = ""maxage=31536000; includeSubDomains; preload"" \n\n """"""\n The `preload` flag indicates the site owner's consent to have their domain preloaded.\n The site owner still needs to then go and submit the domain to the list. the preload list\n enforces the browser to always present your application on HTTPS even on the first time\n the user hits your application\n\n Then we set the httpOnly flag in settings.py\n (see ""HttpOnly"" in the code examples for more details about implementation)\n """"""\n  \n SESSION_COOKIE_HTTPONLY = True\n\n """"""\n Then we set the flag for session timeout in settings.py\n (see ""Timeout"" in the code examples for more details about implementation)\n """"""\n  \n SESSION_COOKIE_AGE = 60000 \n\n """"""\n Then we set the session secure flag in settings.py\n (see ""Secure flag"" in the code examples for more details about implementation)\n """"""\n \n SESSION_COOKIE_SECURE = True"
Give me some sample code of Random password token generation in django ?,"Random password/token generation\n\n\n Example:\n\n\n """"""\n When needing to generate random numbers, always use proven methods \n instead of writing your own.\n """"""\n \n //Generate a strong security key\n app.secret_key = os.urandom(32)\n\n //A random string for generating WTF CSRF token\n app.config['WTF_CSRF_SECRET_KEY'] = base64.b64encode(rand.bytes(128))\n \n"
Give me some sample code of Directory path traversal in django ?,"Directory/path traversal\n\n\n Example:\n\n """"""\n Define the whitelist pattern and validation type and input parameter, countLevel like:\n getFiles(""images,css,js"", ""alphanumeric"", foldername)\n """"""\n\n def getFiles(request, whiteListPattern, validationType, inputParameter):\n\n continue = True\n \n """"""\n First, we want to filter the filenames for expected values. For this example we use only az/09 alphanumeric\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n \n if inputValidation(inputParameter, validationType) == False:\n continue = False\n\n """"""\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n //Check for filename Whitelisting\n if whitelisting(whiteListPattern, inputParameter):\n continue = False\n\n if continue == True:\n  //Create Path\n  path = os.path.join(settings.MEDIA_ROOT, inputParameter) \n  images = []\n\n  //List all the URL\n  for f in os.listdir(path):\n  if f.endswith(""jpg"") or f.endswith(""png""):\n  images.append(""%s%s/%s"" % (settings.MEDIA_URL, inputParameter, f))\n \n  return render_to_response('gallery.html', {'images': images})\n else:\n return render_to_response('gallery.html', {'images': ''})  \n\n //gallery.html\n\n {% for image in images %}\n <img src='{{image}}' />\n {% endfor %}"
Give me some sample code of Input validation in django ?,"input validation\n\n\n Example:\n\n\n """"""\n This function is where you store all your input validation controls. \n It makes it easy to maintain whenever you want to apply changes for \n certain input validation roles and reduces the chance of mistakes in your regexes.\n """"""\n\n def isFile(str):\n //Check whether this Filename\n if re.match(""^[AZaz09.]*$"", str):\n return True\n else:\n return False\n\n def isAlphanumeric(str):\n match = re.findall(""^[azAZ09]+$"" , str)\n //Check for alphanumeric\n if match:\n return True\n else:\n return False\n\n def isAlpha(str):\n match = re.findall(""^[azAZ]+$"" , str)\n //Check for alpha\n if match:\n return True\n else:\n return False\n\n def isDigit(str):\n match = re.findall(""^[09]+$"" , str)\n //Check for isDigit\n if match:\n return True\n else:\n return False \n\n def isBool(str):\n  match = re.findall(""^(True|False)+$"" , str)\n if match:\n  return True\n  else:\n return False \n\n def inputValidation(input, type):\n  if type == alphanumeric:\n   //Set the audit log\n   log.debug('Boolean True: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   return isAlphanumeric(input)\n   elif type == numeric:\n   //Set the audit log\n   log.debug('Boolean True: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   return isDigit(input)\n   elif type == alpha:\n   //Set the audit log\n   log.debug('Boolean True: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   return isAlpha(input)\n   elif type == bool:\n   //Set the audit log\n   log.debug('Boolean True: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   return isBool(input)\n   elif type == filename:\n   //Set the audit log\n   log.debug('Boolean True: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   return isFile(input)\n   else:\n   //Set the audit log\n   log.info('Boolean False: {user} via ip: {ip}'.format(\n    user=user,\n    ip=ip\n   ))\n   //Increment the counter\n   counter.increment(1)\n   return False\n\n"
Give me some sample code of System commands in django ?,"System commands\n\n\n Example:\n\n\n """"""\n Define the whitelist pattern and validation type and input parameter like:\n getFiles(""value1,value2,etc"", ""alphanumeric"", filename)\n """"""\n\n def command(whiteListPattern, validationType, inputParameter){\n\n continue = True\n\n """"""\n Whenever a system command is finished, you should properly sanitize and escape this user input.\n System command functions examples are: system(), eval(), exec()\n\n First, we want to filter the filenames for expected values. For this example we use only az/09\n Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n for more information about validation see ""input validations"" in the code examples:\n """"""\n\n if inputValidation(inputParameter, validationType) == False:\n continue = False\n\n """"""\n Second, we want to whitelist the filenames for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n """"""\n\n if whitelisting(whiteListPattern, inputParameter) == False:\n continue = False\n\n //If all went good we include the filename\n if continue == True:\n //Even though there is match we still escape the shelx.quote():\n command = './configure {}' .format(quote(inputParameter))\n os.system(command)\n else:\n return False"
Give me some sample code of Session cookies HttpOnly in django ?,"Session cookies HttpOnly\n\n\n Example:\n\n\n """"""\n Javascript cannot set or read cookie's value if the HTTPOnly attribute is set on cookie.\n It makes attacker client side attacks such as Cross Site scripting harder to exploit.\n Attacker will not be able to steal the user's cookies.\n\n For using sessions edit the middleware and make sure it contains 'django.contrib.sessions.middleware.SessionMiddleware'\n\n For adding HTTPONLY Cookies, we have to add the line in settings.py\n SESSION_COOKIE_HTTPONLY = True\n\n For adding Session Cookie age, we have to add the line in settings.py\n SESSION_COOKIE_AGE = 60000\n\n For setting session cookie domain, we have to add the line in settings.py\n SESSION_COOKIE_DOMAIN = 'demo.yourdomain.com'\n\n For setting session cookie name, we have to add the line in settings.py\n SESSION_COOKIE_NAME = 'demo' \n \n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_PATH = '/'\n\n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_SECURE = True\n """"""\n\n //For adding session cookie\n request.session['test'] = 'test'"
Give me some sample code of SQL query in django ?,"SQL query\n\n\n Example:\n\n\n """"""\n Django supports almost most of the database backend. \n\n A model contains the essential fields and behaviors of the data you’re storing.\n Each model maps to a single database table.\n\n CREATE TABLE myapp_person (\n  ""id"" serial NOT NULL PRIMARY KEY,\n  ""first_name"" varchar(30) NOT NULL,\n  ""last_name"" varchar(30) NOT NULL\n );\n\n Model for the above SQL query\n """"""\n\n from django.db import models\n\n class Publisher(models.Model):\n\n  name = models.CharField(max_length=30)\n  address = models.CharField(max_length=50)\n\n def __str__(self):\n\n  return ' '.join([\n  self.name,\n  self.address,\n  ])\n\n //In order to add your model to django, you have to add the app in INSTALLED_APP\n INSTALLED_APPS = [\n  //...\n  'myapp',\n  //...\n ]\n\n """"""\n After adding the application, in order to make the changes we need to make migrations\n and migrate For creating tables \n """"""\n\n $ python manage.py makemigrations\n $ python manage.py migrate\n //Needs to be added\n\n """"""\n Inserting data into the database create, add and commit\n """"""\n \n book = Publisher(name=p1, address=p2)\n book.save()\n\n """"""\n Delete entries from the table\n """"""\n \n instance = Publisher.objects.get(name=name)\n instance.delete()\n\n """"""\n Querying Records\n """"""\n \n //Retrieve the user with username\n instance = Publisher.objects.filter(name=name).all()\n instance.address\n\n """"""\n SQL raw string approach\n """"""\n \n if inputValidation(inputParameter, 'alphanumeric') == False:\n people = Person.objects.raw('SELECT * FROM myapp_person WHERE last_name = %s', [inputParameter])\n \n for p in people:\n print(""%s is %s."" % (p.first_name, p.age))"
Give me some sample code of Open forwards & redirects in django ?,"Open forwards & redirects\n\n\n Example:\n\n\n """"""\n When using forwards & redirects you should make sure the URL is being explicitly\n declared in the code and cannot be manipulated by an attacker like example.com?page=dashboard :\n """"""\n\n redirect('dashboard')\n\n """"""\n Generally you should avoid getting input into the redirect which could contain\n userinput by any means. if for any reason this may not be feasible than you\n should make a whitelist input validation for the redirect like so:\n\n Example : \n If the whitelisting list is home, upload and redirectParam is home \n\n redirectParam = home\n redirecting(""home,upload"", redirectParam, ""3"")\n """"""\n\n def redirecting(whitelisting, input, count):\n \n """"""\n We want to whitelist the paged for expected values, in this example they are,\n page1,page2 etc.. for more information about whitelisting see ""whitelisting"" \n in the code examples:\n """"""\n\n if whitelisting(whitelisting, input, count) == True:\n //Redirect the Input if whitelisting is correct\n redirect(input)"
Give me some sample code of X Path query in django ?,"Xpath query\n\n\n Example:\n\n \n """"""\n Define the allowed characters and input parameter and count level for the\n user lockout like:\n controller(""<'>&"", $_GET['filename'], ""3"")\n \n In order to prevent xpath injections we have to treat these query's similar as \n to the sql query's. \n """"""\n \n def controller(allowed, input, count):\n \n """"""\n First we build our encoding method, see ""input validation"" code example for\n more detailed information about encoding and escaping.\n """"""\n \n return = encoder(allowed, input, count)\n\n //If the encoder came back false we do not process the function!\n if return != False:\n\n //Parse the register.xml\n root = etree.parse(""register.xml"")\n //Extract the id from the XML using XPath\n find = etree.XPath('/Employees/Employee[ID=' + return + ']')\n\n for x in find(root):\n print x.text\n"
Give me some sample code of Anti caching headers in django ?,"Anticaching headers\n\n\n Example:\n\n \n """"""\n In order to set the AntiCaching header you'll have to your application head in order to prevent the browser from caching\n\n For adding AntiCaching header in every page we have to add a middleware\n\n Make a middleware in yourapp/middleware.py\n """"""\n\n class MyMiddleware:\n\n  def __init__(self, get_response):\n  self.get_response = get_response\n\n  def __call__(self, request):\n  response = self.get_response(request)\n\n  response[""CacheControl""] = ""nostore, nocache, mustrevalidate"" HTTP/1.1\n response[""CacheControl""] = ""postcheck=0, precheck=0, false""\n response[""Pragma""] = ""nocache"" HTTP/1.0\n  \n  return response\n  \n  //For adding middleware in the project, add in yourproject/settings.py\n  MIDDLEWARE = [\n  ...,\n  'yourapp.middleware.MyMiddleware',\n  ...,\n ] \n\n """"""\n For adding in the individual response page using render_to_response\n """"""\n response = render_to_response(""template.html"", {})\n response[""CacheControl""] = ""nostore, nocache, mustrevalidate"" HTTP/1.1\n response[""CacheControl""] = ""postcheck=0, precheck=0, false""\n response[""Pragma""] = ""nocache"" HTTP/1.0\n\n return response\n \n """"""\n For adding in the individual response page using render\n """"""\n\n response = render(request, ""template.html"", {})\n response[""CacheControl""] = ""nostore, nocache, mustrevalidate"" HTTP/1.1\n response[""CacheControl""] = ""postcheck=0, precheck=0, false""\n response[""Pragma""] = ""nocache"" HTTP/1.0\n \n return response"
Give me some sample code of Secure Session Cookies in django ?,"Secure Session Cookies\n\n\n Example:\n\n \n """"""\n If you use SLL you can also make your cookies secure (encrypted) to \n avoid ""maninthemiddle"" cookies reading with\n\n For using sessions edit the middleware and make sure it contains 'django.contrib.sessions.middleware.SessionMiddleware'\n\n For adding HTTPONLY Cookies, we have to add the line in settings.py\n SESSION_COOKIE_HTTPONLY = True\n\n For adding Session Cookie age, we have to add the line in settings.py\n SESSION_COOKIE_AGE = 60000\n\n For setting session cookie domain, we have to add the line in settings.py\n SESSION_COOKIE_DOMAIN = 'demo.yourdomain.com'\n\n For setting session cookie name, we have to add the line in settings.py\n SESSION_COOKIE_NAME = 'demo' \n \n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_PATH = '/'\n\n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_SECURE = True\n """"""\n\n //For adding session cookie\n request.session['test'] = 'test'"
Give me some sample code of Crossdomain XML  in django ?,"Crossdomain XML\n\n\n Example:\n\n \n //A bad example of a Crossdomain XML would be:\n\n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n //Because it allows access from all other domains.\n\n //Instead of this approach you might want to use the following restrictions.\n //Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>\n"
Give me some sample code of Password forget and disallow old passwords in django ?,"Password forget & Disallow old passwords\n\n\n Example:\n\n\n """"""\n Django has inbuilt feature of password reset. We just have to mentions the URL routes and\n templates.\n """"""\n\n //We need to add django.contrib.auth in INSTALLED_APPS\n INSTALLED_APPS = [\n ...\n 'django.contrib.auth',\n ]\n\n //Add URL routes for forget password\n from django.contrib.auth import views as auth_views\n\n urlpatterns = [\n ...\n url(r'^password_reset/$', auth_views.password_reset, {'template_name': 'polls/password_reset_form.html'} , name='password_reset'),\n url(r'^password_reset/done/$', auth_views.password_reset_done, {'template_name': 'polls/password_reset_done.html'}, name='password_reset_done'),\n url(r'^reset/(?P<uidb64>[09AZaz_\]+)/(?P<token>[09AZaz]{1,13}[09AZaz]{1,20})/$',\n auth_views.password_reset_confirm, {'template_name': 'polls/password_reset_confirm.html'} , name='password_reset_confirm'),\n url(r'^reset/done/$', auth_views.password_reset_complete, {'template_name': 'polls/password_reset_complete.html'} , name='password_reset_complete'), \n ]\n\n //Template for password_reset_form.html\n \n {% extends 'base.html' %}\n {% block content %}\n <h3>Forgot password</h3>\n <form method=""post"">\n {% csrf_token %}\n {{ form.as_p }}\n <button type=""submit"">Submit</button>\n </form>\n {% endblock %}\n\n //Template for password_reset_subject.txt\n Password reset for Website\n //Template for password_reset_email.html\n {% autoescape %}\n To initiate the password reset process for your {{ user.get_username }} TestSite Account,\n click the link below:\n\n {{ protocol }}://{{ domain }},{% url 'password_reset_confirm' uidb64=uid token=token %}\n If clicking the link above doesn't work, please copy and paste the URL in a new browser\n window instead.\n\n Sincerely,\n The TestSite Team\n {% endautoescape %}\n \n //Template for password password_reset_done.html\n {% extends 'base.html' %}\n {% block content %}\n <p>\n We've emailed you instructions for setting your password, if an account exists with the email you entered.\n You should receive them shortly.\n </p>\n <p>\n If you don't receive an email, please make sure you've entered the address you registered with,\n and check your spam folder.\n </p>\n {% endblock %}\n\n //Template for password_reset_confirm.html\n {% extends 'base.html' %}\n {% block content %}\n {% if validlink %}\n <h3>Change password</h3>\n <form method=""post"">\n {% csrf_token %}\n {{ form.as_p }}\n <button type=""submit"">Change password</button>\n </form>\n {% else %}\n <p>\n The password reset link was invalid, possibly because it has already been used.\n Please request a new password reset.\n </p>\n {% endif %}\n {% endblock %}\n\n //Template for password_reset_complete.html\n {% extends 'base.html' %}\n {% block content %}\n <p>\n Your password has been set. You may go ahead and <a href=""{% url 'signin' %}"">sign in</a> now.\n </p>\n {% endblock %}\n\n //Setting Up SMTP Email Backend in settings.py\n EMAIL_HOST = 'smtp.sendgrid.net'\n EMAIL_PORT = 587\n EMAIL_HOST_USER = 'test'\n EMAIL_HOST_PASSWORD = 'password'\n EMAIL_USE_TLS = True\n DEFAULT_FROM_EMAIL = 'Test <noreply@example.com>'\n"
Give me some sample code of XML External entities in django ?,"XML External entities\n\n\n Example:\n\n \n """"""\n Django’s serialization framework provides a mechanism for “translating” Django models into other formats. By which we can avoid XXE while using XML. \n \n Models can be easily translated to other formats such as XML, Json, YAML\n """"""\n\n //Serialization of SomeModel defined in Models.py\n from django.core import serializers \n data = serializers.serialize(""xml"", SomeModel.objects.all())\n\n //Save serialized data to file file.xml \n XMLSerializer = serializers.get_serializer(""xml"")\n xml_serializer = XMLSerializer()\n with open(""file.xml"", ""w"") as out:\n xml_serializer.serialize(Question.objects.all(), stream=out)\n data = xml_serializer.getvalue()\n\n //Deserialize the XML\n for obj in serializers.deserialize(""xml"", data):\n //Accessing object\n obj.object\n\n\n \n\n\n\n\n\n\n"
Give me some sample code of Anti clickjacking headers in django ?,"Anti clickjacking headers\n\n\n Example:\n\n\n """""" \n One way to defend against clickjacking is to include a ""framebreaker"" script in each\n page that should not be framed. The following methodology will prevent a webpage from\n being framed even in legacy browsers, that do not support the XFrameOptionsHeader.\n In the document HEAD element, add the following:\n First apply an ID to the style element itself:\n  """"""\n\n <style id=""antiClickjack"">body{display:none !important;}</style>\n //And then delete that style by its ID immediately after in the script:\n\n <script type=""text/javascript"">\n  if (self === top) {\n  var antiClickjack = document.getElementById(""antiClickjack"");\n  antiClickjack.parentNode.removeChild(antiClickjack);\n  } else {\n  top.location = self.location;\n  }\n </script>\n\n """"""\n To set the same XFrameOptions value for all responses in your site, put 'django.middleware.clickjacking.XFrameOptionsMiddleware' to MIDDLEWARE:\n\n MIDDLEWARE = [\n ...\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n ...\n ]\n\n Middleware will be enabled by default while starting the project.\n By default the XFrameOptions header is set to SAMEORIGIN \n """"""\n\n //If we want to set the X_FRAME_OPTIONS to DENY\n //If you want DENY instead, set the X_FRAME_OPTIONS setting\n\n X_FRAME_OPTIONS = 'DENY'\n"
Give me some sample code of Debug enabling in django ?,"Debug Enabling\n\n\n Example:\n\n\n """"""\n Debug mode makes it a major security risk and therefore it must never be used on production machines. Django will display a detailed traceback with more details about the application such \n as Django settings\n """"""\n\n //The default settings.py file created by djangoadmin startproject sets DEBUG = True\n //It should be set to False in production \n DEBUG = False"
Give me some sample code of Login functionality in django ?,"Login functionality\n\n\n Example:\n\n\n """"""\n For privilege based authentication we need an extra table in your database in order to write the users privileges to.\n\n Django has inbuilt users table \n\n TABLE users\n \n |ID|password|last_login|is_superuser|first_name|last_name|email|is_staff|is_active|date_joined|username |\n \n |1 |pbkdf2_s|20170831|  0 | ram | mohan |ra@..| 0 | 1 |20170831.| ram12 |\n  \n |2 |pbkdf2_s|20170829|  0  | james | mathew |j@g..| 1 | 1 |20170830.| mathew |\n \n |3 |pbkdf2_s|20170830|  1  | admin | admin |adm@.| 1 | 1 |20170829.| admin |\n \n\n\n Now instead of using roles in sessions we rather want to assign privileges to users\n by means of a DatabaseBased Authentication system.\n Now we can easily assign a user certain privileges for him to access.\n See ""Privilege based authentication"" code example for more information:\n \n Django authentication in default has inbuilt Give me some sample code of most part of the authentication\n such as login, logout, password reset\n """"""\n \n //Create a login Template using form in django\n //File location registration/login.html\n\n {% extends 'base.html' %}\n {% block title %}Login{% endblock %}\n {% block content %}\n <h2>Login</h2>\n <form method=""post"">\n {% csrf_token %}\n {{ form.as_p }}\n <button type=""submit"">Login</button>\n </form>\n {% endblock %}\n\n //First we need to Configure the URL routes\n //We need to import django.contrib.auth.views and add URL route for login and logout views \n\n from django.conf.urls import url\n from django.contrib.auth import views as auth_views\n\n urlpatterns = [\n url(r'^login/$', auth_views.login, {'template_name': 'core/login.html'} ,name='login'),\n url(r'^logout/$', auth_views.logout, name='logout'),\n ]\n \n //In settings.py, we can set the location where django will redirect after authentication\n LOGIN_REDIRECT_URL = 'home'\n\n """"""\n There is no need to write login view again, Django has inbuilt view for login.\n Proper input validation is also done in Django auth_view.login takes care for security.\n But we need to implement a proper logging system for logouts, logins, retries\n """"""\n\n //Logging is also a inbuilt feature in django, only we need to configure it\n //Add logging system in Settings.py which logs app wise\n\n LOGGING = {\n 'version': 1,\n 'disable_existing_loggers': False,\n 'handlers': {\n 'file': {\n 'level': 'DEBUG',\n 'class': 'logging.FileHandler',\n 'filename': 'debug.log',\n },\n 'applogfile': {\n 'level':'DEBUG',\n 'class':'logging.handlers.RotatingFileHandler',\n\n //Specify the logging file name\n \n 'filename': os.path.join(DJANGO_ROOT, 'polls.log'),\n 'maxBytes': 1024*1024*15, 15MB\n 'backupCount': 10,\n },\n },\n 'loggers': {\n 'django': {\n 'handlers': ['file'],\n 'level': 'DEBUG',\n 'propagate': True,\n },\n 'polls': {\n 'handlers': ['applogfile',],\n 'level': 'DEBUG',\n },\n },\n }\n\n //Add view for logging, logout, wrong logins in view.py\n\n import logging\n from django.contrib.auth.signals import user_logged_in, user_logged_out, user_login_failed\n from django.dispatch import receiver\n\n //Create your views for logging\n log = logging.getLogger(__name__)\n\n @receiver(user_logged_in)\n def user_logged_in_callback(sender, request, user, **kwargs):\n\n //Track the IP\n ip = request.META.get('REMOTE_ADDR')\n\n //Logging the details \n log.debug('login user: {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n\n @receiver(user_logged_out)\n def user_logged_out_callback(sender, request, user, **kwargs):\n\n ip = request.META.get('REMOTE_ADDR')\n\n log.debug('logout user: {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n\n @receiver(user_login_failed)\n def user_login_failed_callback(sender, credentials, **kwargs):\n\n log.warning('logout failed for: {credentials}'.format(\n credentials=credentials,\n ))"
Give me some sample code of User registration SQL truncation in django ?,"User registration / Sql truncation prevention\n\n\n Example:\n\n """"""\n In order to prevent Column truncation sql injection Solution we have to make sure the\n applications structural logic does not mismatches with the database structural logic.\n To achieve this imagine the follow example of a database structure of a users table\n\n TABLE users\n \n |  *Name* |  *Type* | *Extra* |\n \n | ID  | Int(11) | AUTO_INCREMENT |\n \n | Username   | char(21) | |\n \n | Password | Varchar(255) | |\n \n | last_login | date | |\n \n | is_superuser | int(1) | |\n \n | first_name | varchar(30) | |\n \n | last_name | varchar(30) | |\n \n | email | varchar(30) | |\n \n | is_staff | int(1) | |\n \n | is_active | int(1) | |\n \n | date_joined | date | |\n \n """"""\n\n //For URL routes for User Registration\n\n from django.conf.urls import url\n from mysite.core import views as core_views\n\n urlpatterns = [\n ...\n url(r'^signup/$', core_views.signup, name='signup'),\n ]\n\n //View for signup\n from django.contrib.auth import login, authenticate\n from django.shortcuts import render, redirect\n\n from .forms import SignUpForm\n\n def signup(request):\n if request.method == 'POST':\n form = SignUpForm(request.POST)\n if form.is_valid():\n form.save()\n username = form.cleaned_data.get('username')\n raw_password = form.cleaned_data.get('password1')\n user = authenticate(username=username, password=raw_password)\n login(request, user)\n return redirect('index')\n else:\n form = SignUpForm()\n return render(request, 'polls/signup.html', {'form': form})\n\n //Template for signup.html\n {% block content %}\n <h2>Sign up</h2>\n <form method=""post"">\n {% csrf_token %}\n {% for field in form %}\n <p>\n {{ field.label_tag }}<br>\n {{ field }}\n {% if field.help_text %}\n <small style=""color: grey"">{{ field.help_text }}</small>\n {% endif %}\n {% for error in field.errors %}\n <p style=""color: red"">{{ error }}</p>\n {% endfor %}\n </p>\n {% endfor %}\n <button type=""submit"">Sign up</button>\n </form>\n {% endblock %}\n\n //forms.py for extra fields\n class SignUpForm(UserCreationForm):\n first_name = forms.CharField(max_length=30, required=False, help_text='Optional.')\n last_name = forms.CharField(max_length=30, required=False, help_text='Optional.')\n email = forms.EmailField(max_length=254, help_text='Required. Inform a valid email address.')\n\n class Meta:\n model = User\n fields = ('username', 'first_name', 'last_name', 'email', 'password1', 'password2', )"
Give me some sample code of Encoder in django ?,"Character encoding\n\n\n Example:\n\n """"""\n This is the encoder class for whenever you have to allow certain\n possibly dangerous characters into your Give me some sample code of i.e names such as O'Reilly\n """"""\n\n def encoder(allowed, input, count):\n  \n  """"""\n  As you can see you can specify allowed characters in your function\n  """"""\n  \n  flag = True\n  match = re.findall(""/^[azAZ09 "" + allowed+""]+$/"", input)\n\n  if match:\n\n  """"""\n  Set a log for whenever there is unexpected userinput with a threat level\n  See ""audit logs"" code example for more information:\n  """"""\n\n  setLog(session['id'], ""Bad userinputs"", ""FAIL"", datetime.utcnow(), ""HIGH"")\n  \n  """"""\n  Set counter if counter hits 3 the users session must terminated\n  After 3 session terminations the user account must be blocked\n  See ""audit logs"" code example for more information:\n  """"""\n  \n  counter.increment()\n  flag = False\n\n  Remove Dangerous Characters\n  wordDict = {'&': '&', '<' : '<', '>' : '>' , '""' : '""', ""'"" : '&x27;', '/' : &x2F;, '\' : '\\'}\n\n  for key in wordDict:\n   input = input.replace(key, wordDict[key])\n\n  return input\n"
Give me some sample code of Character encoding in django ?,"Character encoding\n\n\n Example:\n\n\n """"""\n This is the encoder class for whenever you have to allow certain\n possibly dangerous characters into your Give me some sample code of i.e names such as O'Reilly\n """"""\n\n def encoder(allowed, input, count):\n  \n  """"""\n  As you can see you can specify allowed characters in your function\n  """"""\n  \n  flag = True\n  match = re.findall(""/^[azAZ09 "" + allowed+""]+$/"", input)\n\n  if match:\n\n  """"""\n  Set a log for whenever there is unexpected userinput with a threat level\n  See ""audit logs"" code example for more information:\n  """"""\n\n  setLog(session['id'], ""Bad userinputs"", ""FAIL"", datetime.utcnow(), ""HIGH"")\n  \n  """"""\n  Set counter if counter hits 3 the users session must terminated\n  After 3 session terminations the user account must be blocked\n  See ""audit logs"" code example for more information:\n  """"""\n  \n  counter.increment()\n  flag = False\n  //Remove Dangerous Characters\n  wordDict = {'&': '&', '<' : '<', '>' : '>' , '""' : '""', ""'"" : '&x27;', '/' : &x2F;, '\' : '\\'}\n\n  for key in wordDict:\n   input = input.replace(key, wordDict[key])\n  return input\n"
Give me some sample code of Aggregate user controls in django ?,"Aggregate user controls\n\n\n Example:\n\n \n """"""\n In order to enforce Aggregate access control protection the best method would be to\n define your rules by means of a database structure rather than sessions or log's.\n This is due to the fact that if the user drops his session the rating would start\n al over again.\n\n\n TABLE userAggregate\n \n | id | user_id | AggregateControl |\n \n | 1 | Admin |  2322   |\n \n | 2 | User | 0 |\n \n | 3 | Guest | 125 |\n \n  \n """"""\n\n //Extend the existing User model by adding another model and linking it to the User model using //onetoone relation in models.py\n\n class userAggregate(models.Model):\n user = models.OneToOneField(User)\n AggregateControl = models.IntegerField(default=0)\n\n\n //countAccess in views.py\n\n import logging\n\n def countAccess(request, count):\n \n """"""\n Each time the user accesses the database we keep track of the number of times he\n connected. Whenever the user passes a reasonable number he should be rejected\n since he could be an attacker scraping your table contents and stealing company information\n You could a CRON job in your mysql system in order to clean the Aggregate column within certain timeframes\n """"""\n \n ip = get_client_ip(request)\n current_user = request.user\n log = logging.getLogger(__name__)\n\n //Add logging\n log.debug('User aggregate control updated: {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n\n registered_user = userAggregate.objects.get(pk=current_user.id)\n //We add the count to control variable for the update\n control = registered_user.AggregateControl + count\n //Check the aggregate\n if control > 5000:\n logger.warning('User aggregate control breach: {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n \n """"""\n Then we lock out the users account assuming it has been compromised by\n an attacker\n """"""\n \n access = 0\n current_user.is_active = access\n current_user.save()\n //we update the users table and count +1 tot the AggregateControl column\n registered_user.AggregateControl = control\n registered_user.save()"
Give me some sample code of Absolute timeout of a session in django ?,"Absolute time out of a session\n\n\n Example:\n\n\n """"""\n Whenever a session is started, absolute time out (lifetime) of a session should be set in seconds\n \n For using sessions edit the middleware and make sure it contains 'django.contrib.sessions.middleware.SessionMiddleware'\n\n For adding HTTPONLY Cookies, we have to add the line in settings.py\n SESSION_COOKIE_HTTPONLY = True\n\n For adding Session Cookie age, we have to add the line in settings.py\n SESSION_COOKIE_AGE = 60000\n\n For setting session cookie domain, we have to add the line in settings.py\n SESSION_COOKIE_DOMAIN = 'demo.yourdomain.com'\n\n For setting session cookie name, we have to add the line in settings.py\n SESSION_COOKIE_NAME = 'demo' \n \n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_PATH = '/'\n\n For setting session cookie path, we have to add the line in settings.py\n SESSION_COOKIE_SECURE = True\n """"""\n\n //For adding session cookie\n request.session['test'] = 'test'"
Give me some sample code of Password Storage(salting stretching hashing) in django ?,"Password storage(salting/stretching/hashing)\n\n\n Example:\n\n\n """"""\n Django provides a flexible password storage system and uses PBKDF2 by default.\n\n Password is of the format: \n <algorithm>$<iterations>$<salt>$<hash>\n """"""\n\n\n //For the encryption of passwords with salt\n from django.contrib.auth.hashers import make_password\n\n pwd = make_password('some_password')\n \n \n //Validate your password\n from django.contrib.auth.hashers import check_password\n\n check_password(password, pwd_hash)"
Give me some sample code of Sandboxing in django ?,"Sandboxing\n\n\n Example:\n\n\n <iframe sandbox=""value"">\n\n /*\n sandbox="""" Applies all restrictions\n allowforms Reenables form submission\n allowpointerlock Reenables APIs\n allowpopups Reenables popups\n allowsameorigin Allows the iframe content to be treated as being from the same origin\n allowscripts Reenables scripts\n allowtopnavigation Allows the iframe content to navigate its toplevel browsing context\n */\n </iframe>\n"
Give me some sample code of Identifier based authorization in django ?,"Identifierbased authorization\n\n\n Example:\n\n """"""\n Define the whitelist pattern and validation type and input parameter like:\n identity(""page1,page2"", ""alphanumeric"", page)\n """"""\n\n def identity(request, whiteListPattern, validationType, inputParameter):\n\n  continue = True\n\n  """"""\n  First, we want to filter the filenames for expected values. For this example we use only az/09\n  Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n  for more information about validation see ""input validations"" in the code examples:\n  """"""\n\n  if inputValidation(inputParameter, validationType, ""Invalid userinput"", ""HIGH"", countLevel) == False:\n continue = False\n\n  """"""\n  Second, we want to whitelist the filenames for expected values, in this example they are,\n  page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n  """"""\n\n  if whitelisting(whiteListPattern, inputParameter) == False:\n continue = False\n\n  """"""\n  Whenever you are checking whether a user is restricted to review certain data,\n  the access restrictions should be processed server side.\n  The userID could be stored inside a session variable on login, and should be used to\n  retrieve user data from the database:\n  """"""\n  \n if continue == True : \n\n  """"""\n  We count the number of connections towards the database,\n  See ""aggregate user controls"" code example for more information:\n  """"""\n\n countAccess(1)\n current_user = request.user\n data = Table.objects.filter(id=current_user.id, page=inputParameter).first()\n \n return data\n else:\n return False\n\n"
Give me some sample code of Charsets in django ?,"Charsets\n\n\n Example:\n\n\n """"""\n In order to set the ""Charsets"" header you'll have to add the following code to the head of your application, the following code could be used in your controller: For Example, text/html\n """"""\n\n //You add directly into the HTML markup\n <meta httpequiv=""ContentType"" content=""text/html; charset=utf8"">\n\n """"""\n In order to set the ""ContentType"" header and charset you'll have to add the following code\n to the head of your application\n\n For adding ContentType in every page we have to add a middleware\n Make a middleware in yourapp/middleware.py\n """"""\n\n class MyMiddleware:\n\n  def __init__(self, get_response):\n  self.get_response = get_response\n\n  def __call__(self, request):\n  response = self.get_response(request)\n  \n  //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n\n  return response\n  \n  //For adding middleware in the project, add in yourproject/settings.py\n  MIDDLEWARE = [\n  ...,\n  'yourapp.middleware.MyMiddleware',\n  ...,\n ] \n\n """"""\n For adding in the individual response page using render_to_response\n """"""\n\n response = render_to_response(""template.html"", {})\n //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n \n return response\n\n """"""\n For adding in the individual response page using render\n """"""\n\n response = render(request, ""template.html"", {}) \n //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n\n return response"
Give me some sample code of Content type headers in django ?,"Content type headers\n\n\n Example:\n\n\n """"""\n In order to set the ""ContentType"" header you'll have to add the following code to the head of your application\n\n For adding ContentType in every page we have to add a middleware\n Make a middleware in yourapp/middleware.py\n """"""\n\n class MyMiddleware:\n\n  def __init__(self, get_response):\n  self.get_response = get_response\n\n  def __call__(self, request):\n  response = self.get_response(request)\n  \n  //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n \n //For Json, the content type is application/json\n response['ContentType'] = 'application/json'\n  \n  return response\n  \n  //For adding middleware in the project, add in yourproject/settings.py\n  MIDDLEWARE = [\n  ...,\n  'yourapp.middleware.MyMiddleware',\n  ...,\n ] \n\n """"""\n For adding in the individual response page using render_to_response\n """"""\n\n response = render_to_response(""template.html"", {})\n\n //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n //For Json, the content type is application/json\n response['ContentType'] = 'application/json'\n \n return response\n\n """"""\n For adding in the individual response page using render\n """"""\n\n response = render(request, ""template.html"", {})\n \n //For HTML, the content type is text/html\n response['ContentType'] = 'text/html; charset=UTF8'\n //For Json, the content type is application/json\n response['ContentType'] = 'application/json'\n \n return response"
Give me some sample code of XML Injection Prevention in django ?,"XML Injection Prevention\n\n\n\n Example:\n\n\n """"""\n \n Whenever you are using XML parsers you must sanitize or encode al userinput before\n including this input into your XML file.\n\n Some methods like below, the Dom document already encodes the input before storing it\n into the XML. But beware, since this encoded input is still a threat whenever you are\n displaying the this data on screen as HTML Output. This encoded data should be escaped\n at all times before displaying.\n\n Whenever your XML function does not encode your data on the fly, you may want to write\n your own function for achieving this. See the code examples and search for ""Input encoding""\n for more detailed information.\n """"""\n\n\n //Let us take an easy example where we store your favorite number name into a XML file.\n from lxml import etree\n\n //Create Root Element employees\n\n root = etree.Element(""employees"")\n \n //Create child Element for employees\n employee = etree.SubElement(root, ""employee"")\n name = etree.SubElement(employee, ""name"")\n \n //Insert the text in name tag\n name.text = request.form['name']\n\n //Save it in xml file\n with open(""test.xml"", ""w"") as f:\n f.write(etree.tostring(root, pretty_print=True))\n\n """"""\n We will try to insert <script>alert(123);</script> into the XML file,\n Now after inserting the employee name into the XML file it will look like:\n\n\n <?xml version=""1.0""?>\n <employees>\n <employee>\n <name><script>alert(123);</script></name>\n </employee>\n </employees>\n\n As you can see de input has been encoded but still can trigger an XSS whenever we\n extract the data as shown in the example below:\n\n NOTE: if you ever want to include the xml files by means of userselected sources,\n be aware of the fact that an attacker could also include sources from external websites\n and even execute External entity injections on your applications. See the ""XSLT injection prevention""\n code example for more detailed information on how to implement this type of functionality since\n the same principle's apply to both functions.\n """"""\n \n //Read from a XML file\n x = etree.parse(""test.xml"")\n\n\n for element in x.iter(""name""):\n  //This example is vulnerable to XSS\n  print element.text\n\n  //This example is escaped\n  print escape(element.text)\n\n """"""\n We recommend to not rely solely on the encoding of the input by the Dom document.\n So before you insert userinput into the XML file you want to have it sanitized.\n See the ""Encoding"" and ""input validation"" code examples for more detailed information\n """"""\n\n \n"
Give me some sample code of File upload in django ?,"File upload\n\n\n Example:\n\n \n """"""\n In Django the file data is placed in request.FILES\n\n Forms should be always submitted using POST request\n\n It is mandatory for the HTML form to have enctype=""multipart/formdata"" otherwise the \n request.FILES will be empty\n\n Django have proper models to handle the uploaded files : FileField and ImageField, they \n have the reference the location where the file is stored\n """"""\n\n //set MEDIA_URL and MEDIA_ROOT in project's settings.py\n MEDIA_URL = '/media/'\n MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n\n //Add the urls.py file \n from django.conf import settings\n from django.conf.urls.static import static\n\n urlpatterns = [\n  //Project url patterns...\n ]\n\n //While development you may need to serve the user uploaded files\n if settings.DEBUG:\n  urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n\n\n """"""\n  File Upload with model Forms\n\n In model form approach we can store the data about the reference of the file, details such \n description when was it uploaded. It is more convenient to perform input validation, build\n absolute path and solve the issue of file name conflict.\n """"""\n\n //Create a Model Document to store the detail\n from django.db import models\n\n def user_directory_path(instance, filename):\n  //file will be uploaded to MEDIA_ROOT/user_<id>/<filename>\n  return 'user_{0}/{1}'.format(instance.user.id, filename)\n\n class Document(models.Model):\n  description = models.CharField(max_length=255, blank=True)\n  document = models.FileField(upload_to=user_directory_path, validators=[validate_file_extension])\n  uploaded_at = models.DateTimeField(auto_now_add=True)\n\n //Add validators.py for Input Validation\n import os\n from django.core.exceptions import ValidationError \n\n def validate_file_extension(value):\n //[0] returns path+filename\n  ext = os.path.splitext(value.name)[1] \n  \n //Adding valid extensions\n valid_extensions = ['.jpg', '.png']\n  \n if not ext.lower() in valid_extensions:\n //Adding logging for extension error\n log.error('Wrong Extension Uploaded: {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n\n  raise ValidationError(u'Unsupported file extension.')\n\n //Create a forms.py which will process the forms\n from django import forms\n from .models import Document\n\n class DocumentForm(forms.ModelForm):\n  class Meta:\n  model = Document\n  fields = ('description', 'document', ) \n\n //Template for upload.html \n {% block content %}\n  <form method=""post"" enctype=""multipart/formdata"">\n {% csrf_token %}\n {{ form.as_p }}\n <button type=""submit"">Upload</button>\n  </form>\n\n  <p><a href=""{% url 'home' %}"">Return to home</a></p>\n {% endblock %}\n\n\n //Create a view for upload functionality\n \n def model_form_upload(request):\n  if request.method == 'POST':\n  form = DocumentForm(request.POST, request.FILES)\n  \n //Check whether the form is valid\n if form.is_valid():\n //Save the form data\n  form.save()\n\n //Upload Successful\n log.info('Uploaded Successful : {user} via ip: {ip}'.format(\n user=user,\n ip=ip\n ))\n return redirect('home')\n  else:\n  form = DocumentForm()\n  return render(request, 'app/upload.html', {\n 'form': form\n  })"
Give me some sample code of Privilege based authentication in django ?,"Privilege based authentication\n\n\n Example:\n\n\n """"""\n For privilege based authentication we will use the table permissions.\n\n TABLE permissions\n \n | *Name* | *Type* | *Extra* |\n \n | ID | Int(11) | AUTO_INCREMENT |\n \n | content_type_id | Int(11) | |\n \n | codename | Varchar(255) | |\n \n | name | varchar(30) | |\n \n\n Permissions are associated with models, and define the operations that can be performed on a model instance by a user who has the permission . Django automatically gives add, change, and delete permissions to all models by default.\n """"""\n\n //Adding certain privileges to user\n //Selecting particular User and adding permission\n user = User.objects.filter(username='user1').first()\n user.user_permissions = [Permission.objects.get(codename='change_choice')]\n\n """"""\n Permissions can be checked in both templates and views.\n In templates, Current user's permission are checked in template variable {{ perms }}\n In Views, Permissions can be tested in function view using the permission_required decorator or in class based view we can use PermissionRequiredMixin\n """"""\n \n //In templates\n {% if perms.polls.change_choice %}\n <! Add appropriate code. >\n {% endif %}\n\n //In Views \n @permission_required('polls.change_choice')\n @permission_required('polls.can_edit')\n def my_view(request):\n ...\n\n //Permissionrequired for class based views\n from django.contrib.auth.mixins import PermissionRequiredMixin\n\n class MyView(PermissionRequiredMixin, View):\n permission_required = 'catalog.can_mark_returned'\n ..."
Give me some sample code of HTML Output in django ?,"HTML Output\n\n\n Example:\n\n\n """"""\n Whenever user input is displayed in the application, whether, as content or a parameter value\n submitted towards the url, all user input should be properly escaped to prevent XSS injections.\n \n Django has automatic HTML escaping, 5 characters are escaped : \n < is converted to <\n > is converted to >\n ' (single quote) is converted to &39;\n "" (double quote) is converted to ""\n & is converted to &\n """"""\n\n //If data = ""<b>""\n //Template to show HTML escaping\n This will be escaped: {{ data }}\n This will not be escaped: {{ data|safe }}\n\n //Output for HTML escaping\n This will be escaped: <b>\n This will not be escaped: <b>\n\n //For removing dangerous characters : \n wordDict = {'&': '&', '<' : '<', '>' : '>' , '""' : '""', ""'"" : '&x27;', '/' : &x2F;, '\' : '\\'}\n\n for key in wordDict:\n input = input.replace(key, wordDict[key])\n\n //For UNTRUSTED DATA in <a href=""/site/search?value=UNTRUSTED DATA"">clickme</a>\n //URL Encoding for defense\n\n import urllib\n input = urllib.quote_plus(input) \n\n """"""\n Security consists of different layers of protection, in order to guarantee the integrity\n of your application. This means that the value submitted from the user should\n already be sanitized before being submitted towards the database in order to prevent XSS.\n As an example, you are expecting only alphanumerical value here:\n """"""\n \n match = re.findall(""^[azAZ09]+$"", value)\n if match:\n return True\n else:\n raise Exception(""User supplied value not in the range "" + range)\n\n """"""\n This type of approach should be used whenever you are allowing userinput in\n your DOM like for example, let's say a user was allowed to upload an image and\n set an alt text. when you do not sanitize his input a possible attack string could be:\n """"""\n \n this is an image"" onload=""alert('XSS');""\n\n """"""\n whenever this string now is added to the users image this will be the outcome, leading\n to xss:\n """"""\n\n <img src=""http://image.com/image.jpg"" alt=""this is an image"" onload=""alert('XSS')"""" />\n\n """"""\n After this sanitation malicious code can no longer exist in the $_POST['value'] variable.\n\n Another possibility for attackers to execute an XSS injection, is to pass malicious code directly\n into the URL by means of a ""href"", e.g.:\n javascript:alert(document.cookie);\n or\n data:text/html;base64,base64xssinjection\n\n In the following scenario escaping with htmlspecialchars() is not sufficient to block the injection.\n By checking the URL to see if it starts with either http:// or https:// whenever a link has\n been submitted to the web application by a user.\n\n def before_request(url):\n if url.startswith('http://') or url.startswith('https://'):\n return True\n else:\n raise Exception(""Not a valid URL : "" + url)\n\n \n\n \n"
Give me some sample code of X XSS Protection Header in go ?,"XXSSProtection Header\n\n\n Example:\n\n const (\n  XSSProtectionHeader = ""XXSSProtection""\n  XSSProtectionValue = ""1; mode=block""\n )\n\n func ExampleHandler(w http.ResponseWriter, r *http.Request) {\n  // Add XXSSProtection header\n  w.Header().Add(XSProtectionHeader, XSSProtectionValue)\n\n  // Respond with request\n  w.Write([]byte(""Hello World.""))\n }\n"
Give me some sample code of X Content Type Options header in go ?,"XContentTypeOptions Header\n\n\n Example:\n\n const (\n  ContentTypeOptionsHeader = ""XContentTypeOptions""\n  ContentTypeOptionsValue = ""nosniff""\n )\n\n func ExampleHandler(w http.ResponseWriter, r *http.Request) {\n  // Add XContentTypeOptions header\n  w.Header().Add(ContentTypeOptionsHeader, ContentTypeOptionsValue)\n\n  // Respond with request\n  w.Write([]byte(""I have XContentTypeOptions header set to nosniff!""))\n }\n"
Give me some sample code of Anti Caching Headers in go ?,"Anticaching Headers\n\n\n Example:\n\n const (\n  CacheControlHeader = ""CacheControl""\n CacheControlValue = ""nocache, nostore, mustrevalidate""\n PragmaHeader = ""Pragma""\n PragmaValue = ""nocache""\n ExpiresHeader = ""Expires""\n ExpiresValue = ""0""\n )\n\n func ExampleHandler(w http.ResponseWriter, r *http.Request) {\n  // Add CacheControl header\n // HTTP 1.1\n  w.Header().Add(CacheControlHeader, CacheControlValue)\n\n // Add Pragma header\n // HTTP 1.0\n w.Header().Add(PragmaHeader, PragmaValue)\n\n // Add Expires header\n // Proxies\n w.Header().Add(ExpiresHeader, ExpiresValue)\n\n  // Respond with request\n  w.Write([]byte(""I have anticaching headers!""))\n }\n"
Give me some sample code of Anti Clickjacking Headers in go ?,"Anti Clickjacking Headers\n\n\n Example:\n\nThe preferred method to prevent against clickjacking is to use ""security headers"".\nThere are three options for setting the ""anticlickjacking"" headers in your application:\n\n const (\n XFrameOptionsHeader = ""XFrameOptions""\n XFrameOptionsDeny = ""DENY""\n XFrameOptionsSameOrigin = ""SAMEORIGIN""\n XFrameOptionsFromUri = ""FROMURI http://www.example.com""\n )\n\n func ExampleHandler(w http.ResponseWriter, r *http.Request) {\n\n // Prevent page from being displayed in an iframe\n   w.Header().Add(XFrameOptionsHeader, XFrameOptionsDeny)\n\n // Prevent page from being displayed in an iframe on other sites\n // w.Header().Add(XFrameOptionsHeader, XFrameOptionsSameOrigin)\n\n // Allow page at specified URI to display page in an iframe\n // NOTE: Limited support in modern browsers\n // w.Header().Add(XFrameOptionsHeader, XFrameOptionsFromUri)\n\n // Respond with request\n   w.Write([]byte(""I have security headers!""))\n }\n"
Give me some sample code of Content Type Headers in go ?,"ContentType Headers\n\n\n Example:\n\n const (\n  ContentTypeHeader = ""ContentType:text/html""\n  ContentTypeValue = ""charset=UTF8""\n )\n\n func ExampleHandler(w http.ResponseWriter, r *http.Request) {\n  // Add ContentType header\n  w.Header().Add(ContentTypeHeader, ContentTypeValue)\n\n  // Respond with request\n  w.Write([]byte(""I have a ContentType of text/html in UTF8!""))\n }\n"
Give me some sample code of X XSS Protection Header in ruby ?,"XXSSProtection header\n\n\n Example:\n\n\n // Ruby on Rails sets XXSSProtection header with ""1; mode=block"" option by default.\n // If in your case it doesn't, you can add the header manually.\n\n // Add the following code to APP_DIR/config/environments/production.rb\n\n config.action_dispatch.default_headers = {\n 'XXSSProtection' => '1; mode=block'\n }\n"
Give me some sample code of Enforce secure passwords in ruby ?,"Enforce secure passwords\n\n\n Example:\n\n\n // It is highly recommended to use Devise gem that handles authentication on your RoR app.\n // more info: https://github.com/plataformatec/devise\n // Then install Devise Security Extension gem (https://github.com/phatworx/devise_security_extension)\n // Follow the installing instructions mentioned on Github\n\n // Now it's time to configure the gem in APP_DIR/config/initializers/devise.rb\n // Uncomment and customize following lines of code\n\n // Configuration of the gem core\n config.password_length = 10..128\n\n // Configuration of the gem extenstion\n config.password_regex = /(?=.*\d)(?=.*[az])(?=.*[AZ])/ // at least one number, big letter and small letter\n config.password_archiving_count = 5\n config.deny_old_passwords = true\n\n // Now update your model\n // For example:\n class User < ApplicationRecord\n has_many :posts\n\n // add :secure_validatable. Remember not to use :secure_validatable with :validatable\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable, :secure_validatable\n end\n\n"
Give me some sample code of Re authentication in ruby ?,"Re authentication\n\n\n Example:\n\n\n // Whenever a user wants to change his credentials or do other important data exchanges such as\n // transferring money he should always be challenged to reauthenticate himself before\n // allowing them to perform these actions.\n\n // Enforcing reauthentication before changing the password is provided by default in Devise gem. All you have\n // To do is add such link in your view\n <%= link_to ""Change your password"", edit_user_registration_path %\n\n\n // Other action may require adding your before_action method in specific controller\n class SpecificController < ApplicationController\n before_action :re_entered_password?, only: [:edit] \n\n private\n def re_entered_password? \n if session[:reauthenticated_at] == nil or session[:reauthenticated_at] > 2.minute\n // Redirect to view that requires entering your password\n redirect_to action: => ""re_authenticate"" \n end\n end\n end\n\n // After successful authentication set \n session[:reauthenticated_at] = Time.now\n"
Give me some sample code of XSL injection prevention in ruby ?,"XSL Injection prevention\n\n\n Example:\n\n\n // In order to prevent XSL injections you must enforce strict policy's whenever the\n // files are loaded from a source controlled by an possible attacker.\n\n // Let's say for example that the user can choose from several XSL files on your application.\n\n // ABC.xsl arranges your employee names on alphabetical order\n // CBA.xsl does not care and just shows the input by order of your XML file.\n\n // Before we want to attach the XSL files to the style sheet we first want to\n // do validation on the request to make sure the included file was one of our own pre\n // defined files, example:\n // check_pattern(params[:xslfile], ""file1.xsl,file2.xsl,etc"")\n\n require 'nokogiri'\n\n // Include the classes of which you want to use objects from\n require_relative 'classes'\n\n class IncludeXSL\n def including(param, white_list)\n // check ""Whitelisting"" for method declaration\n if check_pattern(param, white_list)\n document = Nokogiri::XML(File.read('input.xml'))\n template = Nokogiri::XSLT(File.read('template.xslt'))\n\n transformed_document = template.transform(document)\n end\n end\n end\n"
Give me some sample code of Session cookies (domain) in ruby ?,"Session cookies (domain)\n\n\n Example:\n\n\n // Whenever a session is started, and you want to share it over different domains,\n // the domain value should be set to the specific domain:\n\n // Add ""domain: DOMAIN_NAME"" option to APP_DIR/config/initializers/session_store.rb\n Rails.application.config.session_store :cookie_store, key: 'SESSIONID', domain: ""DOMAIN_NAME"""
Give me some sample code of Directory listing in ruby ?,"Directory Listing\n\n\n Example:\n\n\n // Directory Listing is a server based feature not Ruby's based. If you are using\n // Apache and other Web Application Server (like popular Passenger), follow\n // this tutorial\n\n // To disable or prevent directory access, add following line in your .htaccess file. If\n // user points the browsers to a directory that does not have an index file, then a\n // ""403 Forbidden"" error will be displayed:\n\n // Add this line of code to your .htaccess file:\n Options Indexes"
Give me some sample code of RFD and file download injection prevention in ruby ?,"RFD and file download injection prevention\n\n\n Example:\n\n\n def get_files(input_parameter, pattern)\n validator = Validation.new\n\n // First, we want to filter the filenames for expected values. For this example we use only az/09\n // Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n // for more information about validation see ""input validations"" in the code examples:\n return false unless validator.alphanumeric?(input_parameter)\n\n // Second, we want to whitelist the filenames for expected values, in this example they are,\n // file1,file2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n // pass the pattern to the check pattern, for instance pattern = %w[file1 file2]\n return false unless check_pattern(input_parameter, pattern)\n\n // Set proper headers\n response.headers['CacheControl'] = 'nostore, nocache, mustrevalidate, maxage=0'\n response.headers['XContentTypeOptions'] = 'nosniff'\n response.headers['Pragma'] = 'nocache'\n\n // If all went good we can send file based on user's given name\n send_file input_parameter\n true\n end\n"
Give me some sample code of X Content Type Options header in ruby ?,"XContentTypeOptions header\n\n\n Example:\n\n\n // Ruby on Rails sets XContentTypeOptions header with ""nosniff"" option by default.\n // If in your case it doesn't, you can add the header manually.\n\n // Add the following code to APP_DIR/config/environments/production.rb\n\n config.action_dispatch.default_headers = {\n 'XContentTypeOptions' => 'nosniff'\n }\n"
Give me some sample code of Audit logs in ruby ?,"Audit Logs\n\n\n Example:\n\n\n // Logging is turned on in Ruby on Rails by default. Every request is logged that is nice but it may \n // cause security issues like information disclosure. If attacker gets access to web server, it's possible\n // to read all requests containing confidential data like logins, passwords, card numbers etc. That's why it\n // is recommended to define which values shouldn't be stored in logs.\n\n // Add following line of code to APP_DIR/config/initializers/filter_parameter_logging.rb in order to filter\n // confidential data being saved in logs.\n\n Rails.application.config.filter_parameters += [:confidential_parameter]"
Give me some sample code of CSRF Token in ruby ?,CSRF Token\n\n\n Example:\n\n \n // Handling CrossSite Request Forgery is as simple as adding following line of code into \n // your APP_DIR/controllers/application_controller.rb\n\n class ApplicationController < ActionController::Base\n protect_from_forgery with: :exception\n end\n\n // It's important to know that RoR is REST based framework and CSRF protection does not work on HTTP GET requests.
Give me some sample code of Logout function in ruby ?,"Logout function\n\n\n Example:\n\n\n // It is highly recommended to use Devise gem that handles authentication on your RoR app.\n // more info: https://github.com/plataformatec/devise\n\n // When all authentication is done by Devise gem the implement logout function is as simple as\n // adding the link into your base template. For my application this is \n // APP_DIR/views/layouts/application.html.haml\n\n %ul.nav.navbarnav.navbarright\n if user_signed_in?\n %li= link_to ""New Post"", new_post_path\n %li= link_to ""Sign out"", destroy_user_session_path, method: :delete // Logout function\n else\n %li= link_to ""Sign in"", new_user_session_path\n %li= link_to ""Sign up"", new_user_registration_path\n\n // Also, remember about authenticate in controllers before performing any action in specific controllers\n before_action :authenticate_user!, only: [Methods_here]"
Give me some sample code of Timeout a session in ruby ?,"Timeout a session\n\n\n Example:\n\n\n // Add ""expire_after: 1.hour option to APP_DIR/config/initializers/session_store.rb\n Rails.application.config.session_store :cookie_store, key: 'SESSIONID', secure: true, expire_after: 1.hour"
Give me some sample code of White listing in ruby ?,"White listing\n\n\n Example:\n\n \n def check_pattern(param, list = [])\n // List should be an array of allowed patterns\n // list = [""value1"", ""value2""]\n if list.include? param\n Rails.logger.info ""//{session.id} > Good whitelist validation""\n true\n else\n Rails.logger.warn ""//{session.id} > Bad whitelist validation""\n false\n end\n end\n"
Give me some sample code of Session hijacking and fixation in ruby ?,"Session hijacking and fixation\n\n\n Example:\n\n\n // In order to secure your session, you have to turn on SECURE and HTTPONLY cookies' flags\n // More info in: ""Session cookies HTTPOnly"" and ""Secure Session Cookies""\n\n // Turn on `force_ssl` in config/environments/production.rb\n Rails.application.configure do\n // redirects all HTTP to HTTPS and also adds secure flag to your cookies\n config.force_ssl = true\n\n config.ssl_options = {\n // HTTP Strict Transport Security configuration\n hsts: {\n // default\n expires: 180.days,\n\n // default if all present and future subdomains will be HTTPS\n subdomains: true,\n\n // Recommended: If the site owner would like their domain to be included in the HSTS preload list\n // defaults to false\n preload: true\n }\n }\n\n // more information can be found here: http://api.rubyonrails.org/classes/ActionDispatch/SSL.html\n end\n\n // After that add :trackable symbol to the devise configuration in users' model\n\n // For example:\n class User < ApplicationRecord\n has_many :posts\n\n // Be sure that :trackable is added\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable, :secure_validatable\n end\n\n // Now update controllers that need authenticated users to perform actions.\n class ContollerWithAuthenticatedUsers < ApplicationController\n before_action :authenticate_user!\n before_action :check_ip\n\n private\n // After this modification current users' IP address will be compared to\n // the last IP that was used to log in on the account. If they dont match \n // user will be warned. This check will be performed every single user action.\n def check_ip\n if current_user.last_sign_in_ip != request.remote_ip\n flash[:warning] = ""There are other active sessions on other IP addresses. "" +\n ""Your session could be hijacked. Press logout in order to authenticate again "" +\n ""for security reasons!""\n end\n end \n end\n\n"
Give me some sample code of Random password token generation in ruby ?,Random password token generation\n\n\n Example:\n\n\n // A good random password would be:\n password = SecureRandom.hex(32)\n\n // A good random number would be:\n number = SecureRandom.random_number\n\n //A good random bytes would be:\n bytes = SecureRandom.random_bytes(32)
Give me some sample code of Directory path traversal in ruby ?,"Directory/path traversal\n\n\n Example:\n\n \n def get_files(input_parameter, pattern)\n validator = Validation.new\n\n // First, we want to filter the filenames for expected values. For this example we use only az/09\n // Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n // for more information about validation see ""input validations"" in the code examples:\n return false unless validator.alphanumeric?(input_parameter)\n\n // Second, we want to whitelist the filenames for expected values, in this example they are,\n // page1,page2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n // pass the pattern to the check pattern, for instance pattern = %w[page1 page2]\n return false unless check_pattern(input_parameter, pattern)\n\n //If all went good we can send file based on user's given name\n send_file input_parameter\n true\n end\n"
Give me some sample code of Input validation in ruby ?,"Input validation\n\n\n Example:\n\n \n // This class is where you store all your input validation controls.\n // It makes it easy to maintain whenever you want to apply changes for\n // certain input validation roles and reduces the chance of mistakes in your regexes.\n\n class Validation\n\n // Application has to protect itself. Every bad input the counter will increment. If the counter\n // hits 3 user's session must be terminated. \n attr_reader :counter\n\n def initialize\n @counter = 0\n end\n\n def validation_failed\n @counter += 1\n\n // Every bad input validation has to be logged.\n Rails.logger.warn ""//{session.id} > Bad user input""\n\n if @counter >= 3\n // DO LOGOUT HERE\n end\n end\n\n def numeric?(input)\n unless input =~ /^[09]+$/\n self.validation_failed\n return false\n end\n\n return true \n end\n\n def alphanumeric?(input)\n unless input =~ /^[azAZ]+$/\n self.validation_failed\n return false\n end\n\n return true \n end\n end"
Give me some sample code of Enforce sequential step order shopping in ruby ?,"Enforce sequential step order \n\n\n Example:\n\n\n // Whenever an functionality consists out of following several steps to achieve some goal i.e,\n // ""User adds items to chart"", ""User enters shipping information"", ""User pays for goods"",\n // ""Items will be shipped."" You want to make sure the user can not skip the payment step in\n // order to receive his goods.\n\n class Product < ApplicationRecord\n end\n\n class Order < ApplicationRecord\n has_many :products, through: :products_orders\n\n belongs_to :customer\n belongs_to :payment\n end\n\n // As you can see above we have a very simplified database structure for your average\n // web shop. now we can walk through the different steps needed to enforce the user to take\n // all steps before payment.\n //\n // We wont cover the entire shopping cart functions since that would become a rather big\n // example so let's cover the basics of enforcing the sequential steps.\n //\n // Step1: would be, the user adding items to his cart.\n //\n // Step2: would be, the user adding products to checkout. Whenever he is done shopping\n // we'll change the state of the Order\n //\n // For managing the state we could use a Ruby gem that implements an interface\n // for a state machine, like Statesman (https://github.com/gocardless/statesman)\n // It even provides adapters for ActiveRecord models and can save the entire\n // state transition history for later audit.\n\n // First, we should create a state machine:\n class OrderStateMachine\n include Statesman::Machine\n\n state :pending, initial: true\n state :checking_out\n state :purchased\n state :cancelled\n\n transition from: :pending, to: [:checking_out, :cancelled]\n transition from: :checking_out, to: [:purchased, :cancelled]\n end\n\n // Then, we can link it to our ActiveRecord model:\n class Order < ApplicationRecord\n include Statesman::Adapters::ActiveRecordQueries\n\n has_many :order_transitions, autosave: false\n has_many :products, through: :products_orders\n\n belongs_to :customer\n belongs_to :payment\n\n // Optionally delegate some methods\n delegate :can_transition_to?, :transition_to!, :transition_to, :current_state,\n to: :state_machine\n\n def state_machine\n @state_machine ||= OrderStateMachine.new(self, transition_class: OrderTransition)\n end\n\n def self.transition_class\n OrderTransition\n end\n\n def self.initial_state\n :pending\n end\n private_class_method :initial_state\n end\n\n // Next, lets create an AR model to represent state transitions:\n class OrderTransition < ActiveRecord::Base\n include Statesman::Adapters::ActiveRecordTransition\n\n belongs_to :order, inverse_of: :order_transitions\n end\n\n // And lets put the following code into confing/initializers/statesman.rb\n // So that Statesman knows it should persist the state to DB\n Statesman.configure do\n storage_adapter(Statesman::Adapters::ActiveRecord)\n end\n\n // Now in your controllers you can use the following methods:\n // Machine//can_transition_to?(state): true|false\n // Machine//transition_to(state): true|false\n // Machine//transition_to!(state): true|Statesman::TransitionFailedError|Statesman::GuardFailedError\n order = Order.create!\n\n order.current_state\n // => pending\n\n order.can_transition_to?(:purchased)\n // => false\n\n order.transition_to(:purchased)\n // => false\n\n // order still in the pending state:\n order.current_state\n // => pending\n\n // You definitely should check out the gem's Github page (https://github.com/gocardless/statesman)\n // as it has a great README with a more broad example\n"
Give me some sample code of System commands in ruby ?,"System commands\n\n\n Example:\n\n\n // Define the whitelist pattern and validation type andz input parameter like:\n // get_files(""value1,value2,etc"", ""alphanumeric"", params['filename'], ""3"")\n class SystemCommands\n // Ruby implementation of PHP escapeshellcmd written by Prof. Edgar Gonzalez\n def escape_shell_command(cmd)\n cmd.gsub(/([""'//&;`|*?~<>^()\[\]{}$\\\x0A\xFF])/) { '' }\n end\n\n // Whenever a system command is finished, you should properly sanitize and escape this user input.\n // System command methods examples are: %x{command}, `command`, system(""command"")\n\n // First, we want to filter the filenames for expected values. For this example we use only az/09\n // Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n // for more information about validation see ""input validations"" in the code examples:\n def exec(param, validation_type, pattern)\n validator = Validation.new\n\n case validation_type\n when numeric\n return false unless validator.numeric?(command)\n when alphanumeric\n return false unless validator.alphanumeric?(command)\n else\n return false\n end\n\n return false unless check_pattern(param, pattern)\n\n // If all went good we include the filename\n // Even though there is a match we still escape the shellcommand:\n command = './configure ' + param\n escaped_command = self.escape_shell_command(command)\n\n // Only after validation do we put the shell command into the system() method:\n system(escaped_command)\n end\n end\n"
Give me some sample code of Session cookies HttpOnly in ruby ?,"Session cookies HTTPOnly\n\n\n Example:\n\n\n // Add ""httponly: true"" option to APP_DIR/config/initializers/session_store.rb\n Rails.application.config.session_store :cookie_store, key: 'SESSIONID', httponly: true"
Give me some sample code of SQL query in ruby ?,"SQL Query\n\n\n Example:\n\n \n // You should try to use Active Record's prepared methods to handle SQL Queries.\n // Example 1: Take client with id = 40 from the database\n client = Client.find(40)\n\n // Example 2: Take last 5 clients\n client = Client.last(5)\n\n // Example 3: Find client by first name\n client = Client.find_by first_name: ""Wojciech""\n\n // Example 4: Where conditions\n // With 1 parameter\n Client.where(""parameter = ?"", params[:parameter]) \n Client.where(""parameter1 = ? AND parameter2 = ?"", params[:parameter1], params[:parameter2])\n\n // !!!!!\n // Using SQL Queries like this Client.where(""param1 LIKE '%//{params[:param1]}%'"")\n // leads to SQL Injection attack. Never do that!\n // !!!!!\n\n\n // Example 5: Range conditions\n Client.where(created_at: (Time.now.midnight 1.day)..Time.now.midnight)\n\n // For more methods and examples check http://guides.rubyonrails.org/active_record_querying.html\n\n"
Give me some sample code of Open forwards & redirects in ruby ?,Open forwards & redirects\n\n\n Example:\n\n\n // When using forwards & redirects you should make sure the URL is being explicitly\n // declared in the code and cannot be manipulated by an attacker like:\n\n redirect_to params[:redirect]\n\n // Generally you should avoid getting input into the redirect which could contain\n // userinput by any means. if for any reason this may not be feasible than you\n // should make a whitelist input validation for the redirect\n\n def redirecting\n if params[:redirect] =~ %r{^https\:\/\/trustedsite.com\/.+$}\n redirect_to params[:redirect]\n end\n end
Give me some sample code of X Path query in ruby ?,"X Path query\n\n\n Example:\n\n\n require 'nokogiri'\n\n class XPathControl\n // Define the allowed characters and input parameter and count level for the\n // user lockout like:\n // call(params[:filename], ""<'>&"")\n\n def call(user, input_param, allowed_characters)\n encoder = Encoder.new\n encoded = encoder.encode(user, input_param, allowed_characters)\n\n if encoded\n doc = Nokogiri::XML(File.read('file.xml'))\n\n // Assuming that you used the encoder function also for adding users, it will now retrieve the\n // user O'reily from the query\n query_result = doc.xpath(""//lemonade[@supplier=\""//{doc}\""]/price"")\n end\n end\n end\n"
Give me some sample code of Anti caching headers in ruby ?,"Anti caching headers\n\n\n Example:\n\n \n // Add the following code to APP_DIR/config/environments/production.rb in order to prevent the browser from caching\n config.action_controller.perform_caching = false\n config.public_file_server.headers = {\n 'CacheControl' => 'nocache, nostore'\n }\n // Add the pragma header also for enforcing older browsers\n config.action_dispatch.default_headers = { \n 'Pragma' => 'nocache' \n } \n"
Give me some sample code of Secure Session Cookies in ruby ?,"Secure Session Cookies\n\n\n Example:\n\n \n // Add ""secure: true"" option to APP_DIR/config/initializers/session_store.rb\n Rails.application.config.session_store :cookie_store, key: 'SESSIONID', expire_after: 1.hour, secure: true"
Give me some sample code of Password forget and disallow old passwords in ruby ?,"Enforce secure passwords\n\n\n Example:\n\n\n // It is highly recommended to use Devise gem that handles authentication on your RoR app.\n // more info: https://github.com/plataformatec/devise\n // Then install Devise Security Extension gem (https://github.com/phatworx/devise_security_extension)\n // Follow the installing instructions mentioned on Github\n\n // After successful installation you should have created user's views and controllers\n\n // Firstly, configure the mail settings\n\n // APP_DIR/config/environments/production.rb\n config.action_mailer.delivery_method = :smtp\n config.action_mailer.smtp_settings = {\n :address => ""smtp.yoursite.com"",\n :port => 587,\n :user_name => ENV['email_username'], // it is not recommended to hardcode sensitive data\n :password => ENV['email_password'],\n :ssl => true,\n :enable_starttls_auto => true\n }\n\n // Now it's time to configure the gem in APP_DIR/config/initializers/devise.rb\n // Uncomment and customize following lines of code\n config.password_archiving_count = 5\n config.deny_old_passwords = true\n\n\n // Now update your model\n // For example:\n class User < ApplicationRecord\n has_many :posts\n\n // add :recoverable that allows user reset the password\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable, :secure_validatable\n end\n\n"
Give me some sample code of XML External entities in ruby ?,"XML External entities\n\n\n Example:\n\n \n // Typically parsing XML files is done by using external gems like Nokogiri. In Nokogiri using external entities\n // is turned off by default. Always check it in the documentation. If you want to be sure turn off parsing external\n // entities explicitly.\n\n // Example of turning off parsing external entities in Nokogiri gem\n require 'nokogiri'\n xml = '<!DOCTYPE root [ <!ENTITY ent SYSTEM \""file:///etc/passwd\""> ]>\n<root><e>&ent;</e></root>'\n // ""nonet"" stands for No External Entities\n parsed_xml = Nokogiri::XML.parse(xml) { |config| config.nonet } \n \n // parsed_xml.children.children.children.text should return now empty string\n"
Give me some sample code of Anti clickjacking headers in ruby ?,"Anti clickjacking headers\n\n\n Example:\n\n\n // Ruby on Rails sets XFrameOptions header with ""SAMEORIGIN"" option by default.\n // If in your case it doesn't or you want to enforce ""DENY"" options, you can add that headers manually.\n\n // Add the following code to APP_DIR/config/environments/production.rb\n\n config.action_dispatch.default_headers = {\n 'XFrameOptions' => 'DENY' // this will completely prevent your page from being displayed in an iframe.\n }\n\n // OR\n\n config.action_dispatch.default_headers = {\n 'XFrameOptions' => 'SAMEORIGIN' // this will completely prevent your page from being displayed in an iframe on other sites.\n }\n"
Give me some sample code of Debug enabling in ruby ?,"Debug enabling\n\n\n Example:\n\n \n //By default debugging is disabled if the environment is set to ""production"".\n //If you want to make sure check APP_DIR/config/environments/production.rb for:\n config.consider_all_requests_local = false // ""true"" enables debugging"
Give me some sample code of Login functionality in ruby ?,"Login functionality\n\n\n Example:\n\n\n // Like in other authenthication cases Ruby on Rails use a gem called ""Devise"" to handle login functionality. \n // Use generators below to create required staff\n $> rails generate devise:install\n $> rails g devise:views\n $> rails generate devise User\n $> rake db:migrate\n\n // Update your User model in APP_DIR/app/models/user.rb\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable, :validatable\n\n // Set routes in APP_DIR/config/routes.rb\n devise_for :users\n\n // And finally create login view\n <h2>Log in</h2>\n\n <%= simple_form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>\n <div class=""forminputs"">\n <%= f.input :email, required: false, autofocus: true %>\n // Remember turning off autocomplete on password field\n <%= f.input :password, required: false, autocomplete: off %> \n <%= f.input :remember_me, as: :boolean if devise_mapping.rememberable? %>\n </div>\n\n <div class=""formactions"">\n <%= f.button :submit, ""Log in"" %>\n </div>\n <% end %>\n\n <%= render ""devise/shared/links"" %>\n\n // Also, remember turning on HTTPS on login site and setting cookies properly. More info: Secure Session Cookies."
Give me some sample code of User registration SQL truncation in ruby ?,"User registration SQL truncation\n\n\n Example:\n\n\n // Ruby on Rails uses special gem called Devise to handle whole registration (and authentication). This gem makes you invulnerable to SQL truncation.\n // Always remember to enforce better security in the User model (more info: ""Password storage""). It is highly recommended to enforce\n // SSL connection during user's signing up and signing in (more info: ""Secure Session Cookies"").\n\n // Examples of models, views and controllers containing registration\n\n // User model\n class User < ApplicationRecord\n has_many :posts\n // Include default devise modules. Others available are:\n // :confirmable, :lockable, :timeoutable and :omniauthable\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable\n end\n\n\n // Registration//new view\n <h2>Sign up</h2>\n\n <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>\n <%= f.error_notification %>\n\n <div class=""forminputs"">\n <%= f.input :email, required: true, autofocus: true %>\n <%= f.input :password, required: true, hint: (""//{@minimum_password_length} characters minimum"" if @minimum_password_length) %>\n <%= f.input :password_confirmation, required: true %>\n </div>\n\n <div class=""formactions"">\n <%= f.button :submit, ""Sign up"" %>\n </div>\n <% end %>\n\n <%= render ""devise/shared/links"" %>\n\n // Devise has it own registration controller that can be seen here: https://github.com/plataformatec/devise/blob/master/app/controllers/devise/registrations_controller.rb"
Give me some sample code of Encoder in ruby ?,"Encoder\n\n\n Example:\n\n\n // This is the encoder method for whenever you have to allow certain\n // possibly dangerous characters into your Give me some sample code of i.e names such as O'reily\n\n class Encoder\n // include SanitizeHelper for the implementation of sanitize method\n include ActionView::Helpers::SanitizeHelper\n // and this one to provide sign_out\n include Devise::Controllers::SignInOut\n\n PATTERN = '^[azAZ09%s]+$'.freeze\n\n attr_reader :store\n\n // If your application is running on multiple processes or machines make sure you use a keyvalue backend for Rails cache\n // like Redis or Memcached. If you're using Unicorn/Passenger/Puma in clustered mode you're already running multiple processes!\n // Alternatively you can provide your own implementation backed by either a keyvalue store or just your database.\n def initialize(store = Rails.cache)\n @store = store\n end\n\n def encode(user, input, allowed_characters)\n pattern = PATTERN % allowed_characters\n\n regex = Regexp.compile(pattern)\n\n unless input =~ regex\n cache_key = cache_key(user)\n store.increment(cache_key)\n\n // Every bad input validation has to be logged.\n Rails.logger.warn ""//{user.id} > Bad user input""\n\n if store.fetch(cache_key) >= 3\n sign_out(user)\n store.delete(cache_key)\n end\n\n return false\n end\n\n sanitize(input)\n end\n\n private\n\n def cache_key(user)\n ""//{user.cache_key}/input_counter""\n end\n end\n"
Give me some sample code of Aggregate user controls in ruby ?,"Aggregate user controls\n\n\n Example:\n\n\n // First of all, you have to know that Devise gem is AUTHENTICATION gem, not AUTHORIZATION.\n // Using ""before_action"" in specific controllers will provide only authentication.\n\n // It is recommended to use authorization gem like Pundit over creating your own code\n // more info: https://github.com/elabs/pundit\n\n // Quick introduction:\n\n // 1. Install gem and run generator `rails g pundit:install`\n // 2. Create policies and update controllers\n // Policy example\n class PostPolicy\n attr_reader :user, :post\n\n def initialize(user, post)\n @user = user\n @post = post\n end\n\n def update?\n user.admin? || !post.published?\n end\n end\n\n // Controller authorization example\n def admin_list\n authorize Post // we don't have a particular post to authorize\n // Rest of controller action\n end\n\n // 3. Make scopes for policies\n // 4. Ensure if policies and scopes are used\n"
Give me some sample code of Password Storage(salting stretching hashing) in ruby ?,"Password storage (salting sretching hashing)\n\n\n Example:\n\n \n // It is highly recommended to use Devise gem that handles authentication on your RoR app.\n // more info: https://github.com/plataformatec/devise\n\n // Configure the gem in APP_DIR/config/initializers/devise.rb\n config.stretches = Rails.env.test? ? 3 : 11\n\n // By default password hashing algorithm is set to BCRYPT which is good it means that u can\n // leave it with default settings\n\n // Now update your model\n // For example:\n class User < ApplicationRecord\n has_many :posts\n\n // add :database_authenticatable to turn on password safe storing\n devise :database_authenticatable, :registerable,\n :recoverable, :rememberable, :trackable, :secure_validatable\n end\n\n"
Give me some sample code of Sandboxing in ruby ?,"Sandboxing\n\n\n Example:\n\n\n<iframe sandbox=""value"">\n\n // sandbox="""" Applies all restrictions\n // allowforms Reenables form submission\n // allowpointerlock Reenables APIs\n // allowpopups Reenables popups\n // allowsameorigin Allows the iframe content to be treated as being from the same origin\n // allowscripts Reenables scripts\n // allowtopnavigation Allows the iframe content to navigate its toplevel browsing context"
Give me some sample code of Identifier based authorization in ruby ?,"Identifier based authorization\n\n\n Example:\n\n\n def identifier_based_authorization(input_parameter, pattern, id_to_auth)\n validator = Validation.new\n\n // First, we want to filter the filenames for expected values. For this example we use only numeric\n // Whenever the values are tampered with, we can assume an attacker is trying to inject malicious input.\n // for more information about validation see ""input validations"" in the code examples:\n return false unless validator.numeric?(input_parameter)\n\n // Second, we want to whitelist the filenames for expected values, in this example they are,\n // file1,file2 etc.. for more information about whitelisting see ""whitelisting"" in the code examples:\n // pass the pattern to the check pattern, for instance pattern = %w[file1 file2]\n return false unless check_pattern(input_parameter, pattern)\n\n // Whenever you are checking whether a user is restricted to review certain data,\n // the access restrictions should be processed serverside.\n user = User.find_by(auth_id: input_parameter)\n\n return true if id_to_auth == user.auth_id\n\n false\n end\n"
Give me some sample code of Charsets in ruby ?,"XXSSProtection header\n\n\n Example:\n\n\n // Ruby on Rails sets encoding header with ""utf8"" option by default.\n // If in your case it doesn't or you want to set different encoding, you can do it manually.\n\n // Add the following code to APP_DIR/config/environments/production.rb\n config.encoding = 'utf8'\n"
Give me some sample code of Content Type Headers in ruby ?,"XContentType header\n\n\n Example:\n\n\n // Ruby on Rails sets XContentTypeOptions header with ""nosniff"" option by default.\n // If in your case it doesn't, you can add the header manually.\n\n // Add the following code to APP_DIR/app/controllers/YOUR_CONTROLLER.rb\n\n class YourController < ApplicationController\n def rendering_inline\n render inline: 'Content of the file', content_type: 'application/foo'\n end\n\n def rendering_from_file\n render file: filename, content_type: 'application/foo'\n end\n end\n\n"
Give me some sample code of XML Injection Prevention in ruby ?,"XML Injection Prevention\n\n\n Example:\n\n\n // Whenever you are using XML parsers you must sanitize or encode all userinput before\n // including this input into your XML file.\n\n // Some methods like below, the Dom document already encodes the input before storing it\n // into the XML. But beware, since this encoded input is still a threat whenever you are\n // displaying the this data on screen as HTML Output. This encoded data should be escaped\n // at all times before displaying.\n\n // Whenever your XML function does not encode your data on the fly, you may want to write\n // your own function for achieving this. See the code examples and search for ""Input encoding""\n // for more detailed information.\n\n require 'nokogiri'\n\n xml_doc = Nokogiri::XML('<employees><employee><name></name></employee></employees>')\n\n xml_doc.css('employees employee name').first.content = params[:name]\n\n // In Nokogiri gem HTML Encoding is done by default. Printing xml_doc.to_xml should return\n // => ""<?xml version=\""1.0\""?>\n<employees>\n <employee>\n <name><script>alert(\""1\"")</script></name>\n </employee>\n</employees>\n""\n\n // Always check if user input is properly encoded, because displaying XML may lead to multiple vulnerabilities, for instance XSS.\n"
Give me some sample code of Crossdomain XML in ruby ?,"Crossdomain XML\n\n\n Example:\n\n\n // A bad example of a Crossdomain XML would be:\n\n <?xml version=""1.0"" ?>\n <crossdomainpolicy>\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowaccessfrom domain=""*""/>\n <allowhttprequestheadersfrom domain=""*"" headers=""*""/>\n </crossdomainpolicy>\n\n // Because it allows acces from all other domains.\n\n // Instead of this approach you might want to use the following restrictions. \n // Example by twitter's Crossdomain XML:\n\n <?xml version=""1.0"" encoding=""UTF8""?>\n <crossdomainpolicy xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" \n xsi:noNamespaceSchemaLocation=""http://www.adobe.com/xml/schemas/PolicyFile.xsd"">\n <allowaccessfrom domain=""twitter.com"" />\n <allowaccessfrom domain=""api.twitter.com"" />\n <allowaccessfrom domain=""search.twitter.com"" />\n <allowaccessfrom domain=""static.twitter.com"" />\n <sitecontrol permittedcrossdomainpolicies=""masteronly""/>\n <allowhttprequestheadersfrom domain=""*.twitter.com"" headers=""*"" secure=""true""/>\n </crossdomainpolicy>"
Give me some sample code of File upload in ruby ?,"File upload\n\n\n Example:\n\n\n // Most of Ruby on Rails developers use specific gem to handle file upload. The most popular gem is to do this is Paperclip.\n\n // To install Paperclip follow instructions at https://github.com/thoughtbot/paperclip\n // Configuring gem is typical creating proper model, views and controller.\n\n // Now something about security create strong validation rules in model. For example:\n\n // File: APP_DIR/app/models/photo.rb\n validates_attachment :image,\n presence: true, validates if file is proper image\n content_type: {content_type: %w(image/jpeg image/gif image/png)}, whitelist content type\n size: {in: 0..10.kilobytes} set maximum size of uploading\n validates_attachment_file_name :image, matches: [/^[azAZ09]$/] allow only alphanumerical file names\n // Always upload files outside the website root directory \n\n // Paperclip logs every upload action by default. If you want to turn logging on explicite add following line of code\n // to your APP_DIR/config/environments/production.rb\n Paperclip.options[:log] = true\n"
Give me some sample code of Privilege based authentication in ruby ?,"Aggregate user controls\n\n\n Example:\n\n\n // First of all, you have to know that Devise gem is AUTHENTICATION gem, not AUTHORIZATION.\n // Using ""before_action"" in specific controllers will provide only authentication.\n\n // It is recommended to use authorization gem like Pundit over creating your own code\n // more info: https://github.com/elabs/pundit\n\n // However, for simple privilege based authentication we can use simpler gem like Petergate\n // more info: https://github.com/elorest/petergate\n\n // Quick introduction to Petergate gem:\n // 1. Use this generators\n $> rails g petergate:install\n $> rake db:migrate\n // 2. Configure roles in user.rb\n petergate(roles: [:admin, :editor], multiple: false)\n // 3. Setup permissions in the specific controller\n def YourController < ApplicationController\n access all: [:show, :index], user: {except: [:destroy]}, company_admin: :all\n end\n"
Give me some sample code of HTML Output in ruby ?,"HTML Output\n\n\n Example:\n\n\n // Whenever user input is displayed in the application, whether, as content or a parameter value\n // submitted towards the url, all user input should be properly escaped to prevent XSS injections.\n\n // For normal output it is recommended use sanitize with the most restrict options\n <%= sanitize(test, tags: [], attributes: []) %>\n\n // Security consists of different layers of protection, in order to guarantee the integrity\n // of your application. This means that the value submitted from the user should\n // already be sanitized before being submitted towards the database in order to prevent XSS.\n // As an example, you are expecting only alphanumerical value here:\n\n unless /^[azAZ09]+$/ =~ sanitize(input, tags: [], attributes: [])\n //do logout here\n end\n\n // This type of approach should be used whenever you are allowing userinput in\n // your DOM like for example, let's say a user was allowed to upload an image and\n // set an alt text. when you do not sanitize his input a possible attack string could be:\n\n this is an image"" onload=""alert('XSS');""\n\n // whenever this string now is added to the users image this will be the outcome, leading\n // to xss:\n\n <img src=""http://image.com/image.jpg"" alt=""this is an image"" onload=""alert('XSS')"""" />\n\n // After this sanitation malicious code can no longer exist in the post_params array.\n\n // Another possibility for attackers to execute an XSS injection, is to pass malicious code directly\n // into the URL by means of a ""href"", e.g.:\n // javascript:alert(document.cookie);\n // or\n // data:text/html;base64,base64xssinjection\n\n // In the following scenario escaping with sanitize() is not sufficient to block the injection.\n // By checking the URL to see if it starts with either http:// or https:// whenever a link has\n // been submitted to the web application by a user."