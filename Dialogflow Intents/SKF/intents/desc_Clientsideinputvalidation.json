{
  "id": "988fd060-71e0-47c9-a8bd-86d1a9f60d61",
  "name": "desc_Clientsideinputvalidation",
  "auto": true,
  "contexts": [],
  "responses": [
    {
      "resetContexts": false,
      "affectedContexts": [],
      "parameters": [],
      "messages": [
        {
          "type": 0,
          "platform": "facebook",
          "lang": "en",
          "speech": []
        },
        {
          "type": 0,
          "platform": "facebook",
          "lang": "en",
          "speech": []
        },
        {
          "type": 0,
          "lang": "en",
          "speech": "\"As web applications become more advanced, an increasing amount of HTML is generated by JavaScript on the clientside rather than by the server. Anytime content needs to be changed without refreshing the entire page, the update must be performed using JavaScript.Most notably, this is the case when a page is updated after an AJAX request.XSS vulnerabilities can be present not only in your website\u0027s serverside code, but also in your website\u0027s clientside JavaScript code. Consequently, even with completely secure serverside code, the clientside code might still unsafely include user input in a DOM update after the page has loaded. If this happens, the clientside code has enabled an XSS attack through no fault of the serverside code. \","
        }
      ],
      "defaultResponsePlatforms": {},
      "speech": []
    }
  ],
  "priority": 500000,
  "webhookUsed": false,
  "webhookForSlotFilling": false,
  "fallbackIntent": false,
  "events": []
}